{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","components/ProjectCard.js","views/project/ProjectBrowseView/Header.js","views/project/ProjectBrowseView/Filter/MultiSelect.js","views/project/ProjectBrowseView/Filter/index.js","views/project/ProjectBrowseView/Results.js","views/project/ProjectBrowseView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","image","height","backgroundColor","palette","background","dark","likedButton","color","colors","red","membersIcon","marginLeft","spacing","marginRight","ProjectCard","className","project","rest","classes","useState","isLiked","setLiked","likesCount","setLikesCount","clsx","p","display","alignItems","mt","alt","src","author","avatar","ml","component","RouterLink","to","variant","title","moment","updatedAt","fromNow","pb","px","caption","py","container","justify","item","numeral","budget","format","currency","location","type","pl","pr","onClick","prevLikes","fontSize","membersCount","flexGrow","value","rating","size","readOnly","Header","Grid","Breadcrumbs","separator","aria-label","Link","Typography","Button","startIcon","SvgIcon","menuItem","padding","formControlLabel","width","margin","MultiSelect","label","options","onChange","anchorRef","openMenu","setOpenMenu","handleOptionToggle","event","newValue","target","checked","push","filter","ref","Menu","anchorEl","elevation","onClose","open","PaperProps","style","option","MenuItem","key","FormControlLabel","control","Checkbox","indexOf","selectOptions","searchInput","chip","Filter","inputValue","setInputValue","chips","setChips","handleMultiSelectChange","Card","Box","Input","disableUnderline","fullWidth","persist","onKeyUp","keyCode","includes","prevChips","placeholder","Divider","flexWrap","Chip","onDelete","prevChip","handleChipDelete","defaultChecked","position","bottom","left","content","primary","main","sortButton","textTransform","letterSpacing","Results","projects","sortRef","openSort","setOpenSort","selectedSort","setSelectedSort","mode","setMode","justifyContent","mb","length","ToggleButtonGroup","exclusive","ToggleButton","id","md","sm","xs","Pagination","count","ListItemText","minHeight","paddingTop","paddingBottom","ProjectBrowseView","isMountedRef","setProjects","getProjects","useCallback","a","axios","get","response","data","console","error","Page","Container","maxWidth"],"mappings":"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","file":"static/js/41.fa9c1004.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\r\n\r\nconst useIsMountedRef = () => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMountedRef;\r\n","const getInitials = (name = '') => {\r\n  return name\r\n    .replace(/\\s+/, ' ')\r\n    .split(' ')\r\n    .slice(0, 2)\r\n    .map((v) => v && v[0].toUpperCase())\r\n    .join('');\r\n};\r\n\r\nexport default getInitials;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardMedia,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  SvgIcon,\r\n  Tooltip,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Rating } from '@material-ui/lab';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { Users as UsersIcon } from 'react-feather';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  image: {\r\n    height: 200,\r\n    backgroundColor: theme.palette.background.dark\r\n  },\r\n  likedButton: {\r\n    color: colors.red[600]\r\n  },\r\n  membersIcon: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProjectCard = ({ className, project, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [isLiked, setLiked] = useState(project.isLiked);\r\n  const [likesCount, setLikesCount] = useState(project.likesCount);\r\n\r\n  const handleLike = () => {\r\n    setLiked(true);\r\n    setLikesCount((prevLikes) => prevLikes + 1);\r\n  };\r\n\r\n  const handleUnlike = () => {\r\n    setLiked(false);\r\n    setLikesCount((prevLikes) => prevLikes - 1);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box p={3}>\r\n        <CardMedia\r\n          className={classes.image}\r\n          image={project.image}\r\n        />\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          mt={2}\r\n        >\r\n          <Avatar\r\n            alt=\"Author\"\r\n            src={project.author.avatar}\r\n          >\r\n            {getInitials(project.author.name)}\r\n          </Avatar>\r\n          <Box ml={2}>\r\n            <Link\r\n              color=\"textPrimary\"\r\n              component={RouterLink}\r\n              to=\"#\"\r\n              variant=\"h5\"\r\n            >\r\n              {project.title}\r\n            </Link>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n            >\r\n              by\r\n              {' '}\r\n              <Link\r\n                color=\"textPrimary\"\r\n                component={RouterLink}\r\n                to=\"#\"\r\n                variant=\"h6\"\r\n              >\r\n                {project.author.name}\r\n              </Link>\r\n              {' '}\r\n              | Updated\r\n              {' '}\r\n              {moment(project.updatedAt).fromNow()}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        pb={2}\r\n        px={3}\r\n      >\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {project.caption}\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        py={2}\r\n        px={3}\r\n      >\r\n        <Grid\r\n          alignItems=\"center\"\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h5\"\r\n              color=\"textPrimary\"\r\n            >\r\n              {numeral(project.budget).format(`${project.currency}0,0.00`)}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n            >\r\n              Budget\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h5\"\r\n              color=\"textPrimary\"\r\n            >\r\n              {project.location}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n            >\r\n              Location\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h5\"\r\n              color=\"textPrimary\"\r\n            >\r\n              {project.type}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n            >\r\n              Type\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Divider />\r\n      <Box\r\n        py={2}\r\n        pl={2}\r\n        pr={3}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n      >\r\n        {isLiked ? (\r\n          <Tooltip title=\"Unlike\">\r\n            <IconButton\r\n              className={classes.likedButton}\r\n              onClick={handleUnlike}\r\n            >\r\n              <FavoriteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Like\">\r\n            <IconButton onClick={handleLike}>\r\n              <FavoriteBorderIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          color=\"textSecondary\"\r\n        >\r\n          {likesCount}\r\n        </Typography>\r\n        <SvgIcon\r\n          fontSize=\"small\"\r\n          color=\"action\"\r\n          className={classes.membersIcon}\r\n        >\r\n          <UsersIcon />\r\n        </SvgIcon>\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          color=\"textSecondary\"\r\n        >\r\n          {project.membersCount}\r\n        </Typography>\r\n        <Box flexGrow={1} />\r\n        <Rating\r\n          value={project.rating}\r\n          size=\"small\"\r\n          readOnly\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n  className: PropTypes.string,\r\n  project: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Breadcrumbs,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  SvgIcon,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { PlusCircle as PlusIcon } from 'react-feather';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      alignItems=\"center\"\r\n      container\r\n      justify=\"space-between\"\r\n      spacing={3}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Grid item>\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app\"\r\n            component={RouterLink}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app/projects\"\r\n            component={RouterLink}\r\n          >\r\n            Projects\r\n          </Link>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textPrimary\"\r\n          >\r\n            Browse\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Typography\r\n          variant=\"h3\"\r\n          color=\"textPrimary\"\r\n        >\r\n          See the latest opportunities\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          color=\"secondary\"\r\n          component={RouterLink}\r\n          to=\"/app/projects/create\"\r\n          variant=\"contained\"\r\n          startIcon={\r\n            <SvgIcon fontSize=\"small\">\r\n              <PlusIcon />\r\n            </SvgIcon>\r\n          }\r\n        >\r\n          Add new project\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, {\r\n  useState,\r\n  useRef\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Menu,\r\n  MenuItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  menuItem: {\r\n    padding: 0\r\n  },\r\n  formControlLabel: {\r\n    padding: theme.spacing(0.5, 2),\r\n    width: '100%',\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nconst MultiSelect = ({\r\n  label,\r\n  options,\r\n  value,\r\n  onChange\r\n}) => {\r\n  const classes = useStyles();\r\n  const anchorRef = useRef(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  const handleOptionToggle = (event) => {\r\n    let newValue = [...value];\r\n\r\n    if (event.target.checked) {\r\n      newValue.push(event.target.value);\r\n    } else {\r\n      newValue = newValue.filter((item) => item !== event.target.value);\r\n    }\r\n\r\n    if (onChange) {\r\n      onChange(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleMenuOpen}\r\n        ref={anchorRef}\r\n      >\r\n        {label}\r\n        <ArrowDropDownIcon />\r\n      </Button>\r\n      <Menu\r\n        anchorEl={anchorRef.current}\r\n        elevation={1}\r\n        onClose={handleMenuClose}\r\n        open={openMenu}\r\n        PaperProps={{ style: { width: 250 } }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem\r\n            className={classes.menuItem}\r\n            key={option}\r\n          >\r\n            <FormControlLabel\r\n              className={classes.formControlLabel}\r\n              control={(\r\n                <Checkbox\r\n                  checked={value.indexOf(option) > -1}\r\n                  onChange={handleOptionToggle}\r\n                  value={option}\r\n                />\r\n              )}\r\n              label={option}\r\n            />\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nMultiSelect.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  options: PropTypes.array.isRequired,\r\n  value: PropTypes.array.isRequired\r\n};\r\n\r\nexport default MultiSelect;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Chip,\r\n  Divider,\r\n  FormControlLabel,\r\n  Input,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MultiSelect from './MultiSelect';\r\n\r\nconst selectOptions = [\r\n  {\r\n    label: 'Type',\r\n    options: [\r\n      'Freelance',\r\n      'Full Time',\r\n      'Part Time',\r\n      'Internship']\r\n  },\r\n  {\r\n    label: 'Level',\r\n    options: ['Novice', 'Expert']\r\n  },\r\n  {\r\n    label: 'Location',\r\n    options: [\r\n      'Africa',\r\n      'Asia',\r\n      'Australia',\r\n      'Europe',\r\n      'North America',\r\n      'South America'\r\n    ]\r\n  },\r\n  {\r\n    label: 'Roles',\r\n    options: ['Android', 'Web Developer', 'iOS']\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  searchInput: {\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Filter = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [chips, setChips] = useState([\r\n    'Freelance',\r\n    'Full Time',\r\n    'Novice',\r\n    'Europe',\r\n    'Android',\r\n    'Web Developer'\r\n  ]);\r\n\r\n  const handleInputChange = (event) => {\r\n    event.persist();\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleInputKeyup = (event) => {\r\n    event.persist();\r\n\r\n    if (event.keyCode === 13 && inputValue) {\r\n      if (!chips.includes(inputValue)) {\r\n        setChips((prevChips) => [...prevChips, inputValue]);\r\n        setInputValue('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChipDelete = (chip) => {\r\n    setChips((prevChips) => prevChips.filter((prevChip) => chip !== prevChip));\r\n  };\r\n\r\n  const handleMultiSelectChange = (value) => {\r\n    setChips(value);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        p={2}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n      >\r\n        <SearchIcon />\r\n        <Input\r\n          disableUnderline\r\n          fullWidth\r\n          className={classes.searchInput}\r\n          onChange={handleInputChange}\r\n          onKeyUp={handleInputKeyup}\r\n          placeholder=\"Enter a keyword\"\r\n          value={inputValue}\r\n        />\r\n      </Box>\r\n      <Divider />\r\n      <Box\r\n        p={2}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        flexWrap=\"wrap\"\r\n      >\r\n        {chips.map((chip) => (\r\n          <Chip\r\n            className={classes.chip}\r\n            key={chip}\r\n            label={chip}\r\n            onDelete={() => handleChipDelete(chip)}\r\n          />\r\n        ))}\r\n      </Box>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        flexWrap=\"wrap\"\r\n        p={1}\r\n      >\r\n        {selectOptions.map((option) => (\r\n          <MultiSelect\r\n            key={option.label}\r\n            label={option.label}\r\n            onChange={handleMultiSelectChange}\r\n            options={option.options}\r\n            value={chips}\r\n          />\r\n        ))}\r\n        <Box flexGrow={1} />\r\n        <FormControlLabel\r\n          control={(\r\n            <Checkbox defaultChecked />\r\n          )}\r\n          label=\"In network\"\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Filter;\r\n","import React, {\r\n  useState,\r\n  useRef\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  Pagination\r\n} from '@material-ui/lab';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ProjectCard from 'src/components/ProjectCard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  title: {\r\n    position: 'relative',\r\n    '&:after': {\r\n      position: 'absolute',\r\n      bottom: -8,\r\n      left: 0,\r\n      content: '\" \"',\r\n      height: 3,\r\n      width: 48,\r\n      backgroundColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  sortButton: {\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, projects, ...rest }) => {\r\n  const classes = useStyles();\r\n  const sortRef = useRef(null);\r\n  const [openSort, setOpenSort] = useState(false);\r\n  const [selectedSort, setSelectedSort] = useState('Most popular');\r\n  const [mode, setMode] = useState('grid');\r\n\r\n  const handleSortOpen = () => {\r\n    setOpenSort(true);\r\n  };\r\n\r\n  const handleSortClose = () => {\r\n    setOpenSort(false);\r\n  };\r\n\r\n  const handleSortSelect = (value) => {\r\n    setSelectedSort(value);\r\n    setOpenSort(false);\r\n  };\r\n\r\n  const handleModeChange = (event, value) => {\r\n    setMode(value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        flexWrap=\"wrap\"\r\n        mb={2}\r\n      >\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Showing\r\n          {' '}\r\n          {projects.length}\r\n          {' '}\r\n          projects\r\n        </Typography>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Button\r\n            className={classes.sortButton}\r\n            onClick={handleSortOpen}\r\n            ref={sortRef}\r\n          >\r\n            {selectedSort}\r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n          <ToggleButtonGroup\r\n            exclusive\r\n            onChange={handleModeChange}\r\n            size=\"small\"\r\n            value={mode}\r\n          >\r\n            <ToggleButton value=\"grid\">\r\n              <ViewModuleIcon />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n      </Box>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n      >\r\n        {projects.map((project) => (\r\n          <Grid\r\n            item\r\n            key={project.id}\r\n            md={mode === 'grid' ? 4 : 12}\r\n            sm={mode === 'grid' ? 6 : 12}\r\n            xs={12}\r\n          >\r\n            <ProjectCard project={project} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Box\r\n        mt={6}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Pagination count={3} />\r\n      </Box>\r\n      <Menu\r\n        anchorEl={sortRef.current}\r\n        onClose={handleSortClose}\r\n        open={openSort}\r\n        elevation={1}\r\n      >\r\n        {['Most recent', 'Popular', 'Price high', 'Price low', 'On sale'].map(\r\n          (option) => (\r\n            <MenuItem\r\n              key={option}\r\n              onClick={() => handleSortSelect(option)}\r\n            >\r\n              <ListItemText primary={option} />\r\n            </MenuItem>\r\n          )\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  projects: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","import React, {\r\n  useCallback,\r\n  useState,\r\n  useEffect\r\n} from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport Header from './Header';\r\nimport Filter from './Filter';\r\nimport Results from './Results';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst ProjectBrowseView = () => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const getProjects = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/projects/projects');\r\n  \r\n      if (isMountedRef.current) {\r\n        setProjects(response.data.projects);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getProjects();\r\n  }, [getProjects]);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Project List\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Header />\r\n        <Box mt={3}>\r\n          <Filter />\r\n        </Box>\r\n        <Box mt={6}>\r\n          <Results projects={projects} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default ProjectBrowseView;\r\n"],"sourceRoot":""}