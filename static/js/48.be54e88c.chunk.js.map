{"version":3,"sources":["hooks/useIsMountedRef.js","views/order/OrderDetailsView/Header.js","views/order/OrderDetailsView/OrderInfo.js","views/order/OrderDetailsView/OrderItems.js","views/order/OrderDetailsView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","root","Header","className","rest","classes","Grid","clsx","container","justify","spacing","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","Button","startIcon","SvgIcon","statusOptions","OrderInfo","order","useState","status","setStatus","Card","CardHeader","title","Divider","Table","TableBody","TableRow","TableCell","customer","name","address1","city","country","id","number","moment","createdAt","format","coupon","numeral","totalAmount","currency","TextField","fullWidth","onChange","event","persist","target","value","select","SelectProps","native","map","option","key","CardActions","OrderItems","orderItems","Box","minWidth","TableHead","quantity","billingCycle","unitAmount","TablePagination","count","length","onChangePage","onChangeRowsPerPage","page","rowsPerPage","rowsPerPageOptions","defaultProps","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","OrderDetailsView","isMountedRef","setOrder","getOrder","useCallback","a","axios","get","response","data","console","error","Page","Container","maxWidth","mt","md","xl","xs","items"],"mappings":"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","file":"static/js/48.be54e88c.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\r\n\r\nconst useIsMountedRef = () => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMountedRef;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Breadcrumbs,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  SvgIcon,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Edit as EditIcon } from 'react-feather';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      className={clsx(classes.root, className)}\r\n      container\r\n      justify=\"space-between\"\r\n      spacing={3}\r\n      {...rest}\r\n    >\r\n      <Grid item>\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app\"\r\n            component={RouterLink}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app/management\"\r\n            component={RouterLink}\r\n          >\r\n            Management\r\n          </Link>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textPrimary\"\r\n          >\r\n            Orders\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Typography\r\n          variant=\"h3\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Order Details\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          startIcon={\r\n            <SvgIcon fontSize=\"small\">\r\n              <EditIcon />\r\n            </SvgIcon>\r\n          }\r\n        >\r\n          Edit\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  Divider,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ReceiptIcon from '@material-ui/icons/ReceiptOutlined';\r\n\r\nconst statusOptions = ['Canceled', 'Completed', 'Rejected'];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst OrderInfo = ({ className, order, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [status, setStatus] = useState(statusOptions[0]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Order info\" />\r\n      <Divider />\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell>\r\n              Customer\r\n            </TableCell>\r\n            <TableCell>\r\n              <Link\r\n                component={RouterLink}\r\n                to=\"/app/management/customers/1\"\r\n              >\r\n                {order.customer.name}\r\n              </Link>\r\n              <div>{order.customer.address1}</div>\r\n              <div>{order.customer.city}</div>\r\n              <div>{order.customer.country}</div>\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              ID\r\n            </TableCell>\r\n            <TableCell>\r\n              #\r\n              {order.id}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              Number\r\n            </TableCell>\r\n            <TableCell>\r\n              {order.number}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              Date\r\n            </TableCell>\r\n            <TableCell>\r\n              {moment(order.createdAt).format('DD/MM/YYYY HH:MM')}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              Promotion Code\r\n            </TableCell>\r\n            <TableCell>\r\n              {order.coupon ? order.coupon : 'N/A'}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              Total Amount\r\n            </TableCell>\r\n            <TableCell>\r\n              {numeral(order.totalAmount).format(`${order.currency}0,0.00`)}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              Status\r\n            </TableCell>\r\n            <TableCell>\r\n              <TextField\r\n                fullWidth\r\n                name=\"option\"\r\n                onChange={handleChange}\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={status}\r\n                variant=\"outlined\"\r\n              >\r\n                {statusOptions.map((option) => (\r\n                  <option\r\n                    key={option}\r\n                    value={option}\r\n                  >\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n      <CardActions>\r\n        <Button startIcon={<ReceiptIcon />}>\r\n          Resend invoice\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderInfo.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default OrderInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport numeral from 'numeral';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst OrderItems = ({ className, orderItems, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Order items\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={700}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Description\r\n                </TableCell>\r\n                <TableCell>\r\n                  Billing Cycle\r\n                </TableCell>\r\n                <TableCell>\r\n                  Amount\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orderItems.map((item) => (\r\n                <TableRow key={item.id}>\r\n                  <TableCell>\r\n                    {item.name}\r\n                    {' '}\r\n                    x\r\n                    {' '}\r\n                    {item.quantity}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {item.billingCycle}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {numeral(item.unitAmount).format(`${item.currency}0,0.00`)}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={orderItems.length}\r\n        onChangePage={() => {}}\r\n        onChangeRowsPerPage={() => {}}\r\n        page={0}\r\n        rowsPerPage={5}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderItems.propTypes = {\r\n  className: PropTypes.string,\r\n  orderItems: PropTypes.array.isRequired\r\n};\r\n\r\nOrderItems.defaultProps = {\r\n  orderItems: []\r\n};\r\n\r\nexport default OrderItems;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport Page from 'src/components/Page';\r\nimport Header from './Header';\r\nimport OrderInfo from './OrderInfo';\r\nimport OrderItems from './OrderItems';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst OrderDetailsView = () => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [order, setOrder] = useState(null);\r\n\r\n  const getOrder = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/orders/1');\r\n\r\n      if (isMountedRef.current) {\r\n        setOrder(response.data.order);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getOrder();\r\n  }, [getOrder]);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Order Details\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Header />\r\n        <Box mt={2}>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={4}\r\n              xl={3}\r\n              xs={12}\r\n            >\r\n              <OrderInfo order={order} />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={8}\r\n              xl={9}\r\n              xs={12}\r\n            >\r\n              <OrderItems orderItems={order.items} />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default OrderDetailsView;\r\n"],"sourceRoot":""}