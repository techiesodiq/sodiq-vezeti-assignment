{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","components/Label.js","views/invoice/InvoiceListView/Header.js","views/invoice/InvoiceListView/Results.js","views/invoice/InvoiceListView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","action","marginBottom","marginLeft","Header","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Box","mt","Button","startIcon","SvgIcon","statusOptions","id","sortOptions","value","label","queryField","width","statusField","flexBasis","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","background","default","bulkAction","avatar","colors","red","common","white","Results","invoices","useState","selectedInvoices","setSelectedInvoices","page","setPage","limit","setLimit","query","setQuery","sort","setSort","status","filters","setFilters","handleSelectAllInvoices","event","target","checked","invoice","filteredInvoices","filter","matches","containsQuery","forEach","property","customer","toLowerCase","includes","applyFilters","paginatedInvoices","applyPagination","enableBulkOperations","length","selectedSomeInvoices","selectedAllInvoices","Card","p","TextField","InputProps","startAdornment","InputAdornment","onChange","persist","placeholder","select","SelectProps","native","option","key","prevFilters","statusOption","Checkbox","indeterminate","Table","TableHead","TableRow","TableCell","align","TableBody","isInvoiceSelected","hover","selected","invoiceId","prevSelected","Avatar","ml","underline","email","invoiceStatus","canceled","text","paid","pending","getStatusLabel","numeral","totalAmount","format","currency","moment","issueDate","IconButton","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","dark","minHeight","paddingTop","paddingBottom","InvoiceListView","isMountedRef","setInvoices","getInvoices","useCallback","a","axios","get","response","data","console","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/39.1ef92793.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\r\n\r\nconst useIsMountedRef = () => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMountedRef;\r\n","const getInitials = (name = '') => {\r\n  return name\r\n    .replace(/\\s+/, ' ')\r\n    .split(' ')\r\n    .slice(0, 2)\r\n    .map((v) => v && v[0].toUpperCase())\r\n    .join('');\r\n};\r\n\r\nexport default getInitials;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { fade, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontFamily: theme.typography.fontFamily,\r\n    alignItems: 'center',\r\n    borderRadius: 2,\r\n    display: 'inline-flex',\r\n    flexGrow: 0,\r\n    whiteSpace: 'nowrap',\r\n    cursor: 'default',\r\n    flexShrink: 0,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    height: 20,\r\n    justifyContent: 'center',\r\n    letterSpacing: 0.5,\r\n    minWidth: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    textTransform: 'uppercase'\r\n  },\r\n  primary: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\r\n  },\r\n  secondary: {\r\n    color: theme.palette.secondary.main,\r\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n    backgroundColor: fade(theme.palette.error.main, 0.08)\r\n  },\r\n  success: {\r\n    color: theme.palette.success.main,\r\n    backgroundColor: fade(theme.palette.success.main, 0.08)\r\n  },\r\n  warning: {\r\n    color: theme.palette.warning.main,\r\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\r\n  }\r\n}));\r\n\r\nconst Label = ({\r\n  className = '',\r\n  color = 'secondary',\r\n  children,\r\n  style,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      className={\r\n        clsx(classes.root, {\r\n          [classes[color]]: color\r\n        }, className)\r\n      }\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  SvgIcon,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  PlusCircle as PlusCircleIcon,\r\n  Download as DownloadIcon,\r\n  Upload as UploadIcon\r\n} from 'react-feather';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  action: {\r\n    marginBottom: theme.spacing(1),\r\n    '& + &': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Header = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      className={clsx(classes.root, className)}\r\n      container\r\n      justify=\"space-between\"\r\n      spacing={3}\r\n      {...rest}\r\n    >\r\n      <Grid item>\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app\"\r\n            component={RouterLink}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app/management\"\r\n            component={RouterLink}\r\n          >\r\n            Management\r\n          </Link>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textPrimary\"\r\n          >\r\n            Invoices\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Typography\r\n          variant=\"h3\"\r\n          color=\"textPrimary\"\r\n        >\r\n          All Invoices\r\n        </Typography>\r\n        <Box mt={2}>\r\n          <Button\r\n            className={classes.action}\r\n            startIcon={\r\n              <SvgIcon fontSize=\"small\">\r\n                <UploadIcon />\r\n              </SvgIcon>\r\n            }\r\n          >\r\n            Import\r\n          </Button>\r\n          <Button\r\n            className={classes.action}\r\n            startIcon={\r\n              <SvgIcon fontSize=\"small\">\r\n                <DownloadIcon />\r\n              </SvgIcon>\r\n            }\r\n          >\r\n            Export\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          className={classes.action}\r\n          startIcon={\r\n            <SvgIcon fontSize=\"small\">\r\n              <PlusCircleIcon />\r\n            </SvgIcon>\r\n          }\r\n        >\r\n          New Invoice\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  InputAdornment,\r\n  IconButton,\r\n  Link,\r\n  SvgIcon,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  Edit as EditIcon,\r\n  ArrowRight as ArrowRightIcon,\r\n  Search as SearchIcon\r\n} from 'react-feather';\r\nimport Label from 'src/components/Label';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\nconst statusOptions = [\r\n  {\r\n    id: 'all',\r\n    name: 'All'\r\n  },\r\n  {\r\n    id: 'paid',\r\n    name: 'Paid'\r\n  },\r\n  {\r\n    id: 'pending',\r\n    name: 'Pending'\r\n  },\r\n  {\r\n    id: 'canceled',\r\n    name: 'Canceled'\r\n  }\r\n];\r\n\r\nconst sortOptions = [\r\n  {\r\n    value: 'createdAt|desc',\r\n    label: 'Newest first'\r\n  },\r\n  {\r\n    value: 'createdAt|asc',\r\n    label: 'Oldest first'\r\n  }\r\n];\r\n\r\nconst getStatusLabel = (invoiceStatus) => {\r\n  const map = {\r\n    canceled: {\r\n      text: 'Canceled',\r\n      color: 'error'\r\n    },\r\n    paid: {\r\n      text: 'Paid',\r\n      color: 'success'\r\n    },\r\n    pending: {\r\n      text: 'Pending',\r\n      color: 'warning'\r\n    }\r\n  };\r\n\r\n  const { text, color } = map[invoiceStatus];\r\n\r\n  return (\r\n    <Label color={color}>\r\n      {text}\r\n    </Label>\r\n  );\r\n};\r\n\r\nconst applyFilters = (invoices, query, filters) => {\r\n  return invoices.filter((invoice) => {\r\n    let matches = true;\r\n\r\n    if (query) {\r\n      const properties = ['name', 'email'];\r\n      let containsQuery = false;\r\n\r\n      properties.forEach((property) => {\r\n        if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\r\n          containsQuery = true;\r\n        }\r\n      });\r\n\r\n      if (!containsQuery) {\r\n        matches = false;\r\n      }\r\n    }\r\n\r\n    if (filters.status && invoice.status !== filters.status) {\r\n      matches = false;\r\n    }\r\n\r\n    return matches;\r\n  });\r\n};\r\n\r\nconst applyPagination = (invoices, page, limit) => {\r\n  return invoices.slice(page * limit, page * limit + limit);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  queryField: {\r\n    width: 500\r\n  },\r\n  statusField: {\r\n    flexBasis: 200\r\n  },\r\n  bulkOperations: {\r\n    position: 'relative'\r\n  },\r\n  bulkActions: {\r\n    paddingLeft: 4,\r\n    paddingRight: 4,\r\n    marginTop: 6,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    zIndex: 2,\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  bulkAction: {\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[500],\r\n    color: colors.common.white\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, invoices, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedInvoices, setSelectedInvoices] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [query, setQuery] = useState('');\r\n  const [sort, setSort] = useState(sortOptions[0].value);\r\n  const [filters, setFilters] = useState({\r\n    status: null\r\n  });\r\n\r\n  const handleQueryChange = (event) => {\r\n    event.persist();\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleStatusChange = (event) => {\r\n    event.persist();\r\n\r\n    let value = null;\r\n\r\n    if (event.target.value !== 'all') {\r\n      value = event.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      status: value\r\n    }));\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    event.persist();\r\n    setSort(event.target.value);\r\n  };\r\n\r\n  const handleSelectAllInvoices = (event) => {\r\n    setSelectedInvoices(event.target.checked\r\n      ? invoices.map((invoice) => invoice.id)\r\n      : []);\r\n  };\r\n\r\n  const handleSelectOneInvoice = (event, invoiceId) => {\r\n    if (!selectedInvoices.includes(invoiceId)) {\r\n      setSelectedInvoices((prevSelected) => [...prevSelected, invoiceId]);\r\n    } else {\r\n      setSelectedInvoices((prevSelected) => prevSelected.filter((id) => id !== invoiceId));\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  // Usually query is done on backend with indexing solutions\r\n  const filteredInvoices = applyFilters(invoices, query, filters);\r\n  const paginatedInvoices = applyPagination(filteredInvoices, page, limit);\r\n  const enableBulkOperations = selectedInvoices.length > 0;\r\n  const selectedSomeInvoices = selectedInvoices.length > 0 && selectedInvoices.length < invoices.length;\r\n  const selectedAllInvoices = selectedInvoices.length === invoices.length;\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box p={2}>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <TextField\r\n            className={classes.queryField}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SvgIcon\r\n                    fontSize=\"small\"\r\n                    color=\"action\"\r\n                  >\r\n                    <SearchIcon />\r\n                  </SvgIcon>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            onChange={handleQueryChange}\r\n            placeholder=\"Search invoices by customer\"\r\n            value={query}\r\n            variant=\"outlined\"\r\n          />\r\n          <Box flexGrow={1} />\r\n          <TextField\r\n            label=\"Sort By\"\r\n            name=\"sort\"\r\n            onChange={handleSortChange}\r\n            select\r\n            SelectProps={{ native: true }}\r\n            value={sort}\r\n            variant=\"outlined\"\r\n          >\r\n            {sortOptions.map((option) => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}\r\n              >\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </Box>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <TextField\r\n            className={classes.statusField}\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            onChange={handleStatusChange}\r\n            select\r\n            SelectProps={{ native: true }}\r\n            value={filters.status || 'all'}\r\n            variant=\"outlined\"\r\n          >\r\n            {statusOptions.map((statusOption) => (\r\n              <option\r\n                key={statusOption.id}\r\n                value={statusOption.id}\r\n              >\r\n                {statusOption.name}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </Box>\r\n      </Box>\r\n      {enableBulkOperations && (\r\n        <div className={classes.bulkOperations}>\r\n          <div className={classes.bulkActions}>\r\n            <Checkbox\r\n              checked={selectedAllInvoices}\r\n              indeterminate={selectedSomeInvoices}\r\n              onChange={handleSelectAllInvoices}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.bulkAction}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.bulkAction}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1200}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedAllInvoices}\r\n                    indeterminate={selectedSomeInvoices}\r\n                    onChange={handleSelectAllInvoices}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Customer\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n                <TableCell>\r\n                  Amount\r\n                </TableCell>\r\n                <TableCell>\r\n                  ID\r\n                </TableCell>\r\n                <TableCell>\r\n                  Date\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {paginatedInvoices.map((invoice) => {\r\n                const isInvoiceSelected = selectedInvoices.includes(invoice.id);\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    key={invoice.id}\r\n                    selected={isInvoiceSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isInvoiceSelected}\r\n                        onChange={(event) => handleSelectOneInvoice(event, invoice.id)}\r\n                        value={isInvoiceSelected}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <Avatar className={classes.avatar}>\r\n                          {getInitials(invoice.customer.name)}\r\n                        </Avatar>\r\n                        <Box ml={2}>\r\n                          <Link\r\n                            variant=\"subtitle2\"\r\n                            color=\"textPrimary\"\r\n                            component={RouterLink}\r\n                            underline=\"none\"\r\n                            to=\"#\"\r\n                          >\r\n                            {invoice.customer.name}\r\n                          </Link>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            {invoice.customer.email}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {getStatusLabel(invoice.status)}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {numeral(invoice.totalAmount).format(`${invoice.currency}0,0.00`)}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {invoice.id}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {moment(invoice.issueDate).format('DD/MM/YYYY')}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton\r\n                        component={RouterLink}\r\n                        to=\"#\"\r\n                      >\r\n                        <SvgIcon fontSize=\"small\">\r\n                          <EditIcon />\r\n                        </SvgIcon>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        component={RouterLink}\r\n                        to=\"/app/management/invoices/1\"\r\n                      >\r\n                        <SvgIcon fontSize=\"small\">\r\n                          <ArrowRightIcon />\r\n                        </SvgIcon>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={filteredInvoices.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  invoices: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  invoices: []\r\n};\r\n\r\nexport default Results;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback\r\n} from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport Page from 'src/components/Page';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport Header from './Header';\r\nimport Results from './Results';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: 100\r\n  }\r\n}));\r\n\r\nconst InvoiceListView = () => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  const getInvoices = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/invoices');\r\n\r\n      if (isMountedRef.current) {\r\n        setInvoices(response.data.invoices);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getInvoices();\r\n  }, [getInvoices]);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Invoice List\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Header />\r\n        <Box mt={3}>\r\n          <Results invoices={invoices} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default InvoiceListView;\r\n"],"sourceRoot":""}