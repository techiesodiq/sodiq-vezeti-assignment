{"version":3,"sources":["views/kanban/KanbanView/Header.js","views/kanban/KanbanView/CardEditModal/Details.js","views/kanban/KanbanView/CardEditModal/CheckItem.js","views/kanban/KanbanView/CardEditModal/CheckItemAdd.js","views/kanban/KanbanView/CardEditModal/Checklist.js","views/kanban/KanbanView/CardEditModal/Comment.js","views/kanban/KanbanView/CardEditModal/CommentAdd.js","views/kanban/KanbanView/CardEditModal/ActionButton.js","views/kanban/KanbanView/CardEditModal/index.js","views/kanban/KanbanView/Card.js","views/kanban/KanbanView/CardAdd.js","views/kanban/KanbanView/List.js","views/kanban/KanbanView/ListAdd.js","views/kanban/KanbanView/index.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","clsx","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","Details","card","list","dispatch","useDispatch","enqueueSnackbar","useSnackbar","handleUpdate","_","debounce","update","a","updateCard","id","console","error","Box","mt","TextField","fullWidth","defaultValue","name","onChange","event","target","value","label","multiline","rows","description","placeholder","theme","padding","spacing","display","alignItems","borderRadius","shape","backgroundColor","palette","background","dark","visibility","checkbox","marginLeft","marginRight","flexGrow","cursor","minHeight","deleteButton","CheckItem","checklist","checkItem","editing","onEditCancel","onEditInit","onEditComplete","useState","setName","handleStateChange","persist","state","checked","updateCheckItem","handleSave","handleDelete","deleteCheckItem","Checkbox","Button","size","onClick","IconButton","SvgIcon","defaultProps","CheckItemAdd","isExpanded","setExpanded","addCheckItem","listIcon","Checklist","editingName","setEditingName","editingCheckItem","setEditingCheckItem","handleNameSave","updateChecklist","deleteChecklist","handleCheckItemEditCancel","handleCheckItemEditComplete","totalCheckItems","checkItems","length","completedCheckItems","filter","completePercentage","Math","round","ml","LinearProgress","map","key","checkItemId","marginBottom","messageContainer","Comment","comment","member","useSelector","memberId","kanban","members","byId","memberSelector","Avatar","alt","src","avatar","gutterBottom","Paper","message","moment","createdAt","format","field","CommentAdd","cardId","user","useAuth","setMessage","handleKeyUp","keyCode","addComment","onKeyUp","justifyContent","marginTop","ActionButton","iconProp","icon","children","Icon","startIcon","listName","fontWeight","typography","fontWeightMedium","CardEditModal","onClose","open","handleSubscribe","isSubscribed","handleUnsubscribe","deleteCard","handleAddChecklist","addChecklist","Dialog","maxWidth","Grid","container","item","xs","sm","checklists","comments","disabled","Divider","outline","paddingTop","paddingBottom","dragging","cover","height","badge","Card","forwardRef","ref","index","style","cards","memberIds","cardSelector","isOpened","setOpened","raised","CardMedia","image","CardContent","attachments","AvatarGroup","max","CardAdd","listId","handleAddConfirm","createCard","inner","flexDirection","maxHeight","overflowY","overflowX","width","breakpoints","down","title","droppableArea","paddingLeft","paddingRight","menu","List","isMenuOpen","setMenuOpen","lists","listSelector","moreRef","useRef","isRenaming","setRenaming","handleRenameInit","handleRename","updateList","deleteList","handleClear","clearList","py","px","ClickAwayListener","onClickAway","onBlur","margin","edge","droppableId","type","provided","innerRef","cardIds","draggableId","snapshot","isDragging","draggableProps","dragHandleProps","p","Menu","keepMounted","anchorEl","current","anchorOrigin","vertical","horizontal","PaperProps","getContentAnchorEl","MenuItem","ListAdd","createList","overflow","content","flexShrink","KanbanView","handleDragEnd","source","destination","moveCard","useEffect","getBoard","Page","onDragEnd","allIds"],"mappings":"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","file":"static/js/81.48a6718b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Typography,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/app\"\n          component={RouterLink}\n        >\n          Dashboard\n        </Link>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          Kanban\n        </Typography>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Board\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { useDispatch } from 'src/store';\nimport { updateCard } from 'src/slices/kanban';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Details = ({\n  card,\n  className,\n  list,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleUpdate = _.debounce(async (update) => {\n    try {\n      await dispatch(updateCard(card.id, update));\n      enqueueSnackbar('Card updated', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  }, 1000);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box mt={3}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          defaultValue={card.name}\n          onChange={(event) => handleUpdate({ name: event.target.value })}\n          label=\"Card Title\"\n        />\n      </Box>\n      <Box mt={3}>\n        <Typography\n          variant=\"h4\"\n          color=\"textPrimary\"\n        >\n          Description\n        </Typography>\n        <Box mt={2}>\n          <TextField\n            multiline\n            rows={6}\n            fullWidth\n            variant=\"outlined\"\n            onChange={(event) => handleUpdate({ description: event.target.value })}\n            placeholder=\"Leave a message\"\n            defaultValue={card.description}\n          />\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nDetails.propTypes = {\n  card: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  list: PropTypes.object.isRequired\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  IconButton,\n  SvgIcon,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Trash as TrashIcon } from 'react-feather';\nimport { useDispatch } from 'src/store';\nimport {\n  updateCheckItem,\n  deleteCheckItem\n} from 'src/slices/kanban';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'flex-start',\n    borderRadius: theme.shape.borderRadius,\n    '&:hover': {\n      backgroundColor: theme.palette.background.dark,\n      '& $deleteButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  checkbox: {\n    marginLeft: theme.spacing(-1),\n    marginRight: theme.spacing(1)\n  },\n  name: {\n    flexGrow: 1,\n    cursor: 'pointer',\n    minHeight: 32\n  },\n  deleteButton: {\n    visibility: 'hidden'\n  }\n}));\n\nconst CheckItem = ({\n  card,\n  checklist,\n  checkItem,\n  className,\n  editing,\n  onEditCancel,\n  onEditInit,\n  onEditComplete,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState(checkItem.name);\n\n  const handleStateChange = async (event) => {\n    try {\n      event.persist();\n\n      const state = event.target.checked ? 'complete' : 'incomplete';\n\n      await dispatch(updateCheckItem(\n        card.id,\n        checklist.id,\n        checkItem.id,\n        { state }\n      ));\n      enqueueSnackbar('Check item updated', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleSave = async () => {\n    try {\n      await dispatch(updateCheckItem(\n        card.id,\n        checklist.id,\n        checkItem.id,\n        { name }\n      ));\n      onEditComplete();\n      enqueueSnackbar('Check item updated', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleCancel = () => {\n    setName(checkItem.name);\n    onEditCancel();\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCheckItem(\n        card.id,\n        checklist.id,\n        checkItem.id\n      ));\n      enqueueSnackbar('Check item deleted', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Checkbox\n        checked={checkItem.state === 'complete'}\n        onChange={handleStateChange}\n        className={classes.checkbox}\n      />\n      {editing ? (\n        <Box flexGrow={1}>\n          <TextField\n            value={name}\n            variant=\"outlined\"\n            fullWidth\n            onChange={handleNameChange}\n          />\n          <Box mt={1}>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleSave}\n            >\n              Save\n            </Button>\n            <Button\n              size=\"small\"\n              onClick={handleCancel}\n            >\n              Cancel\n            </Button>\n          </Box>\n        </Box>\n      ) : (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexGrow={1}\n        >\n          <Typography\n            onClick={onEditInit}\n            color=\"textPrimary\"\n            variant=\"body1\"\n            className={classes.name}\n          >\n            {checkItem.name}\n          </Typography>\n          <IconButton\n            onClick={handleDelete}\n            className={classes.deleteButton}\n          >\n            <SvgIcon fontSize=\"small\">\n              <TrashIcon />\n            </SvgIcon>\n          </IconButton>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nCheckItem.propTypes = {\n  card: PropTypes.object.isRequired,\n  checklist: PropTypes.object.isRequired,\n  checkItem: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  editing: PropTypes.bool,\n  onEditCancel: PropTypes.func,\n  onEditComplete: PropTypes.func,\n  onEditInit: PropTypes.func\n};\n\nCheckItem.defaultProps = {\n  editing: false,\n  onEditCancel: () => {},\n  onEditComplete: () => {},\n  onEditInit: () => {}\n};\n\nexport default CheckItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  makeStyles,\n  TextField\n} from '@material-ui/core';\nimport { useDispatch } from 'src/store';\nimport { addCheckItem } from 'src/slices/kanban';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst CheckItemAdd = ({\n  card,\n  checklist,\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState('');\n  const [isExpanded, setExpanded] = useState(false);\n\n  const handleAdd = () => {\n    setExpanded(true);\n  };\n\n  const handleCancel = () => {\n    setExpanded(false);\n    setName('');\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleSave = async () => {\n    try {\n      if (!name) {\n        return;\n      }\n\n      await dispatch(addCheckItem(card.id, checklist.id, name));\n      setExpanded(false);\n      setName('');\n      enqueueSnackbar('Check item added', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {isExpanded ? (\n        <div>\n          <TextField\n            fullWidth\n            onChange={handleChange}\n            placeholder=\"Add an item\"\n            value={name}\n            variant=\"outlined\"\n          />\n          <Box mt={1}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={handleSave}\n            >\n              Save\n            </Button>\n            <Button\n              size=\"small\"\n              onClick={handleCancel}\n            >\n              Cancel\n            </Button>\n          </Box>\n        </div>\n      ) : (\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleAdd}\n        >\n          Add an item\n        </Button>\n      )}\n    </div>\n  );\n};\n\nCheckItemAdd.propTypes = {\n  card: PropTypes.object.isRequired,\n  checklist: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nexport default CheckItemAdd;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  LinearProgress,\n  Typography,\n  TextField,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { List as ListIcon } from 'react-feather';\nimport { useDispatch } from 'src/store';\nimport {\n  updateChecklist,\n  deleteChecklist\n} from 'src/slices/kanban';\nimport CheckItem from './CheckItem';\nimport CheckItemAdd from './CheckItemAdd';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listIcon: {\n    marginRight: theme.spacing(3)\n  }\n}));\n\nconst Checklist = ({\n  card,\n  checklist,\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState(checklist.name);\n  const [editingName, setEditingName] = useState(false);\n  const [editingCheckItem, setEditingCheckItem] = useState(null);\n\n  const handleNameEdit = () => {\n    setEditingName(true);\n  };\n\n  const handleNameChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleNameSave = async () => {\n    try {\n      if (!name || name === checklist.name) {\n        setEditingName(false);\n        setName(checklist.name);\n        return;\n      }\n\n      setEditingName(false);\n      await dispatch(updateChecklist(card.id, checklist.id, { name }));\n      enqueueSnackbar('Checklist updated', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleNameCancel = () => {\n    setEditingName(false);\n    setName(checklist.name);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteChecklist(card.id, checklist.id));\n      enqueueSnackbar('Checklist deleted', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleCheckItemEditInit = (checkItemId) => {\n    setEditingCheckItem(checkItemId);\n  };\n\n  const handleCheckItemEditCancel = () => {\n    setEditingCheckItem(null);\n  };\n\n  const handleCheckItemEditComplete = () => {\n    setEditingCheckItem(null);\n  };\n\n  const totalCheckItems = checklist.checkItems.length;\n  const completedCheckItems = (checklist.checkItems.filter((checkItem) => checkItem.state === 'complete')).length;\n  const completePercentage = totalCheckItems === 0\n    ? 100\n    : (completedCheckItems / totalCheckItems) * 100;\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n      >\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n          className={classes.listIcon}\n        >\n          <ListIcon />\n        </SvgIcon>\n        {editingName ? (\n          <Box flexGrow={1}>\n            <TextField\n              value={name}\n              fullWidth\n              variant=\"outlined\"\n              onChange={handleNameChange}\n            />\n            <Box mt={1}>\n              <Button\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                onClick={handleNameSave}\n              >\n                Save\n              </Button>\n              <Button\n                size=\"small\"\n                onClick={handleNameCancel}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        ) : (\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexGrow={1}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n              onClick={handleNameEdit}\n            >\n              {checklist.name}\n            </Typography>\n            <Box flexGrow={1} />\n            <Button\n              size=\"small\"\n              onClick={handleDelete}\n            >\n              Delete\n            </Button>\n          </Box>\n        )}\n      </Box>\n      <Box\n        mt={1}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <Typography\n          variant=\"caption\"\n          color=\"textSecondary\"\n        >\n          {Math.round(completePercentage)}\n          %\n        </Typography>\n        <Box\n          ml={2}\n          flexGrow={1}\n        >\n          <LinearProgress\n            variant=\"determinate\"\n            value={completePercentage}\n            color=\"secondary\"\n          />\n        </Box>\n      </Box>\n      <Box mt={3}>\n        {checklist.checkItems.map((checkItem) => (\n          <CheckItem\n            editing={editingCheckItem === checkItem.id}\n            checkItem={checkItem}\n            card={card}\n            checklist={checklist}\n            key={checkItem.id}\n            onEditCancel={handleCheckItemEditCancel}\n            onEditComplete={handleCheckItemEditComplete}\n            onEditInit={() => handleCheckItemEditInit(checkItem.id)}\n          />\n        ))}\n      </Box>\n      <Box\n        mt={1}\n        ml={6}\n      >\n        <CheckItemAdd\n          card={card}\n          checklist={checklist}\n        />\n      </Box>\n    </div>\n  );\n};\n\nChecklist.propTypes = {\n  className: PropTypes.string,\n  card: PropTypes.object.isRequired,\n  checklist: PropTypes.object.isRequired\n};\n\nexport default Checklist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { useSelector } from 'src/store';\n\nconst memberSelector = (state, memberId) => {\n  const { members } = state.kanban;\n\n  return members.byId[memberId];\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  },\n  messageContainer: {\n    backgroundColor: theme.palette.background.dark,\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(2)\n  }\n}));\n\nconst Comment = ({\n  comment,\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const member = useSelector((state) => memberSelector(state, comment.memberId));\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={member.avatar}\n      />\n      <Box\n        ml={2}\n        flexGrow={1}\n      >\n        <Typography\n          variant=\"h5\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          {member.name}\n        </Typography>\n        <Paper\n          className={classes.messageContainer}\n          variant=\"outlined\"\n        >\n          <Typography\n            variant=\"body2\"\n            color=\"textPrimary\"\n          >\n            {comment.message}\n          </Typography>\n        </Paper>\n        <Typography\n          variant=\"caption\"\n          color=\"textSecondary\"\n        >\n          {moment(comment.createdAt).format('MMM DD, YYYY [at] hh:mm a')}\n        </Typography>\n      </Box>\n    </div>\n  );\n};\n\nComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nexport default Comment;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { useDispatch } from 'src/store';\nimport useAuth from 'src/hooks/useAuth';\nimport { addComment } from 'src/slices/kanban';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst CommentAdd = ({ cardId, className, ...rest }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n  const [message, setMessage] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setMessage(event.target.value);\n  };\n\n  const handleKeyUp = async (event) => {\n    try {\n      event.persist();\n\n      if (event.keyCode === 13 && message) {\n        await dispatch(addComment(cardId, message));\n        setMessage('');\n        enqueueSnackbar('Comment added', {\n          variant: 'success'\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={user.avatar}\n      />\n      <TextField\n        fullWidth\n        className={classes.field}\n        value={message}\n        onChange={handleChange}\n        onKeyUp={handleKeyUp}\n        placeholder=\"Write a comment...\"\n        variant=\"outlined\"\n      />\n    </div>\n  );\n}\n\nCommentAdd.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\n\nexport default CommentAdd;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'flex-start',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nconst ActionButton = ({\n  icon: iconProp,\n  children,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  const Icon = iconProp ? (\n    <SvgIcon fontSize=\"small\">\n      {iconProp}\n    </SvgIcon>\n  ) : null;\n\n  return (\n    <Button\n      className={classes.root}\n      fullWidth\n      variant=\"contained\"\n      size=\"small\"\n      startIcon={Icon}\n      {...rest}\n    >\n      {children}\n    </Button>\n  );\n};\n\nActionButton.propTypes = {\n  icon: PropTypes.element,\n  children: PropTypes.node\n};\n\nexport default ActionButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Dialog,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles,\n  IconButton,\n  SvgIcon\n} from '@material-ui/core';\nimport {\n  XCircle as CloseIcon,\n  Eye as EyeIcon,\n  EyeOff as EyeOffIcon,\n  ArrowRight as ArrowRightIcon,\n  Archive as ArchiveIcon,\n  CheckSquare as CheckIcon,\n  Copy as CopyIcon,\n  Users as UsersIcon,\n  File as FileIcon,\n  Layout as LayoutIcon\n} from 'react-feather';\nimport { useDispatch } from 'src/store';\nimport {\n  deleteCard,\n  updateCard,\n  addChecklist\n} from 'src/slices/kanban';\nimport Details from './Details';\nimport Checklist from './Checklist';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\nimport ActionButton from './ActionButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  listName: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  checklist: {\n    '& + &': {\n      marginTop: theme.spacing(3)\n    }\n  }\n}));\n\nconst CardEditModal = ({\n  card,\n  className,\n  list,\n  onClose,\n  open,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleSubscribe = async () => {\n    try {\n      await dispatch(updateCard(card.id, { isSubscribed: true }));\n      enqueueSnackbar('Unsubscribed', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleUnsubscribe = async () => {\n    try {\n      await dispatch(updateCard(card.id, { isSubscribed: false }));\n      enqueueSnackbar('Subscribed', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCard(card.id));\n      enqueueSnackbar('Card archived', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleAddChecklist = async () => {\n    try {\n      await dispatch(addChecklist(card.id, 'Untitled Checklist'));\n      enqueueSnackbar('Checklist added', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      maxWidth=\"md\"\n      fullWidth\n      {...rest}\n    >\n      <div className={classes.root}>\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n        >\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            in list\n            {' '}\n            <span className={classes.listName}>\n              {list.name}\n            </span>\n          </Typography>\n          <IconButton onClick={onClose}>\n            <SvgIcon>\n              <CloseIcon />\n            </SvgIcon>\n          </IconButton>\n        </Box>\n        <Grid\n          container\n          spacing={5}\n        >\n          <Grid\n            item\n            xs={12}\n            sm={8}\n          >\n            <Details\n              card={card}\n              list={list}\n            />\n            {card.checklists.length > 0 && (\n              <Box mt={5}>\n                {card.checklists.map((checklist) => (\n                  <Checklist\n                    key={checklist.id}\n                    card={card}\n                    checklist={checklist}\n                    className={classes.checklist}\n                  />\n                ))}\n              </Box>\n            )}\n            <Box mt={3}>\n              <Typography\n                variant=\"h4\"\n                color=\"textPrimary\"\n              >\n                Activity\n              </Typography>\n              <Box mt={2}>\n                <CommentAdd cardId={card.id} />\n                {card.comments.length > 0 && (\n                  <Box mt={3}>\n                    {card.comments.map((comment) => (\n                      <Comment\n                        key={comment.id}\n                        comment={comment}\n                      />\n                    ))}\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sm={4}\n          >\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              Add to card\n            </Typography>\n            <ActionButton\n              icon={<CheckIcon />}\n              onClick={handleAddChecklist}\n            >\n              Checklist\n            </ActionButton>\n            <ActionButton\n              icon={<UsersIcon />}\n              disabled\n            >\n              Members\n            </ActionButton>\n            <ActionButton\n              icon={<UsersIcon />}\n              disabled\n            >\n              Labels\n            </ActionButton>\n            <ActionButton\n              icon={<FileIcon />}\n              disabled\n            >\n              Attachments\n            </ActionButton>\n            <Box mt={3}>\n              <Typography\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                Actions\n              </Typography>\n              <ActionButton\n                icon={<ArrowRightIcon />}\n                disabled\n              >\n                Move\n              </ActionButton>\n              <ActionButton\n                icon={<CopyIcon />}\n                disabled\n              >\n                Copy\n              </ActionButton>\n              <ActionButton\n                icon={<LayoutIcon />}\n                disabled\n              >\n                Make Template\n              </ActionButton>\n              {card.isSubscribed ? (\n                <ActionButton\n                  icon={<EyeOffIcon />}\n                  onClick={handleUnsubscribe}\n                >\n                  Unwatch\n                </ActionButton>\n              ) : (\n                <ActionButton\n                  icon={<EyeIcon />}\n                  onClick={handleSubscribe}\n                >\n                  Watch\n                </ActionButton>\n              )}\n              <Divider />\n              <ActionButton\n                icon={<ArchiveIcon />}\n                onClick={handleDelete}\n              >\n                Archive\n              </ActionButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </div>\n    </Dialog>\n  );\n};\n\nCardEditModal.propTypes = {\n  card: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  list: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nCardEditModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default CardEditModal;\n","import React, {\n  forwardRef,\n  useState\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card as MuiCard,\n  CardContent,\n  CardMedia,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { AvatarGroup } from '@material-ui/lab';\nimport {\n  CheckSquare as CheckIcon,\n  Eye as EyeIcon,\n  File as FileIcon,\n  MessageCircle as MessageIcon\n} from 'react-feather';\nimport { useSelector } from 'src/store';\nimport CardEditModal from './CardEditModal';\n\nconst cardSelector = (state, cardId) => {\n  const { cards, members, } = state.kanban;\n  const card = cards.byId[cardId];\n\n  return {\n    ...card,\n    members: card.memberIds.map((memberId) => members.byId[memberId]),\n  };\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    outline: 'none',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  card: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.dark\n    }\n  },\n  dragging: {\n    backgroundColor: theme.palette.background.dark\n  },\n  cover: {\n    height: 200\n  },\n  badge: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst Card = forwardRef(({\n  cardId,\n  className,\n  dragging,\n  index,\n  list,\n  style,\n  ...rest\n}, ref) => {\n  const classes = useStyles();\n  const card = useSelector((state) => cardSelector(state, cardId));\n  const [isOpened, setOpened] = useState(false);\n\n  const handleOpen = () => {\n    setOpened(true);\n  };\n\n  const handleClose = () => {\n    setOpened(false);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      index={index}\n      ref={ref}\n      style={style}\n      {...rest}\n    >\n      <MuiCard\n        className={clsx(\n          classes.card,\n          { [classes.dragging]: dragging }\n        )}\n        raised={dragging}\n        variant={dragging ? 'elevation' : 'outlined'}\n        onClick={handleOpen}\n      >\n        {card.cover && (\n          <CardMedia\n            className={classes.cover}\n            image={card.cover}\n          />\n        )}\n        <CardContent>\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n          >\n            {card.name}\n          </Typography>\n          <Box\n            mt={2}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            {card.isSubscribed && (\n              <SvgIcon\n                className={classes.badge}\n                color=\"action\"\n                fontSize=\"small\"\n              >\n                <EyeIcon />\n              </SvgIcon>\n            )}\n            {card.attachments.length > 0 && (\n              <SvgIcon\n                className={classes.badge}\n                color=\"action\"\n                fontSize=\"small\"\n              >\n                <FileIcon />\n              </SvgIcon>\n            )}\n            {card.checklists.length > 0 && (\n              <SvgIcon\n                className={classes.badge}\n                color=\"action\"\n                fontSize=\"small\"\n              >\n                <CheckIcon />\n              </SvgIcon>\n            )}\n            {card.comments.length > 0 && (\n              <SvgIcon\n                className={classes.badge}\n                color=\"action\"\n                fontSize=\"small\"\n              >\n                <MessageIcon />\n              </SvgIcon>\n            )}\n            <Box flexGrow={1} />\n            {card.members.length > 0 && (\n              <AvatarGroup max={5}>\n                {card.members.map((member) => (\n                  <Avatar\n                    key={member.id}\n                    src={member.avatar}\n                  />\n                ))}\n              </AvatarGroup>\n            )}\n          </Box>\n        </CardContent>\n      </MuiCard>\n      <CardEditModal\n        open={isOpened}\n        onClose={handleClose}\n        card={card}\n        list={list}\n      />\n    </div>\n  );\n});\n\nCard.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  dragging: PropTypes.bool.isRequired,\n  index: PropTypes.number,\n  list: PropTypes.object.isRequired,\n  style: PropTypes.object\n};\n\nCard.defaultProps = {\n  dragging: false,\n  style: {}\n};\n\nexport default Card;\n","import React, {\n  useState\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { useDispatch } from 'src/store';\nimport { createCard } from 'src/slices/kanban';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst CardAdd = ({\n  className,\n  listId,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isExpanded, setExpanded] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleAddInit = () => {\n    setExpanded(true);\n  };\n\n  const handleAddCancel = () => {\n    setExpanded(false);\n    setName('');\n  };\n\n  const handleAddConfirm = async () => {\n    try {\n      await dispatch(createCard(listId, name || 'Untitled Card'));\n      setExpanded(false);\n      setName('');\n      enqueueSnackbar('Card created', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {isExpanded ? (\n        <>\n          <TextField\n            fullWidth\n            label=\"Card Title\"\n            name=\"cardName\"\n            onChange={handleChange}\n            value={name}\n            variant=\"outlined\"\n          />\n          <Box\n            mt={2}\n            display=\"flex\"\n            justifyContent=\"space-between\"\n          >\n            <Button\n              onClick={handleAddCancel}\n              variant=\"text\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleAddConfirm}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Add\n            </Button>\n          </Box>\n        </>\n      ) : (\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Button onClick={handleAddInit}>\n            Add another card\n          </Button>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nCardAdd.propTypes = {\n  className: PropTypes.string,\n  listId: PropTypes.string.isRequired\n};\n\nexport default CardAdd;\n","import React, {\n  useState,\n  useRef\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport {\n  Droppable,\n  Draggable\n} from 'react-beautiful-dnd';\nimport {\n  Box,\n  ClickAwayListener,\n  Divider,\n  IconButton,\n  Menu,\n  MenuItem,\n  Paper,\n  SvgIcon,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { MoreVertical as MoreIcon } from 'react-feather';\nimport { useDispatch, useSelector } from 'src/store';\nimport {\n  clearList,\n  deleteList,\n  updateList\n} from 'src/slices/kanban';\nimport Card from './Card';\nimport CardAdd from './CardAdd';\n\nconst listSelector = (state, listId) => {\n  const { lists } = state.kanban;\n\n  return lists.byId[listId];\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  inner: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '100%',\n    overflowY: 'hidden',\n    overflowX: 'hidden',\n    width: 380,\n    [theme.breakpoints.down('xs')]: {\n      width: 300\n    }\n  },\n  title: {\n    cursor: 'pointer'\n  },\n  droppableArea: {\n    minHeight: 80,\n    flexGrow: 1,\n    overflowY: 'auto',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  menu: {\n    width: 240\n  }\n}));\n\nconst List = ({ className, listId, ...rest }) => {\n  const classes = useStyles();\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const list = useSelector((state) => listSelector(state, listId));\n  const dispatch = useDispatch();\n  const moreRef = useRef(null);\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState(list.name);\n  const [isRenaming, setRenaming] = useState(false);\n\n  const handleMenuOpen = () => {\n    setMenuOpen(true);\n  };\n\n  const handleMenuClose = () => {\n    setMenuOpen(false);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleRenameInit = () => {\n    setRenaming(true);\n    setMenuOpen(false);\n  };\n\n  const handleRename = async () => {\n    try {\n      if (!name) {\n        setName(list.name);\n        setRenaming(false);\n        return;\n      }\n\n      const update = { name };\n\n      setRenaming(false);\n      await dispatch(updateList(list.id, update));\n      enqueueSnackbar('List updated', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      setMenuOpen(false);\n      await dispatch(deleteList(list.id));\n      enqueueSnackbar('List deleted', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleClear = async () => {\n    try {\n      setMenuOpen(false);\n      await dispatch(clearList(list.id));\n      enqueueSnackbar('List cleared', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Paper className={classes.inner}>\n        <Box\n          py={1}\n          px={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          {isRenaming ? (\n            <ClickAwayListener onClickAway={handleRename}>\n              <TextField\n                value={name}\n                onBlur={handleRename}\n                onChange={handleChange}\n                variant=\"outlined\"\n                margin=\"dense\"\n              />\n            </ClickAwayListener>\n          ) : (\n            <Typography\n              color=\"inherit\"\n              variant=\"h5\"\n              onClick={handleRenameInit}\n            >\n              {list.name}\n            </Typography>\n          )}\n          <Box flexGrow={1} />\n          <IconButton\n            color=\"inherit\"\n            edge=\"end\"\n            onClick={handleMenuOpen}\n            ref={moreRef}\n          >\n            <SvgIcon fontSize=\"small\">\n              <MoreIcon />\n            </SvgIcon>\n          </IconButton>\n        </Box>\n        <Divider />\n        <Droppable\n          droppableId={list.id}\n          type=\"card\"\n        >\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              className={classes.droppableArea}\n            >\n              {list.cardIds.map((cardId, index) => (\n                <Draggable\n                  draggableId={cardId}\n                  index={index}\n                  key={cardId}\n                >\n                  {(provided, snapshot) => (\n                    <Card\n                      cardId={cardId}\n                      dragging={snapshot.isDragging}\n                      index={index}\n                      key={cardId}\n                      list={list}\n                      ref={provided.innerRef}\n                      style={{ ...provided.draggableProps.style }}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    />\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        <Divider />\n        <Box p={2}>\n          <CardAdd listId={list.id} />\n        </Box>\n        <Menu\n          keepMounted\n          anchorEl={moreRef.current}\n          open={isMenuOpen}\n          onClose={handleMenuClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n        >\n          <MenuItem onClick={handleRenameInit}>\n            Rename\n          </MenuItem>\n          <MenuItem onClick={handleClear}>\n            Clear\n          </MenuItem>\n          <MenuItem onClick={handleDelete}>\n            Delete\n          </MenuItem>\n        </Menu>\n      </Paper>\n    </div>\n  );\n};\n\nList.propTypes = {\n  className: PropTypes.string,\n  listId: PropTypes.string.isRequired\n};\n\nexport default List;\n","\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { useDispatch } from 'src/store';\nimport { createList } from 'src/slices/kanban';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  inner: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 380,\n    [theme.breakpoints.down('xs')]: {\n      width: 300\n    }\n  }\n}));\n\nconst ListAdd = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isExpanded, setExpanded] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleAddInit = () => {\n    setExpanded(true);\n  };\n\n  const handleAddCancel = () => {\n    setExpanded(false);\n    setName('');\n  };\n\n  const handleAddConfirm = async () => {\n    try {\n      await dispatch(createList(name || 'Untitled list'));\n      setExpanded(false);\n      setName('');\n      enqueueSnackbar('List created', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card className={classes.inner}>\n        <Box p={2}>\n          {isExpanded ? (\n            <>\n              <TextField\n                fullWidth\n                label=\"List Title\"\n                name=\"listName\"\n                onChange={handleChange}\n                value={name}\n                variant=\"outlined\"\n              />\n              <Box\n                mt={2}\n                display=\"flex\"\n                justifyContent=\"space-between\"\n              >\n                <Button\n                  onClick={handleAddCancel}\n                  variant=\"text\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleAddConfirm}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Add\n                </Button>\n              </Box>\n            </>\n          ) : (\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Button onClick={handleAddInit}>\n                Add another list\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Card>\n    </div>\n  );\n};\n\nListAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ListAdd;\n","import React, { useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useSnackbar } from 'notistack';\nimport { Box, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'src/store';\nimport { getBoard, moveCard } from 'src/slices/kanban';\nimport Header from './Header';\nimport List from './List';\nimport ListAdd from './ListAdd';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column'\n  },\n  content: {\n    flexGrow: 1,\n    flexShrink: 1,\n    display: 'flex',\n    overflowY: 'hidden',\n    overflowX: 'auto'\n  },\n  inner: {\n    display: 'flex',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  }\n}));\n\nconst KanbanView = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { lists } = useSelector((state) => state.kanban);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleDragEnd = async ({ source, destination, draggableId }) => {\n    try {\n      // Dropped outside the list\n      if (!destination) {\n        return;\n      }\n\n      // Card has not been moved\n      if (\n        source.droppableId === destination.droppableId\n        && source.index === destination.index\n      ) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n      // Moved to the same list on diferent position\n        await dispatch(moveCard(draggableId, destination.index));\n      } else {\n      // Moved to another list\n        await dispatch(moveCard(draggableId, destination.index, destination.droppableId));\n      }\n\n      enqueueSnackbar('Card moved', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getBoard());\n  }, [dispatch]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Kanban Board\"\n    >\n      <Box p={3}>\n        <Header />\n      </Box>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <div className={classes.content}>\n          <div className={classes.inner}>\n            {lists.allIds.map((listId) => (\n              <List\n                key={listId}\n                listId={listId}\n              />\n            ))}\n            <ListAdd />\n          </div>\n        </div>\n      </DragDropContext>\n    </Page>\n  );\n};\n\nexport default KanbanView;\n"],"sourceRoot":""}