{"version":3,"sources":["views/kanban/KanbanView/Header.js","views/kanban/KanbanView/CardEditModal/Details.js","views/kanban/KanbanView/CardEditModal/CheckItem.js","views/kanban/KanbanView/CardEditModal/CheckItemAdd.js","views/kanban/KanbanView/CardEditModal/Checklist.js","views/kanban/KanbanView/CardEditModal/Comment.js","views/kanban/KanbanView/CardEditModal/CommentAdd.js","views/kanban/KanbanView/CardEditModal/ActionButton.js","views/kanban/KanbanView/CardEditModal/index.js","views/kanban/KanbanView/Card.js","views/kanban/KanbanView/CardAdd.js","views/kanban/KanbanView/List.js","views/kanban/KanbanView/ListAdd.js","views/kanban/KanbanView/index.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","clsx","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","Details","card","list","dispatch","useDispatch","enqueueSnackbar","useSnackbar","handleUpdate","_","debounce","update","a","updateCard","id","console","error","Box","mt","TextField","fullWidth","defaultValue","name","onChange","event","target","value","label","multiline","rows","description","placeholder","theme","padding","spacing","display","alignItems","borderRadius","shape","backgroundColor","palette","background","dark","visibility","checkbox","marginLeft","marginRight","flexGrow","cursor","minHeight","deleteButton","CheckItem","checklist","checkItem","editing","onEditCancel","onEditInit","onEditComplete","useState","setName","handleStateChange","persist","state","checked","updateCheckItem","handleSave","handleDelete","deleteCheckItem","Checkbox","Button","size","onClick","IconButton","SvgIcon","defaultProps","CheckItemAdd","isExpanded","setExpanded","addCheckItem","listIcon","Checklist","editingName","setEditingName","editingCheckItem","setEditingCheckItem","handleNameSave","updateChecklist","deleteChecklist","handleCheckItemEditCancel","handleCheckItemEditComplete","totalCheckItems","checkItems","length","completedCheckItems","filter","completePercentage","Math","round","ml","LinearProgress","map","key","checkItemId","marginBottom","messageContainer","Comment","comment","member","useSelector","memberId","kanban","members","byId","memberSelector","Avatar","alt","src","avatar","gutterBottom","Paper","message","moment","createdAt","format","field","CommentAdd","cardId","user","useAuth","setMessage","handleKeyUp","keyCode","addComment","onKeyUp","justifyContent","marginTop","ActionButton","iconProp","icon","children","Icon","startIcon","listName","fontWeight","typography","fontWeightMedium","CardEditModal","onClose","open","handleSubscribe","isSubscribed","handleUnsubscribe","deleteCard","handleAddChecklist","addChecklist","Dialog","maxWidth","Grid","container","item","xs","sm","checklists","comments","disabled","Divider","outline","paddingTop","paddingBottom","dragging","cover","height","badge","Card","forwardRef","ref","index","style","cards","memberIds","cardSelector","isOpened","setOpened","raised","CardMedia","image","CardContent","attachments","AvatarGroup","max","CardAdd","listId","handleAddConfirm","createCard","inner","flexDirection","maxHeight","overflowY","overflowX","width","breakpoints","down","title","droppableArea","paddingLeft","paddingRight","menu","List","isMenuOpen","setMenuOpen","lists","listSelector","moreRef","useRef","isRenaming","setRenaming","handleRenameInit","handleRename","updateList","deleteList","handleClear","clearList","py","px","ClickAwayListener","onClickAway","onBlur","margin","edge","droppableId","type","provided","innerRef","cardIds","draggableId","snapshot","isDragging","draggableProps","dragHandleProps","p","Menu","keepMounted","anchorEl","current","anchorOrigin","vertical","horizontal","PaperProps","getContentAnchorEl","MenuItem","ListAdd","createList","overflow","content","flexShrink","KanbanView","handleDragEnd","source","destination","moveCard","useEffect","getBoard","Page","onDragEnd","allIds"],"mappings":"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","file":"static/js/81.8e2fc8f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Breadcrumbs,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        <Link\r\n          variant=\"body1\"\r\n          color=\"inherit\"\r\n          to=\"/app\"\r\n          component={RouterLink}\r\n        >\r\n          Dashboard\r\n        </Link>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Kanban\r\n        </Typography>\r\n      </Breadcrumbs>\r\n      <Typography\r\n        variant=\"h3\"\r\n        color=\"textPrimary\"\r\n      >\r\n        Board\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { useDispatch } from 'src/store';\r\nimport { updateCard } from 'src/slices/kanban';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Details = ({\r\n  card,\r\n  className,\r\n  list,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleUpdate = _.debounce(async (update) => {\r\n    try {\r\n      await dispatch(updateCard(card.id, update));\r\n      enqueueSnackbar('Card updated', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  }, 1000);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box mt={3}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          defaultValue={card.name}\r\n          onChange={(event) => handleUpdate({ name: event.target.value })}\r\n          label=\"Card Title\"\r\n        />\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Description\r\n        </Typography>\r\n        <Box mt={2}>\r\n          <TextField\r\n            multiline\r\n            rows={6}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleUpdate({ description: event.target.value })}\r\n            placeholder=\"Leave a message\"\r\n            defaultValue={card.description}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nDetails.propTypes = {\r\n  card: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  list: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Details;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  IconButton,\r\n  SvgIcon,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Trash as TrashIcon } from 'react-feather';\r\nimport { useDispatch } from 'src/store';\r\nimport {\r\n  updateCheckItem,\r\n  deleteCheckItem\r\n} from 'src/slices/kanban';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    borderRadius: theme.shape.borderRadius,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.background.dark,\r\n      '& $deleteButton': {\r\n        visibility: 'visible'\r\n      }\r\n    }\r\n  },\r\n  checkbox: {\r\n    marginLeft: theme.spacing(-1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  name: {\r\n    flexGrow: 1,\r\n    cursor: 'pointer',\r\n    minHeight: 32\r\n  },\r\n  deleteButton: {\r\n    visibility: 'hidden'\r\n  }\r\n}));\r\n\r\nconst CheckItem = ({\r\n  card,\r\n  checklist,\r\n  checkItem,\r\n  className,\r\n  editing,\r\n  onEditCancel,\r\n  onEditInit,\r\n  onEditComplete,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [name, setName] = useState(checkItem.name);\r\n\r\n  const handleStateChange = async (event) => {\r\n    try {\r\n      event.persist();\r\n\r\n      const state = event.target.checked ? 'complete' : 'incomplete';\r\n\r\n      await dispatch(updateCheckItem(\r\n        card.id,\r\n        checklist.id,\r\n        checkItem.id,\r\n        { state }\r\n      ));\r\n      enqueueSnackbar('Check item updated', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    event.persist();\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      await dispatch(updateCheckItem(\r\n        card.id,\r\n        checklist.id,\r\n        checkItem.id,\r\n        { name }\r\n      ));\r\n      onEditComplete();\r\n      enqueueSnackbar('Check item updated', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setName(checkItem.name);\r\n    onEditCancel();\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await dispatch(deleteCheckItem(\r\n        card.id,\r\n        checklist.id,\r\n        checkItem.id\r\n      ));\r\n      enqueueSnackbar('Check item deleted', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Checkbox\r\n        checked={checkItem.state === 'complete'}\r\n        onChange={handleStateChange}\r\n        className={classes.checkbox}\r\n      />\r\n      {editing ? (\r\n        <Box flexGrow={1}>\r\n          <TextField\r\n            value={name}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={handleNameChange}\r\n          />\r\n          <Box mt={1}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={handleSave}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              onClick={handleCancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          flexGrow={1}\r\n        >\r\n          <Typography\r\n            onClick={onEditInit}\r\n            color=\"textPrimary\"\r\n            variant=\"body1\"\r\n            className={classes.name}\r\n          >\r\n            {checkItem.name}\r\n          </Typography>\r\n          <IconButton\r\n            onClick={handleDelete}\r\n            className={classes.deleteButton}\r\n          >\r\n            <SvgIcon fontSize=\"small\">\r\n              <TrashIcon />\r\n            </SvgIcon>\r\n          </IconButton>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckItem.propTypes = {\r\n  card: PropTypes.object.isRequired,\r\n  checklist: PropTypes.object.isRequired,\r\n  checkItem: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  editing: PropTypes.bool,\r\n  onEditCancel: PropTypes.func,\r\n  onEditComplete: PropTypes.func,\r\n  onEditInit: PropTypes.func\r\n};\r\n\r\nCheckItem.defaultProps = {\r\n  editing: false,\r\n  onEditCancel: () => {},\r\n  onEditComplete: () => {},\r\n  onEditInit: () => {}\r\n};\r\n\r\nexport default CheckItem;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { useDispatch } from 'src/store';\r\nimport { addCheckItem } from 'src/slices/kanban';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst CheckItemAdd = ({\r\n  card,\r\n  checklist,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [name, setName] = useState('');\r\n  const [isExpanded, setExpanded] = useState(false);\r\n\r\n  const handleAdd = () => {\r\n    setExpanded(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setExpanded(false);\r\n    setName('');\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      if (!name) {\r\n        return;\r\n      }\r\n\r\n      await dispatch(addCheckItem(card.id, checklist.id, name));\r\n      setExpanded(false);\r\n      setName('');\r\n      enqueueSnackbar('Check item added', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      {isExpanded ? (\r\n        <div>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleChange}\r\n            placeholder=\"Add an item\"\r\n            value={name}\r\n            variant=\"outlined\"\r\n          />\r\n          <Box mt={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              onClick={handleSave}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              onClick={handleCancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      ) : (\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={handleAdd}\r\n        >\r\n          Add an item\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckItemAdd.propTypes = {\r\n  card: PropTypes.object.isRequired,\r\n  checklist: PropTypes.object.isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default CheckItemAdd;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  Button,\r\n  LinearProgress,\r\n  Typography,\r\n  TextField,\r\n  SvgIcon,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { List as ListIcon } from 'react-feather';\r\nimport { useDispatch } from 'src/store';\r\nimport {\r\n  updateChecklist,\r\n  deleteChecklist\r\n} from 'src/slices/kanban';\r\nimport CheckItem from './CheckItem';\r\nimport CheckItemAdd from './CheckItemAdd';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  listIcon: {\r\n    marginRight: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Checklist = ({\r\n  card,\r\n  checklist,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [name, setName] = useState(checklist.name);\r\n  const [editingName, setEditingName] = useState(false);\r\n  const [editingCheckItem, setEditingCheckItem] = useState(null);\r\n\r\n  const handleNameEdit = () => {\r\n    setEditingName(true);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    event.persist();\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleNameSave = async () => {\r\n    try {\r\n      if (!name || name === checklist.name) {\r\n        setEditingName(false);\r\n        setName(checklist.name);\r\n        return;\r\n      }\r\n\r\n      setEditingName(false);\r\n      await dispatch(updateChecklist(card.id, checklist.id, { name }));\r\n      enqueueSnackbar('Checklist updated', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleNameCancel = () => {\r\n    setEditingName(false);\r\n    setName(checklist.name);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await dispatch(deleteChecklist(card.id, checklist.id));\r\n      enqueueSnackbar('Checklist deleted', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCheckItemEditInit = (checkItemId) => {\r\n    setEditingCheckItem(checkItemId);\r\n  };\r\n\r\n  const handleCheckItemEditCancel = () => {\r\n    setEditingCheckItem(null);\r\n  };\r\n\r\n  const handleCheckItemEditComplete = () => {\r\n    setEditingCheckItem(null);\r\n  };\r\n\r\n  const totalCheckItems = checklist.checkItems.length;\r\n  const completedCheckItems = (checklist.checkItems.filter((checkItem) => checkItem.state === 'complete')).length;\r\n  const completePercentage = totalCheckItems === 0\r\n    ? 100\r\n    : (completedCheckItems / totalCheckItems) * 100;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n      >\r\n        <SvgIcon\r\n          fontSize=\"small\"\r\n          color=\"action\"\r\n          className={classes.listIcon}\r\n        >\r\n          <ListIcon />\r\n        </SvgIcon>\r\n        {editingName ? (\r\n          <Box flexGrow={1}>\r\n            <TextField\r\n              value={name}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onChange={handleNameChange}\r\n            />\r\n            <Box mt={1}>\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                onClick={handleNameSave}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={handleNameCancel}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        ) : (\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            flexGrow={1}\r\n          >\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"textPrimary\"\r\n              onClick={handleNameEdit}\r\n            >\r\n              {checklist.name}\r\n            </Typography>\r\n            <Box flexGrow={1} />\r\n            <Button\r\n              size=\"small\"\r\n              onClick={handleDelete}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        mt={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography\r\n          variant=\"caption\"\r\n          color=\"textSecondary\"\r\n        >\r\n          {Math.round(completePercentage)}\r\n          %\r\n        </Typography>\r\n        <Box\r\n          ml={2}\r\n          flexGrow={1}\r\n        >\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={completePercentage}\r\n            color=\"secondary\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box mt={3}>\r\n        {checklist.checkItems.map((checkItem) => (\r\n          <CheckItem\r\n            editing={editingCheckItem === checkItem.id}\r\n            checkItem={checkItem}\r\n            card={card}\r\n            checklist={checklist}\r\n            key={checkItem.id}\r\n            onEditCancel={handleCheckItemEditCancel}\r\n            onEditComplete={handleCheckItemEditComplete}\r\n            onEditInit={() => handleCheckItemEditInit(checkItem.id)}\r\n          />\r\n        ))}\r\n      </Box>\r\n      <Box\r\n        mt={1}\r\n        ml={6}\r\n      >\r\n        <CheckItemAdd\r\n          card={card}\r\n          checklist={checklist}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nChecklist.propTypes = {\r\n  className: PropTypes.string,\r\n  card: PropTypes.object.isRequired,\r\n  checklist: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Checklist;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { useSelector } from 'src/store';\r\n\r\nconst memberSelector = (state, memberId) => {\r\n  const { members } = state.kanban;\r\n\r\n  return members.byId[memberId];\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  messageContainer: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    marginBottom: theme.spacing(1),\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Comment = ({\r\n  comment,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const member = useSelector((state) => memberSelector(state, comment.memberId));\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        src={member.avatar}\r\n      />\r\n      <Box\r\n        ml={2}\r\n        flexGrow={1}\r\n      >\r\n        <Typography\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n        >\r\n          {member.name}\r\n        </Typography>\r\n        <Paper\r\n          className={classes.messageContainer}\r\n          variant=\"outlined\"\r\n        >\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textPrimary\"\r\n          >\r\n            {comment.message}\r\n          </Typography>\r\n        </Paper>\r\n        <Typography\r\n          variant=\"caption\"\r\n          color=\"textSecondary\"\r\n        >\r\n          {moment(comment.createdAt).format('MMM DD, YYYY [at] hh:mm a')}\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.object.isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { useDispatch } from 'src/store';\r\nimport useAuth from 'src/hooks/useAuth';\r\nimport { addComment } from 'src/slices/kanban';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  field: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst CommentAdd = ({ cardId, className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { user } = useAuth();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleKeyUp = async (event) => {\r\n    try {\r\n      event.persist();\r\n\r\n      if (event.keyCode === 13 && message) {\r\n        await dispatch(addComment(cardId, message));\r\n        setMessage('');\r\n        enqueueSnackbar('Comment added', {\r\n          variant: 'success'\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        src={user.avatar}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        className={classes.field}\r\n        value={message}\r\n        onChange={handleChange}\r\n        onKeyUp={handleKeyUp}\r\n        placeholder=\"Write a comment...\"\r\n        variant=\"outlined\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nCommentAdd.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default CommentAdd;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  SvgIcon,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    justifyContent: 'flex-start',\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ActionButton = ({\r\n  icon: iconProp,\r\n  children,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const Icon = iconProp ? (\r\n    <SvgIcon fontSize=\"small\">\r\n      {iconProp}\r\n    </SvgIcon>\r\n  ) : null;\r\n\r\n  return (\r\n    <Button\r\n      className={classes.root}\r\n      fullWidth\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      startIcon={Icon}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nActionButton.propTypes = {\r\n  icon: PropTypes.element,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default ActionButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  IconButton,\r\n  SvgIcon\r\n} from '@material-ui/core';\r\nimport {\r\n  XCircle as CloseIcon,\r\n  Eye as EyeIcon,\r\n  EyeOff as EyeOffIcon,\r\n  ArrowRight as ArrowRightIcon,\r\n  Archive as ArchiveIcon,\r\n  CheckSquare as CheckIcon,\r\n  Copy as CopyIcon,\r\n  Users as UsersIcon,\r\n  File as FileIcon,\r\n  Layout as LayoutIcon\r\n} from 'react-feather';\r\nimport { useDispatch } from 'src/store';\r\nimport {\r\n  deleteCard,\r\n  updateCard,\r\n  addChecklist\r\n} from 'src/slices/kanban';\r\nimport Details from './Details';\r\nimport Checklist from './Checklist';\r\nimport Comment from './Comment';\r\nimport CommentAdd from './CommentAdd';\r\nimport ActionButton from './ActionButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  listName: {\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  checklist: {\r\n    '& + &': {\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  }\r\n}));\r\n\r\nconst CardEditModal = ({\r\n  card,\r\n  className,\r\n  list,\r\n  onClose,\r\n  open,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleSubscribe = async () => {\r\n    try {\r\n      await dispatch(updateCard(card.id, { isSubscribed: true }));\r\n      enqueueSnackbar('Unsubscribed', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUnsubscribe = async () => {\r\n    try {\r\n      await dispatch(updateCard(card.id, { isSubscribed: false }));\r\n      enqueueSnackbar('Subscribed', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await dispatch(deleteCard(card.id));\r\n      enqueueSnackbar('Card archived', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddChecklist = async () => {\r\n    try {\r\n      await dispatch(addChecklist(card.id, 'Untitled Checklist'));\r\n      enqueueSnackbar('Checklist added', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={onClose}\r\n      open={open}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      {...rest}\r\n    >\r\n      <div className={classes.root}>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n          >\r\n            in list\r\n            {' '}\r\n            <span className={classes.listName}>\r\n              {list.name}\r\n            </span>\r\n          </Typography>\r\n          <IconButton onClick={onClose}>\r\n            <SvgIcon>\r\n              <CloseIcon />\r\n            </SvgIcon>\r\n          </IconButton>\r\n        </Box>\r\n        <Grid\r\n          container\r\n          spacing={5}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={8}\r\n          >\r\n            <Details\r\n              card={card}\r\n              list={list}\r\n            />\r\n            {card.checklists.length > 0 && (\r\n              <Box mt={5}>\r\n                {card.checklists.map((checklist) => (\r\n                  <Checklist\r\n                    key={checklist.id}\r\n                    card={card}\r\n                    checklist={checklist}\r\n                    className={classes.checklist}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n            <Box mt={3}>\r\n              <Typography\r\n                variant=\"h4\"\r\n                color=\"textPrimary\"\r\n              >\r\n                Activity\r\n              </Typography>\r\n              <Box mt={2}>\r\n                <CommentAdd cardId={card.id} />\r\n                {card.comments.length > 0 && (\r\n                  <Box mt={3}>\r\n                    {card.comments.map((comment) => (\r\n                      <Comment\r\n                        key={comment.id}\r\n                        comment={comment}\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={4}\r\n          >\r\n            <Typography\r\n              variant=\"overline\"\r\n              color=\"textSecondary\"\r\n            >\r\n              Add to card\r\n            </Typography>\r\n            <ActionButton\r\n              icon={<CheckIcon />}\r\n              onClick={handleAddChecklist}\r\n            >\r\n              Checklist\r\n            </ActionButton>\r\n            <ActionButton\r\n              icon={<UsersIcon />}\r\n              disabled\r\n            >\r\n              Members\r\n            </ActionButton>\r\n            <ActionButton\r\n              icon={<UsersIcon />}\r\n              disabled\r\n            >\r\n              Labels\r\n            </ActionButton>\r\n            <ActionButton\r\n              icon={<FileIcon />}\r\n              disabled\r\n            >\r\n              Attachments\r\n            </ActionButton>\r\n            <Box mt={3}>\r\n              <Typography\r\n                variant=\"overline\"\r\n                color=\"textSecondary\"\r\n              >\r\n                Actions\r\n              </Typography>\r\n              <ActionButton\r\n                icon={<ArrowRightIcon />}\r\n                disabled\r\n              >\r\n                Move\r\n              </ActionButton>\r\n              <ActionButton\r\n                icon={<CopyIcon />}\r\n                disabled\r\n              >\r\n                Copy\r\n              </ActionButton>\r\n              <ActionButton\r\n                icon={<LayoutIcon />}\r\n                disabled\r\n              >\r\n                Make Template\r\n              </ActionButton>\r\n              {card.isSubscribed ? (\r\n                <ActionButton\r\n                  icon={<EyeOffIcon />}\r\n                  onClick={handleUnsubscribe}\r\n                >\r\n                  Unwatch\r\n                </ActionButton>\r\n              ) : (\r\n                <ActionButton\r\n                  icon={<EyeIcon />}\r\n                  onClick={handleSubscribe}\r\n                >\r\n                  Watch\r\n                </ActionButton>\r\n              )}\r\n              <Divider />\r\n              <ActionButton\r\n                icon={<ArchiveIcon />}\r\n                onClick={handleDelete}\r\n              >\r\n                Archive\r\n              </ActionButton>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nCardEditModal.propTypes = {\r\n  card: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  list: PropTypes.object.isRequired,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nCardEditModal.defaultProps = {\r\n  open: false,\r\n  onClose: () => {}\r\n};\r\n\r\nexport default CardEditModal;\r\n","import React, {\r\n  forwardRef,\r\n  useState\r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card as MuiCard,\r\n  CardContent,\r\n  CardMedia,\r\n  SvgIcon,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { AvatarGroup } from '@material-ui/lab';\r\nimport {\r\n  CheckSquare as CheckIcon,\r\n  Eye as EyeIcon,\r\n  File as FileIcon,\r\n  MessageCircle as MessageIcon\r\n} from 'react-feather';\r\nimport { useSelector } from 'src/store';\r\nimport CardEditModal from './CardEditModal';\r\n\r\nconst cardSelector = (state, cardId) => {\r\n  const { cards, members, } = state.kanban;\r\n  const card = cards.byId[cardId];\r\n\r\n  return {\r\n    ...card,\r\n    members: card.memberIds.map((memberId) => members.byId[memberId]),\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    outline: 'none',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  },\r\n  card: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.background.dark\r\n    }\r\n  },\r\n  dragging: {\r\n    backgroundColor: theme.palette.background.dark\r\n  },\r\n  cover: {\r\n    height: 200\r\n  },\r\n  badge: {\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Card = forwardRef(({\r\n  cardId,\r\n  className,\r\n  dragging,\r\n  index,\r\n  list,\r\n  style,\r\n  ...rest\r\n}, ref) => {\r\n  const classes = useStyles();\r\n  const card = useSelector((state) => cardSelector(state, cardId));\r\n  const [isOpened, setOpened] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpened(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpened(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      index={index}\r\n      ref={ref}\r\n      style={style}\r\n      {...rest}\r\n    >\r\n      <MuiCard\r\n        className={clsx(\r\n          classes.card,\r\n          { [classes.dragging]: dragging }\r\n        )}\r\n        raised={dragging}\r\n        variant={dragging ? 'elevation' : 'outlined'}\r\n        onClick={handleOpen}\r\n      >\r\n        {card.cover && (\r\n          <CardMedia\r\n            className={classes.cover}\r\n            image={card.cover}\r\n          />\r\n        )}\r\n        <CardContent>\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"textPrimary\"\r\n          >\r\n            {card.name}\r\n          </Typography>\r\n          <Box\r\n            mt={2}\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n          >\r\n            {card.isSubscribed && (\r\n              <SvgIcon\r\n                className={classes.badge}\r\n                color=\"action\"\r\n                fontSize=\"small\"\r\n              >\r\n                <EyeIcon />\r\n              </SvgIcon>\r\n            )}\r\n            {card.attachments.length > 0 && (\r\n              <SvgIcon\r\n                className={classes.badge}\r\n                color=\"action\"\r\n                fontSize=\"small\"\r\n              >\r\n                <FileIcon />\r\n              </SvgIcon>\r\n            )}\r\n            {card.checklists.length > 0 && (\r\n              <SvgIcon\r\n                className={classes.badge}\r\n                color=\"action\"\r\n                fontSize=\"small\"\r\n              >\r\n                <CheckIcon />\r\n              </SvgIcon>\r\n            )}\r\n            {card.comments.length > 0 && (\r\n              <SvgIcon\r\n                className={classes.badge}\r\n                color=\"action\"\r\n                fontSize=\"small\"\r\n              >\r\n                <MessageIcon />\r\n              </SvgIcon>\r\n            )}\r\n            <Box flexGrow={1} />\r\n            {card.members.length > 0 && (\r\n              <AvatarGroup max={5}>\r\n                {card.members.map((member) => (\r\n                  <Avatar\r\n                    key={member.id}\r\n                    src={member.avatar}\r\n                  />\r\n                ))}\r\n              </AvatarGroup>\r\n            )}\r\n          </Box>\r\n        </CardContent>\r\n      </MuiCard>\r\n      <CardEditModal\r\n        open={isOpened}\r\n        onClose={handleClose}\r\n        card={card}\r\n        list={list}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nCard.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  dragging: PropTypes.bool.isRequired,\r\n  index: PropTypes.number,\r\n  list: PropTypes.object.isRequired,\r\n  style: PropTypes.object\r\n};\r\n\r\nCard.defaultProps = {\r\n  dragging: false,\r\n  style: {}\r\n};\r\n\r\nexport default Card;\r\n","import React, {\r\n  useState\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { useDispatch } from 'src/store';\r\nimport { createCard } from 'src/slices/kanban';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst CardAdd = ({\r\n  className,\r\n  listId,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const [name, setName] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleAddInit = () => {\r\n    setExpanded(true);\r\n  };\r\n\r\n  const handleAddCancel = () => {\r\n    setExpanded(false);\r\n    setName('');\r\n  };\r\n\r\n  const handleAddConfirm = async () => {\r\n    try {\r\n      await dispatch(createCard(listId, name || 'Untitled Card'));\r\n      setExpanded(false);\r\n      setName('');\r\n      enqueueSnackbar('Card created', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      {isExpanded ? (\r\n        <>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Card Title\"\r\n            name=\"cardName\"\r\n            onChange={handleChange}\r\n            value={name}\r\n            variant=\"outlined\"\r\n          />\r\n          <Box\r\n            mt={2}\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Button\r\n              onClick={handleAddCancel}\r\n              variant=\"text\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleAddConfirm}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Button onClick={handleAddInit}>\r\n            Add another card\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCardAdd.propTypes = {\r\n  className: PropTypes.string,\r\n  listId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default CardAdd;\r\n","import React, {\r\n  useState,\r\n  useRef\r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Droppable,\r\n  Draggable\r\n} from 'react-beautiful-dnd';\r\nimport {\r\n  Box,\r\n  ClickAwayListener,\r\n  Divider,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n  SvgIcon,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { MoreVertical as MoreIcon } from 'react-feather';\r\nimport { useDispatch, useSelector } from 'src/store';\r\nimport {\r\n  clearList,\r\n  deleteList,\r\n  updateList\r\n} from 'src/slices/kanban';\r\nimport Card from './Card';\r\nimport CardAdd from './CardAdd';\r\n\r\nconst listSelector = (state, listId) => {\r\n  const { lists } = state.kanban;\r\n\r\n  return lists.byId[listId];\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  inner: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    maxHeight: '100%',\r\n    overflowY: 'hidden',\r\n    overflowX: 'hidden',\r\n    width: 380,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: 300\r\n    }\r\n  },\r\n  title: {\r\n    cursor: 'pointer'\r\n  },\r\n  droppableArea: {\r\n    minHeight: 80,\r\n    flexGrow: 1,\r\n    overflowY: 'auto',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  menu: {\r\n    width: 240\r\n  }\r\n}));\r\n\r\nconst List = ({ className, listId, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [isMenuOpen, setMenuOpen] = useState(false);\r\n  const list = useSelector((state) => listSelector(state, listId));\r\n  const dispatch = useDispatch();\r\n  const moreRef = useRef(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [name, setName] = useState(list.name);\r\n  const [isRenaming, setRenaming] = useState(false);\r\n\r\n  const handleMenuOpen = () => {\r\n    setMenuOpen(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleRenameInit = () => {\r\n    setRenaming(true);\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    try {\r\n      if (!name) {\r\n        setName(list.name);\r\n        setRenaming(false);\r\n        return;\r\n      }\r\n\r\n      const update = { name };\r\n\r\n      setRenaming(false);\r\n      await dispatch(updateList(list.id, update));\r\n      enqueueSnackbar('List updated', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      setMenuOpen(false);\r\n      await dispatch(deleteList(list.id));\r\n      enqueueSnackbar('List deleted', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClear = async () => {\r\n    try {\r\n      setMenuOpen(false);\r\n      await dispatch(clearList(list.id));\r\n      enqueueSnackbar('List cleared', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Paper className={classes.inner}>\r\n        <Box\r\n          py={1}\r\n          px={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          {isRenaming ? (\r\n            <ClickAwayListener onClickAway={handleRename}>\r\n              <TextField\r\n                value={name}\r\n                onBlur={handleRename}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n              />\r\n            </ClickAwayListener>\r\n          ) : (\r\n            <Typography\r\n              color=\"inherit\"\r\n              variant=\"h5\"\r\n              onClick={handleRenameInit}\r\n            >\r\n              {list.name}\r\n            </Typography>\r\n          )}\r\n          <Box flexGrow={1} />\r\n          <IconButton\r\n            color=\"inherit\"\r\n            edge=\"end\"\r\n            onClick={handleMenuOpen}\r\n            ref={moreRef}\r\n          >\r\n            <SvgIcon fontSize=\"small\">\r\n              <MoreIcon />\r\n            </SvgIcon>\r\n          </IconButton>\r\n        </Box>\r\n        <Divider />\r\n        <Droppable\r\n          droppableId={list.id}\r\n          type=\"card\"\r\n        >\r\n          {(provided) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              className={classes.droppableArea}\r\n            >\r\n              {list.cardIds.map((cardId, index) => (\r\n                <Draggable\r\n                  draggableId={cardId}\r\n                  index={index}\r\n                  key={cardId}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <Card\r\n                      cardId={cardId}\r\n                      dragging={snapshot.isDragging}\r\n                      index={index}\r\n                      key={cardId}\r\n                      list={list}\r\n                      ref={provided.innerRef}\r\n                      style={{ ...provided.draggableProps.style }}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    />\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <Divider />\r\n        <Box p={2}>\r\n          <CardAdd listId={list.id} />\r\n        </Box>\r\n        <Menu\r\n          keepMounted\r\n          anchorEl={moreRef.current}\r\n          open={isMenuOpen}\r\n          onClose={handleMenuClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center'\r\n          }}\r\n          PaperProps={{ className: classes.menu }}\r\n          getContentAnchorEl={null}\r\n        >\r\n          <MenuItem onClick={handleRenameInit}>\r\n            Rename\r\n          </MenuItem>\r\n          <MenuItem onClick={handleClear}>\r\n            Clear\r\n          </MenuItem>\r\n          <MenuItem onClick={handleDelete}>\r\n            Delete\r\n          </MenuItem>\r\n        </Menu>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  className: PropTypes.string,\r\n  listId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default List;\r\n","\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { useDispatch } from 'src/store';\r\nimport { createList } from 'src/slices/kanban';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  inner: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 380,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: 300\r\n    }\r\n  }\r\n}));\r\n\r\nconst ListAdd = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const [name, setName] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleAddInit = () => {\r\n    setExpanded(true);\r\n  };\r\n\r\n  const handleAddCancel = () => {\r\n    setExpanded(false);\r\n    setName('');\r\n  };\r\n\r\n  const handleAddConfirm = async () => {\r\n    try {\r\n      await dispatch(createList(name || 'Untitled list'));\r\n      setExpanded(false);\r\n      setName('');\r\n      enqueueSnackbar('List created', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card className={classes.inner}>\r\n        <Box p={2}>\r\n          {isExpanded ? (\r\n            <>\r\n              <TextField\r\n                fullWidth\r\n                label=\"List Title\"\r\n                name=\"listName\"\r\n                onChange={handleChange}\r\n                value={name}\r\n                variant=\"outlined\"\r\n              />\r\n              <Box\r\n                mt={2}\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Button\r\n                  onClick={handleAddCancel}\r\n                  variant=\"text\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={handleAddConfirm}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                >\r\n                  Add\r\n                </Button>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Button onClick={handleAddInit}>\r\n                Add another list\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nListAdd.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ListAdd;\r\n","import React, { useEffect } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport { useDispatch, useSelector } from 'src/store';\r\nimport { getBoard, moveCard } from 'src/slices/kanban';\r\nimport Header from './Header';\r\nimport List from './List';\r\nimport ListAdd from './ListAdd';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    display: 'flex',\r\n    overflow: 'hidden',\r\n    flexDirection: 'column'\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    flexShrink: 1,\r\n    display: 'flex',\r\n    overflowY: 'hidden',\r\n    overflowX: 'auto'\r\n  },\r\n  inner: {\r\n    display: 'flex',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst KanbanView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { lists } = useSelector((state) => state.kanban);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleDragEnd = async ({ source, destination, draggableId }) => {\r\n    try {\r\n      // Dropped outside the list\r\n      if (!destination) {\r\n        return;\r\n      }\r\n\r\n      // Card has not been moved\r\n      if (\r\n        source.droppableId === destination.droppableId\r\n        && source.index === destination.index\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      if (source.droppableId === destination.droppableId) {\r\n      // Moved to the same list on diferent position\r\n        await dispatch(moveCard(draggableId, destination.index));\r\n      } else {\r\n      // Moved to another list\r\n        await dispatch(moveCard(draggableId, destination.index, destination.droppableId));\r\n      }\r\n\r\n      enqueueSnackbar('Card moved', {\r\n        variant: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar('Something went wrong', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getBoard());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Kanban Board\"\r\n    >\r\n      <Box p={3}>\r\n        <Header />\r\n      </Box>\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <div className={classes.content}>\r\n          <div className={classes.inner}>\r\n            {lists.allIds.map((listId) => (\r\n              <List\r\n                key={listId}\r\n                listId={listId}\r\n              />\r\n            ))}\r\n            <ListAdd />\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default KanbanView;\r\n"],"sourceRoot":""}