{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","components/Label.js","components/GenericMoreButton.js","views/reports/DashboardAlternativeView/CustomerActivity.js","views/reports/DashboardAlternativeView/EarningsSegmentation/Chart.js","views/reports/DashboardAlternativeView/EarningsSegmentation/index.js","views/reports/DashboardAlternativeView/FinancialStats/Chart.js","views/reports/DashboardAlternativeView/FinancialStats/index.js","views/reports/DashboardAlternativeView/Header.js","views/reports/DashboardAlternativeView/LatestOrders.js","views/reports/DashboardAlternativeView/MostProfitableProducts/CircularProgress.js","views/reports/DashboardAlternativeView/MostProfitableProducts/index.js","views/reports/DashboardAlternativeView/Overview.js","views/reports/DashboardAlternativeView/TopReferrals.js","views/reports/DashboardAlternativeView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","item","borderRight","divider","CustomerActivity","isMountedRef","activities","setActivities","getActivities","useCallback","a","axios","get","response","data","console","Card","CardHeader","action","GenericMoreButton","Divider","Box","Typography","align","variant","component","gutterBottom","List","disablePadding","activity","i","ListItem","length","key","id","ListItemAvatar","Avatar","alt","RouterLink","src","customer","avatar","to","ListItemText","disableTypography","Link","underline","description","noWrap","moment","createdAt","fromNow","Chart","dataProp","useTheme","datasets","dataset","borderWidth","borderColor","background","default","hoverBorderColor","labels","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","layout","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","dark","titleFontColor","text","bodyFontColor","footerFontColor","callbacks","label","tooltipItem","_data","index","value","textAlign","flexDirection","EarningsSegmentation","earnings","setEarnings","getEarnings","p","position","minHeight","thisYear","barThickness","maxBarThickness","barPercentage","categoryPercentage","lastYear","cornerRadius","scales","xAxes","gridLines","drawBorder","ticks","fontColor","yAxes","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","yLabel","chart","FinancialStats","pt","pr","pl","timeRanges","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","Breadcrumbs","separator","aria-label","Button","startIcon","SvgIcon","Menu","getContentAnchorEl","_timeRange","MenuItem","defaultProps","labelColors","complete","pending","rejected","LatestOrders","orders","setOrders","getOrders","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","order","hover","number","items","numeral","totalAmount","format","currency","status","size","endIcon","circle1","stroke","type","fill","strokeWidth","circle2","strokeDasharray","CircularProgress","viewBox","d","image","subscriptions","colors","green","MostProfitableProducts","products","setProducts","getProducts","product","ml","price","mr","conversionRate","breakpoints","up","down","borderBottom","valueContainer","marginLeft","Overview","overview","md","sm","xs","fontWeightBold","common","white","TopReferrals","referrals","setReferrals","getReferrals","referral","initials","primaryTypographyProps","paddingTop","paddingBottom","DashboardAlternativeView","Page","Container","lg","xl"],"mappings":"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","file":"static/js/38.4769305f.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","const getInitials = (name = '') => {\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map((v) => v && v[0].toUpperCase())\n    .join('');\n};\n\nexport default getInitials;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nexport default Label;\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nconst GenericMoreButton = (props) => {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={moreRef}\n          {...props}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(GenericMoreButton);\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst CustomerActivity = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState([]);\n\n  const getActivities = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/reports/customer-activity');\n\n      if (isMountedRef.current) {\n        setActivities(response.data.activities);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Customer Activity\"\n        action={<GenericMoreButton />}\n      />\n      <Divider />\n      <Box display=\"flex\">\n        <div className={classes.item}>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            15,245\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Registered\n          </Typography>\n        </div>\n        <Divider />\n        <div className={classes.item}>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            357\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Online\n          </Typography>\n        </div>\n      </Box>\n      <Divider />\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem\n            divider={i < activities.length - 1}\n            key={activity.id}\n          >\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={(\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              )}\n              secondary={(\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  {activity.description}\n                </Typography>\n              )}\n            />\n            <Typography\n              color=\"textSecondary\"\n              noWrap\n              variant=\"caption\"\n            >\n              {moment(activity.createdAt).fromNow()}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nCustomerActivity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CustomerActivity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nconst Chart = ({ data: dataProp, ...rest }) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map(((dataset) => ({\n      ...dataset,\n      borderWidth: 8,\n      borderColor: theme.palette.background.default,\n      hoverBorderColor: theme.palette.background.default\n    }))),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  return (\n    <Doughnut\n      data={data}\n      options={options}\n      {...rest}\n    />\n  );\n};\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired\n};\n\nexport default Chart;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst EarningsSegmentation = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [earnings, setEarnings] = useState(null);\n\n  const getEarnings = useCallback(async () => {\n    try  {\n      const response = await axios.get('/api/reports/earnings');\n\n      if (isMountedRef.current) {\n        setEarnings(response.data.earnings);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEarnings();\n  }, [getEarnings]);\n\n  if (!earnings) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Earnings Segmentation\"\n      />\n      <Divider />\n      <Box\n        p={3}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <Chart data={earnings} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {earnings.labels.map((label, i) => (\n          <div\n            key={label}\n            className={classes.item}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {earnings.datasets[0].data[i]}\n              %\n            </Typography>\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n};\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EarningsSegmentation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  fade,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nconst Chart = ({\n  data: dataProp,\n  labels,\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'This year',\n        backgroundColor: theme.palette.secondary.main,\n        data: dataProp.thisYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      },\n      {\n        label: 'Last year',\n        backgroundColor: fade(theme.palette.secondary.main, 0.25),\n        data: dataProp.lastYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5,\n            callback: (value) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          let label = `Sales: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Bar\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n};\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: 400\n  }\n}));\n\nconst FinancialStats = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const stats = {\n    thisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\n    lastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13]\n  };\n  const labels = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Financial Stats\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box\n          minWidth={700}\n          pt={4}\n          pr={2}\n          pl={2}\n        >\n          <Chart\n            className={classes.chart}\n            data={stats}\n            labels={labels}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nFinancialStats.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FinancialStats;\n","import React, {\n  useRef,\n  useState\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Finance Overview\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <CalendarIcon />\n            </SvgIcon>\n          }\n        >\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map((_timeRange) => (\n            <MenuItem\n              key={_timeRange.value}\n              onClick={() => setTimeRange(_timeRange.text)}\n            >\n              {_timeRange.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst labelColors = {\n  complete: 'success',\n  pending: 'warning',\n  rejected: 'error'\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst LatestOrders = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [orders, setOrders] = useState([]);\n\n  const getOrders = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/reports/latest-orders');\n  \n      if (isMountedRef.current) {\n        setOrders(response.data.orders);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getOrders();\n  }, [getOrders]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Latest Orders\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Number\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell>\n                  Items\n                </TableCell>\n                <TableCell>\n                  Total\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell align=\"right\">\n                  Date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>{order.number}</TableCell>\n                  <TableCell>{order.customer.name}</TableCell>\n                  <TableCell>{order.items}</TableCell>\n                  <TableCell>\n                    {numeral(order.totalAmount).format(`${order.currency}0,0.00`)}\n                  </TableCell>\n                  <TableCell>\n                    <Label color={labelColors[order.status]}>\n                      {order.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(order.createdAt).format('DD MMM, YYYY hh:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/management/orders\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: theme.palette.secondary.main,\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nconst CircularProgress = ({ className, value, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <svg viewBox=\"0 0 36 36\">\n        <path\n          className={classes.circle1}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <path\n          className={classes.circle2}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </div>\n  );\n};\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport numeral from 'numeral';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport CircularProgress from './CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  }\n}));\n\nconst MostProfitableProducts = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [products, setProducts] = useState([]);\n\n  const getProducts = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/reports/profitable-products');\n\n      if (isMountedRef.current) {\n        setProducts(response.data.products);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Most Profitable Products\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableBody>\n              {products.map((product) => (\n                <TableRow\n                  hover\n                  key={product.id}\n                >\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <img\n                        alt=\"Product\"\n                        className={classes.image}\n                        src={product.image}\n                      />\n                      <Box ml={2}>\n                        <Typography\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.name}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          <span className={classes.subscriptions}>\n                            {numeral(product.subscriptions).format('0,0')}\n                          </span>\n                          {' '}\n                          Active\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                    >\n                      Price\n                    </Typography>\n                    <Typography\n                      noWrap\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      <span className={classes.value}>\n                        {numeral(product.price).format(`${product.currency}0,0.00`)}\n                      </span>\n                      {' '}\n                      monthly\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"flex-end\"\n                    >\n                      <Box mr={2}>\n                        <Typography\n                          align=\"right\"\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.conversionRate}\n                          %\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          Conversion Rate\n                        </Typography>\n                      </Box>\n                      <CircularProgress value={product.conversionRate} />\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nMostProfitableProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MostProfitableProducts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Overview = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const overview = {\n    income: '854,355.00',\n    expanses: '373,250.50',\n    profit: '123,532.00',\n    subscriptions: '26,000'\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n      >\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Income\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              $\n              {overview.income}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"success\"\n            >\n              +25%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Expanses\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              $\n              {overview.expanses}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"success\"\n            >\n              +12%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Net Profit\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {overview.profit}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"error\"\n            >\n              -20%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Active Subscriptions\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {overview.subscriptions}\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  avatar: {\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.common.white\n  }\n}));\n\nconst TopReferrals = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [referrals, setReferrals] = useState([]);\n\n  const getReferrals = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/reports/top-referrals');\n\n      if (isMountedRef.current) {\n        setReferrals(response.data.referrals);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReferrals();\n  }, [getReferrals]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Top Referrals\"\n      />\n      <Divider />\n      <List disablePadding>\n        {referrals.map((referral, i) => (\n          <ListItem\n            divider={i < referrals.length - 1}\n            key={referral.name}\n          >\n            <ListItemAvatar>\n              <Avatar\n                className={classes.avatar}\n                style={{ backgroundColor: referral.color }}\n              >\n                {referral.initials}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={referral.name}\n              primaryTypographyProps={{ variant: 'h6' }}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              {numeral(referral.value).format('0,0')}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n};\n\nTopReferrals.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopReferrals;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport CustomerActivity from './CustomerActivity';\nimport EarningsSegmentation from './EarningsSegmentation';\nimport FinancialStats from './FinancialStats';\nimport Header from './Header';\nimport LatestOrders from './LatestOrders';\nimport MostProfitableProducts from './MostProfitableProducts';\nimport Overview from './Overview';\nimport TopReferrals from './TopReferrals';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst DashboardAlternativeView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard Alternative\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n            <Overview />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xl={9}\n            xs={12}\n          >\n            <FinancialStats />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xl={3}\n            xs={12}\n          >\n            <EarningsSegmentation />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <CustomerActivity />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xs={12}\n          >\n            <MostProfitableProducts />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <TopReferrals />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default DashboardAlternativeView;\n"],"sourceRoot":""}