{"version":3,"sources":["views/docs/APICallsView/Content.mdx"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","target","href","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter"],"mappings":"mXAGaA,EAAc,CAAC,KAAO,aAAa,QAAU,KAAK,KAAO,OAAO,MAAQ,KAK/EC,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,aADR,aAGA,iBAAQ,CACN,GAAM,+BADR,gCAGA,4EAA2D,iBAAGC,OAAO,SAASC,KAAK,kCAAxB,SAA3D,8EAAgN,iBAAGD,OAAO,SAASC,KAAK,oCAAxB,SAAhN,KACA,iBAAQ,CACN,GAAM,WADR,WAGA,yLACA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,kpIAGhB,iBAAQ,CACN,GAAM,aADR,aAGA,mCAAkB,0BAAYA,WAAW,KAAvB,SAAlB,SAA6E,0BAAYA,WAAW,KAAvB,sBAA7E,KAAiJ,0BAAYA,WAAW,KAAvB,sBAAjJ,6XACA,iBAAQ,CACN,GAAM,wBADR,wBAGA,8DAA6C,iBAAGF,OAAO,SAASC,KAAK,kDAAxB,sBAA7C,iPACA,iBAAQ,CACN,GAAM,yCADR,yCAGA,4CACA,sBACE,kBAAIC,WAAW,MAAf,uCACA,kBAAIA,WAAW,MAAf,cAAmC,0BAAYA,WAAW,MAAvB,iBAAnC,eAA6G,0BAAYA,WAAW,MAAvB,eAA7G,KAA2K,0BAAYA,WAAW,MAAvB,eAA3K,sBAEF,iBAAQ,CACN,GAAM,+BADR,+BAGA,gJACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,q+CAOpBN,EAAWO,gBAAiB,EACrB,IAAMC,EAAkB,iBAAmB,CAChD,CACEC,GAAI,8BACJC,MAAO,EACPC,MAAO,+BACPC,SAAU,IAId,CACIH,GAAI,UACJC,MAAO,EACPC,MAAO,UACPC,SAAU,IAId,CACIH,GAAI,YACJC,MAAO,EACPC,MAAO,YACPC,SAAU,IAId,CACIH,GAAI,uBACJC,MAAO,EACPC,MAAO,uBACPC,SAAU,IAId,CACIH,GAAI,wCACJC,MAAO,EACPC,MAAO,wCACPC,SAAU,CACN,CACMH,GAAI,8BACJC,MAAO,EACPC,MAAO,8BACPC,SAAU,QAQXC,EAAc","file":"static/js/49.108f6e11.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.74,\"time\":104400,\"words\":348}\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"api-calls\"\n    }}>{`API Calls`}</h1>\n    <h2 {...{\n      \"id\": \"how-can-i-make-an-ajax-call\"\n    }}>{`How can I make an AJAX call?`}</h2>\n    <p>{`You can use any library you like. We decided to use `}<a target=\"_blank\" href=\"https://github.com/axios/axios\">{`Axios`}</a>{` since it allows us to create instances. Another good alternative could be `}<a target=\"_blank\" href=\"https://github.com/andris9/fetch\">{`Fetch`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Since we keep up to date with the latest updates of React, our product uses functional components with React Hooks, but this can be applied to Class components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">CustomerListView</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> classes <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useStyles</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> isMountedRef <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useIsMountedRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>customers<span class=\\\"token punctuation\\\">,</span> setCustomers<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> getCustomers <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useCallback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> response <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> axios<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/api/customers'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isMountedRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">setCustomers</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>customers<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">//</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>isMountedRef<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">getCustomers</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>getCustomers<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token comment\\\">// Render data</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"important\"\n    }}>{`Important`}</h2>\n    <p>{`If you use `}<inlineCode parentName=\"p\">{`axios`}</inlineCode>{` from `}<inlineCode parentName=\"p\">{`src/utils/axios.js`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`src/utils/axios.ts`}</inlineCode>{` for TS version), this instance is being intercepted by the MockAdapter. This means that all your requests made using it will be blocked the by adapter. If you use it, probably for your own server API requests, and you get a 404 in your console, it is probably because the adapter is not able to find the specified URL. If you have a server, please use a new instance of Axios.`}</p>\n    <h2 {...{\n      \"id\": \"request-interceptors\"\n    }}>{`Request interceptors`}</h2>\n    <p>{`Using Axios we were able to integrate `}<a target=\"_blank\" href=\"https://github.com/ctimmerm/axios-mock-adapter\">{`Axios Mock Adapter`}</a>{` to simulate real server calls. To archive that, you have to create an Axios instante and use it whenever you make a request call. Now you can extend your instance and add Axios Mock Adapter to listen for requests and return custom data.`}</p>\n    <h2 {...{\n      \"id\": \"removing-existing-request-interceptos\"\n    }}>{`Removing existing request interceptos`}</h2>\n    <p>{`There are two ways:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Simply use a new instance of Axios.`}</li>\n      <li parentName=\"ol\">{`Remove the `}<inlineCode parentName=\"li\">{`src/__mocks__`}</inlineCode>{` folder and `}<inlineCode parentName=\"li\">{`src/mock.js`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`src/mock.ts`}</inlineCode>{` for TS version).`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"adding-request-interceptors\"\n    }}>{`Adding request interceptors`}</h3>\n    <p>{`It takes ony a few seconds to add a new call listener. The interceptor has a similar format to Express JS, for example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> mock <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./mock'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmock<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onGet</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/api/invoices'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reply</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  invoices<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span> id<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> total<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">32.43</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> id<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> total<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">67.00</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"how-can-i-make-an-ajax-call\",\n    level: 2,\n    title: \"How can I make an AJAX call?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"example\",\n    level: 2,\n    title: \"Example\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"important\",\n    level: 2,\n    title: \"Important\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"request-interceptors\",\n    level: 2,\n    title: \"Request interceptors\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"removing-existing-request-interceptos\",\n    level: 2,\n    title: \"Removing existing request interceptos\",\n    children: [\n        {\n              id: \"adding-request-interceptors\",\n              level: 3,\n              title: \"Adding request interceptors\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}