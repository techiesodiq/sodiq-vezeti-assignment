{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","views/customer/CustomerEditView/CustomerEditForm.js","views/customer/CustomerEditView/Header.js","views/customer/CustomerEditView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","createSvgIcon","theme","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","ButtonBase","focusRipple","MoreHorizIcon","Breadcrumbs","children","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","ol","items","reduce","acc","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","margin","listStyle","userSelect","useStyles","makeStyles","CustomerEditForm","customer","rest","enqueueSnackbar","useSnackbar","initialValues","address1","address2","country","email","hasDiscountedPrices","isVerified","phone","state","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","wait","success","variant","action","Button","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Grid","container","item","md","xs","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","Switch","checked","edge","Box","mt","type","disabled","Header","fontSize","aria-label","Link","to","RouterLink","background","dark","minHeight","paddingTop","CustomerEditView","isMountedRef","useState","setCustomer","getCustomer","useCallback","axios","get","response","data","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/36.5b1b0cf8.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\r\n\r\nconst useIsMountedRef = () => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMountedRef;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport wait from 'src/utils/wait';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst CustomerEditForm = ({\r\n  className,\r\n  customer,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        address1: customer.address1 || '',\r\n        address2: customer.address2 || '',\r\n        country: customer.country || '',\r\n        email: customer.email || '',\r\n        hasDiscountedPrices: customer.hasDiscountedPrices || false,\r\n        isVerified: customer.isVerified || false,\r\n        name: customer.name || '',\r\n        phone: customer.phone || '',\r\n        state: customer.state || '',\r\n        submit: null\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        address1: Yup.string().max(255),\r\n        address2: Yup.string().max(255),\r\n        country: Yup.string().max(255),\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n        hasDiscountedPrices: Yup.bool(),\r\n        isVerified: Yup.bool(),\r\n        name: Yup.string().max(255).required('Name is required'),\r\n        phone: Yup.string().max(15),\r\n        state: Yup.string().max(255)\r\n      })}\r\n      onSubmit={async (values, {\r\n        resetForm,\r\n        setErrors,\r\n        setStatus,\r\n        setSubmitting\r\n      }) => {\r\n        try {\r\n          // NOTE: Make API request\r\n          await wait(500);\r\n          resetForm();\r\n          setStatus({ success: true });\r\n          setSubmitting(false);\r\n          enqueueSnackbar('Customer updated', {\r\n            variant: 'success',\r\n            action: <Button>See all</Button>\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n          setStatus({ success: false });\r\n          setErrors({ submit: err.message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values\r\n      }) => (\r\n        <form\r\n          className={clsx(classes.root, className)}\r\n          onSubmit={handleSubmit}\r\n          {...rest}\r\n        >\r\n          <Card>\r\n            <CardContent>\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n              >\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.name && errors.name)}\r\n                    fullWidth\r\n                    helperText={touched.name && errors.name}\r\n                    label=\"Full name\"\r\n                    name=\"name\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    required\r\n                    value={values.name}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.email && errors.email)}\r\n                    fullWidth\r\n                    helperText={touched.email && errors.email}\r\n                    label=\"Email address\"\r\n                    name=\"email\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    required\r\n                    value={values.email}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.country && errors.country)}\r\n                    fullWidth\r\n                    helperText={touched.country && errors.country}\r\n                    label=\"Country\"\r\n                    name=\"country\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.country}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.state && errors.state)}\r\n                    fullWidth\r\n                    helperText={touched.state && errors.state}\r\n                    label=\"State/Region\"\r\n                    name=\"state\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.state}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.address1 && errors.address1)}\r\n                    fullWidth\r\n                    helperText={touched.address1 && errors.address1}\r\n                    label=\"Address 1\"\r\n                    name=\"address1\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.address1}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.address2 && errors.address2)}\r\n                    fullWidth\r\n                    helperText={touched.address2 && errors.address2}\r\n                    label=\"Address 2\"\r\n                    name=\"address2\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.address2}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.phone && errors.phone)}\r\n                    fullWidth\r\n                    helperText={touched.phone && errors.phone}\r\n                    label=\"Phone number\"\r\n                    name=\"phone\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.phone}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item />\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    Email Verified\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                  >\r\n                    Disabling this will automatically send the user a verification\r\n                    email\r\n                  </Typography>\r\n                  <Switch\r\n                    checked={values.isVerified}\r\n                    color=\"secondary\"\r\n                    edge=\"start\"\r\n                    name=\"isVerified\"\r\n                    onChange={handleChange}\r\n                    value={values.isVerified}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    Discounted Prices\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                  >\r\n                    This will give the user discounted prices for all products\r\n                  </Typography>\r\n                  <Switch\r\n                    checked={values.hasDiscountedPrices}\r\n                    color=\"secondary\"\r\n                    edge=\"start\"\r\n                    name=\"hasDiscountedPrices\"\r\n                    onChange={handleChange}\r\n                    value={values.hasDiscountedPrices}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={2}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Update Customer\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nCustomerEditForm.propTypes = {\r\n  className: PropTypes.string,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CustomerEditForm;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Breadcrumbs,\r\n  Link,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        <Link\r\n          variant=\"body1\"\r\n          color=\"inherit\"\r\n          to=\"/app\"\r\n          component={RouterLink}\r\n        >\r\n          Dashboard\r\n        </Link>\r\n        <Link\r\n          variant=\"body1\"\r\n          color=\"inherit\"\r\n          to=\"/app/management\"\r\n          component={RouterLink}\r\n        >\r\n          Management\r\n        </Link>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Customers\r\n        </Typography>\r\n      </Breadcrumbs>\r\n      <Typography\r\n        variant=\"h3\"\r\n        color=\"textPrimary\"\r\n      >\r\n        Edit Customer\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, {\r\n  useState,\r\n  useCallback,\r\n  useEffect\r\n} from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport Page from 'src/components/Page';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport CustomerEditForm from './CustomerEditForm';\r\nimport Header from './Header';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerEditView = () => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [customer, setCustomer] = useState(null);\r\n\r\n  const getCustomer = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/customers/1');\r\n    \r\n      if (isMountedRef.current) {\r\n        setCustomer(response.data.customer);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getCustomer();\r\n  }, [getCustomer]);\r\n\r\n  if (!customer) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Edit\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Header />\r\n      </Container>\r\n      <Box mt={3}>\r\n        <Container maxWidth=\"lg\">\r\n          <CustomerEditForm customer={customer} />\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerEditView;\r\n"],"sourceRoot":""}