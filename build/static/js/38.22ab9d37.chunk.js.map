{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","components/Label.js","components/GenericMoreButton.js","views/reports/DashboardAlternativeView/CustomerActivity.js","views/reports/DashboardAlternativeView/EarningsSegmentation/Chart.js","views/reports/DashboardAlternativeView/EarningsSegmentation/index.js","views/reports/DashboardAlternativeView/FinancialStats/Chart.js","views/reports/DashboardAlternativeView/FinancialStats/index.js","views/reports/DashboardAlternativeView/Header.js","views/reports/DashboardAlternativeView/LatestOrders.js","views/reports/DashboardAlternativeView/MostProfitableProducts/CircularProgress.js","views/reports/DashboardAlternativeView/MostProfitableProducts/index.js","views/reports/DashboardAlternativeView/Overview.js","views/reports/DashboardAlternativeView/TopReferrals.js","views/reports/DashboardAlternativeView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","item","borderRight","divider","CustomerActivity","isMountedRef","activities","setActivities","getActivities","useCallback","a","axios","get","response","data","console","Card","CardHeader","action","GenericMoreButton","Divider","Box","Typography","align","variant","component","gutterBottom","List","disablePadding","activity","i","ListItem","length","key","id","ListItemAvatar","Avatar","alt","RouterLink","src","customer","avatar","to","ListItemText","disableTypography","Link","underline","description","noWrap","moment","createdAt","fromNow","Chart","dataProp","useTheme","datasets","dataset","borderWidth","borderColor","background","default","hoverBorderColor","labels","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","layout","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","dark","titleFontColor","text","bodyFontColor","footerFontColor","callbacks","label","tooltipItem","_data","index","value","textAlign","flexDirection","EarningsSegmentation","earnings","setEarnings","getEarnings","p","position","minHeight","thisYear","barThickness","maxBarThickness","barPercentage","categoryPercentage","lastYear","cornerRadius","scales","xAxes","gridLines","drawBorder","ticks","fontColor","yAxes","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","yLabel","chart","FinancialStats","pt","pr","pl","timeRanges","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","Breadcrumbs","separator","aria-label","Button","startIcon","SvgIcon","Menu","getContentAnchorEl","_timeRange","MenuItem","defaultProps","labelColors","complete","pending","rejected","LatestOrders","orders","setOrders","getOrders","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","order","hover","number","items","numeral","totalAmount","format","currency","status","size","endIcon","circle1","stroke","type","fill","strokeWidth","circle2","strokeDasharray","CircularProgress","viewBox","d","image","subscriptions","colors","green","MostProfitableProducts","products","setProducts","getProducts","product","ml","price","mr","conversionRate","breakpoints","up","down","borderBottom","valueContainer","marginLeft","Overview","overview","md","sm","xs","fontWeightBold","common","white","TopReferrals","referrals","setReferrals","getReferrals","referral","initials","primaryTypographyProps","paddingTop","paddingBottom","DashboardAlternativeView","Page","Container","lg","xl"],"mappings":"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","file":"static/js/38.22ab9d37.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\r\n\r\nconst useIsMountedRef = () => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMountedRef;\r\n","const getInitials = (name = '') => {\r\n  return name\r\n    .replace(/\\s+/, ' ')\r\n    .split(' ')\r\n    .slice(0, 2)\r\n    .map((v) => v && v[0].toUpperCase())\r\n    .join('');\r\n};\r\n\r\nexport default getInitials;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { fade, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontFamily: theme.typography.fontFamily,\r\n    alignItems: 'center',\r\n    borderRadius: 2,\r\n    display: 'inline-flex',\r\n    flexGrow: 0,\r\n    whiteSpace: 'nowrap',\r\n    cursor: 'default',\r\n    flexShrink: 0,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    height: 20,\r\n    justifyContent: 'center',\r\n    letterSpacing: 0.5,\r\n    minWidth: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    textTransform: 'uppercase'\r\n  },\r\n  primary: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\r\n  },\r\n  secondary: {\r\n    color: theme.palette.secondary.main,\r\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n    backgroundColor: fade(theme.palette.error.main, 0.08)\r\n  },\r\n  success: {\r\n    color: theme.palette.success.main,\r\n    backgroundColor: fade(theme.palette.success.main, 0.08)\r\n  },\r\n  warning: {\r\n    color: theme.palette.warning.main,\r\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\r\n  }\r\n}));\r\n\r\nconst Label = ({\r\n  className = '',\r\n  color = 'secondary',\r\n  children,\r\n  style,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      className={\r\n        clsx(classes.root, {\r\n          [classes[color]]: color\r\n        }, className)\r\n      }\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\r\n};\r\n\r\nexport default Label;\r\n","import React, {\r\n  useRef,\r\n  useState,\r\n  memo\r\n} from 'react';\r\nimport {\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Tooltip,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  menu: {\r\n    width: 256,\r\n    maxWidth: '100%'\r\n  }\r\n}));\r\n\r\nconst GenericMoreButton = (props) => {\r\n  const classes = useStyles();\r\n  const moreRef = useRef(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"More options\">\r\n        <IconButton\r\n          onClick={handleMenuOpen}\r\n          ref={moreRef}\r\n          {...props}\r\n        >\r\n          <MoreIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        anchorEl={moreRef.current}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n        onClose={handleMenuClose}\r\n        open={openMenu}\r\n        PaperProps={{ className: classes.menu }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n      >\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <GetAppIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Import\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <FileCopyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Copy\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <PictureAsPdfIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Export\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <ArchiveIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Archive\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(GenericMoreButton);\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport getInitials from 'src/utils/getInitials';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  item: {\r\n    padding: theme.spacing(3),\r\n    flexGrow: 1,\r\n    '&:first-of-type': {\r\n      borderRight: `1px solid ${theme.palette.divider}`\r\n    }\r\n  }\r\n}));\r\n\r\nconst CustomerActivity = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [activities, setActivities] = useState([]);\r\n\r\n  const getActivities = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/reports/customer-activity');\r\n\r\n      if (isMountedRef.current) {\r\n        setActivities(response.data.activities);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getActivities();\r\n  }, [getActivities]);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        title=\"Customer Activity\"\r\n        action={<GenericMoreButton />}\r\n      />\r\n      <Divider />\r\n      <Box display=\"flex\">\r\n        <div className={classes.item}>\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h3\"\r\n            color=\"textPrimary\"\r\n          >\r\n            15,245\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            component=\"h4\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n            color=\"textSecondary\"\r\n          >\r\n            Registered\r\n          </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className={classes.item}>\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h3\"\r\n            color=\"textPrimary\"\r\n          >\r\n            357\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            component=\"h4\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n            color=\"textSecondary\"\r\n          >\r\n            Online\r\n          </Typography>\r\n        </div>\r\n      </Box>\r\n      <Divider />\r\n      <List disablePadding>\r\n        {activities.map((activity, i) => (\r\n          <ListItem\r\n            divider={i < activities.length - 1}\r\n            key={activity.id}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt=\"Customer\"\r\n                component={RouterLink}\r\n                src={activity.customer.avatar}\r\n                to=\"#\"\r\n              >\r\n                {getInitials(activity.customer.name)}\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              disableTypography\r\n              primary={(\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"#\"\r\n                  underline=\"none\"\r\n                  variant=\"h6\"\r\n                >\r\n                  {activity.customer.name}\r\n                </Link>\r\n              )}\r\n              secondary={(\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {activity.description}\r\n                </Typography>\r\n              )}\r\n            />\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              noWrap\r\n              variant=\"caption\"\r\n            >\r\n              {moment(activity.createdAt).fromNow()}\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCustomerActivity.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default CustomerActivity;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { useTheme } from '@material-ui/core';\r\n\r\nconst Chart = ({ data: dataProp, ...rest }) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: dataProp.datasets.map(((dataset) => ({\r\n      ...dataset,\r\n      borderWidth: 8,\r\n      borderColor: theme.palette.background.default,\r\n      hoverBorderColor: theme.palette.background.default\r\n    }))),\r\n    labels: dataProp.labels\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    legend: {\r\n      display: false\r\n    },\r\n    layout: {\r\n      padding: 0\r\n    },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      caretSize: 10,\r\n      yPadding: 20,\r\n      xPadding: 20,\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.divider,\r\n      backgroundColor: theme.palette.background.dark,\r\n      titleFontColor: theme.palette.text.primary,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      callbacks: {\r\n        label(tooltipItem, _data) {\r\n          const label = _data.labels[tooltipItem.index];\r\n          const value = _data.datasets[0].data[tooltipItem.index];\r\n\r\n          return `${label}: ${value}%`;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Doughnut\r\n      data={data}\r\n      options={options}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nChart.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Chart;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport Chart from './Chart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  item: {\r\n    textAlign: 'center',\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(3, 2),\r\n    '&:not(:last-of-type)': {\r\n      borderRight: `1px solid ${theme.palette.divider}`\r\n    }\r\n  }\r\n}));\r\n\r\nconst EarningsSegmentation = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [earnings, setEarnings] = useState(null);\r\n\r\n  const getEarnings = useCallback(async () => {\r\n    try  {\r\n      const response = await axios.get('/api/reports/earnings');\r\n\r\n      if (isMountedRef.current) {\r\n        setEarnings(response.data.earnings);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getEarnings();\r\n  }, [getEarnings]);\r\n\r\n  if (!earnings) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"Earnings Segmentation\"\r\n      />\r\n      <Divider />\r\n      <Box\r\n        p={3}\r\n        position=\"relative\"\r\n        minHeight={320}\r\n      >\r\n        <Chart data={earnings} />\r\n      </Box>\r\n      <Divider />\r\n      <Box display=\"flex\">\r\n        {earnings.labels.map((label, i) => (\r\n          <div\r\n            key={label}\r\n            className={classes.item}\r\n          >\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"textPrimary\"\r\n            >\r\n              {earnings.datasets[0].data[i]}\r\n              %\r\n            </Typography>\r\n            <Typography\r\n              variant=\"overline\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {label}\r\n            </Typography>\r\n          </div>\r\n        ))}\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nEarningsSegmentation.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default EarningsSegmentation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  fade,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative'\r\n  }\r\n}));\r\n\r\nconst Chart = ({\r\n  data: dataProp,\r\n  labels,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: 'This year',\r\n        backgroundColor: theme.palette.secondary.main,\r\n        data: dataProp.thisYear,\r\n        barThickness: 12,\r\n        maxBarThickness: 10,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 0.5\r\n      },\r\n      {\r\n        label: 'Last year',\r\n        backgroundColor: fade(theme.palette.secondary.main, 0.25),\r\n        data: dataProp.lastYear,\r\n        barThickness: 12,\r\n        maxBarThickness: 10,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 0.5\r\n      }\r\n    ],\r\n    labels\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    legend: {\r\n      display: false\r\n    },\r\n    layout: {\r\n      padding: 0\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: theme.palette.text.secondary\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0,\r\n            maxTicksLimit: 5,\r\n            callback: (value) => (value > 0 ? `${value}K` : value)\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      caretSize: 10,\r\n      yPadding: 20,\r\n      xPadding: 20,\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.divider,\r\n      backgroundColor: theme.palette.background.dark,\r\n      titleFontColor: theme.palette.text.primary,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      callbacks: {\r\n        title: () => {},\r\n        label: (tooltipItem) => {\r\n          let label = `Sales: ${tooltipItem.yLabel}`;\r\n\r\n          if (tooltipItem.yLabel > 0) {\r\n            label += 'K';\r\n          }\r\n\r\n          return label;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Bar\r\n        data={data}\r\n        options={options}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nChart.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.object.isRequired,\r\n  labels: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport Chart from './Chart';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  chart: {\r\n    height: 400\r\n  }\r\n}));\r\n\r\nconst FinancialStats = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const stats = {\r\n    thisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\r\n    lastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13]\r\n  };\r\n  const labels = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"Financial Stats\"\r\n      />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box\r\n          minWidth={700}\r\n          pt={4}\r\n          pr={2}\r\n          pl={2}\r\n        >\r\n          <Chart\r\n            className={classes.chart}\r\n            data={stats}\r\n            labels={labels}\r\n          />\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nFinancialStats.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default FinancialStats;\r\n","import React, {\r\n  useRef,\r\n  useState\r\n} from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Breadcrumbs,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  Menu,\r\n  MenuItem,\r\n  SvgIcon,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { Calendar as CalendarIcon } from 'react-feather';\r\n\r\nconst timeRanges = [\r\n  {\r\n    value: 'today',\r\n    text: 'Today'\r\n  },\r\n  {\r\n    value: 'yesterday',\r\n    text: 'Yesterday'\r\n  },\r\n  {\r\n    value: 'last_30_days',\r\n    text: 'Last 30 days'\r\n  },\r\n  {\r\n    value: 'last_year',\r\n    text: 'Last year'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const actionRef = useRef(null);\r\n  const [isMenuOpen, setMenuOpen] = useState(false);\r\n  const [timeRange, setTimeRange] = useState(timeRanges[2].text);\r\n\r\n  return (\r\n    <Grid\r\n      className={clsx(classes.root, className)}\r\n      container\r\n      justify=\"space-between\"\r\n      spacing={3}\r\n      {...rest}\r\n    >\r\n      <Grid item>\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app\"\r\n            component={RouterLink}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textPrimary\"\r\n          >\r\n            Reports\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Typography\r\n          variant=\"h3\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Finance Overview\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          ref={actionRef}\r\n          onClick={() => setMenuOpen(true)}\r\n          startIcon={\r\n            <SvgIcon fontSize=\"small\">\r\n              <CalendarIcon />\r\n            </SvgIcon>\r\n          }\r\n        >\r\n          {timeRange}\r\n        </Button>\r\n        <Menu\r\n          anchorEl={actionRef.current}\r\n          onClose={() => setMenuOpen(false)}\r\n          open={isMenuOpen}\r\n          getContentAnchorEl={null}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center'\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center'\r\n          }}\r\n        >\r\n          {timeRanges.map((_timeRange) => (\r\n            <MenuItem\r\n              key={_timeRange.value}\r\n              onClick={() => setTimeRange(_timeRange.text)}\r\n            >\r\n              {_timeRange.text}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nHeader.defaultProps = {};\r\n\r\nexport default Header;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Label from 'src/components/Label';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\n\r\nconst labelColors = {\r\n  complete: 'success',\r\n  pending: 'warning',\r\n  rejected: 'error'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst LatestOrders = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const getOrders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/reports/latest-orders');\r\n  \r\n      if (isMountedRef.current) {\r\n        setOrders(response.data.orders);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, [getOrders]);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"Latest Orders\"\r\n      />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={700}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip\r\n                    enterDelay={300}\r\n                    title=\"Sort\"\r\n                  >\r\n                    <TableSortLabel\r\n                      active\r\n                      direction=\"desc\"\r\n                    >\r\n                      Number\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  Customer\r\n                </TableCell>\r\n                <TableCell>\r\n                  Items\r\n                </TableCell>\r\n                <TableCell>\r\n                  Total\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  Date\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order) => (\r\n                <TableRow\r\n                  hover\r\n                  key={order.id}\r\n                >\r\n                  <TableCell>{order.number}</TableCell>\r\n                  <TableCell>{order.customer.name}</TableCell>\r\n                  <TableCell>{order.items}</TableCell>\r\n                  <TableCell>\r\n                    {numeral(order.totalAmount).format(`${order.currency}0,0.00`)}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Label color={labelColors[order.status]}>\r\n                      {order.status}\r\n                    </Label>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {moment(order.createdAt).format('DD MMM, YYYY hh:mm:ss')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box\r\n        p={2}\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button\r\n          component={RouterLink}\r\n          size=\"small\"\r\n          to=\"/app/management/orders\"\r\n          endIcon={<NavigateNextIcon />}\r\n        >\r\n          See all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestOrders;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 56,\r\n    height: 56\r\n  },\r\n  circle1: {\r\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\r\n    fill: 'none',\r\n    strokeWidth: 4\r\n  },\r\n  circle2: {\r\n    stroke: theme.palette.secondary.main,\r\n    fill: 'none',\r\n    strokeWidth: 4,\r\n    animation: '$progress 1s ease-out forwards'\r\n  },\r\n  '@keyframes progress': {\r\n    '0%': {\r\n      strokeDasharray: '0 100'\r\n    }\r\n  }\r\n}));\r\n\r\nconst CircularProgress = ({ className, value, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <svg viewBox=\"0 0 36 36\">\r\n        <path\r\n          className={classes.circle1}\r\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          strokeDasharray=\"100, 100\"\r\n        />\r\n        <path\r\n          className={classes.circle2}\r\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          strokeDasharray={`${value}, 100`}\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nCircularProgress.propTypes = {\r\n  className: PropTypes.string,\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nexport default CircularProgress;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport numeral from 'numeral';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport CircularProgress from './CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  image: {\r\n    flexShrink: 0,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  subscriptions: {\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  value: {\r\n    color: colors.green[600],\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  }\r\n}));\r\n\r\nconst MostProfitableProducts = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/reports/profitable-products');\r\n\r\n      if (isMountedRef.current) {\r\n        setProducts(response.data.products);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [getProducts]);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"Most Profitable Products\"\r\n      />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={700}>\r\n          <Table>\r\n            <TableBody>\r\n              {products.map((product) => (\r\n                <TableRow\r\n                  hover\r\n                  key={product.id}\r\n                >\r\n                  <TableCell>\r\n                    <Box\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <img\r\n                        alt=\"Product\"\r\n                        className={classes.image}\r\n                        src={product.image}\r\n                      />\r\n                      <Box ml={2}>\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {product.name}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                        >\r\n                          <span className={classes.subscriptions}>\r\n                            {numeral(product.subscriptions).format('0,0')}\r\n                          </span>\r\n                          {' '}\r\n                          Active\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      Price\r\n                    </Typography>\r\n                    <Typography\r\n                      noWrap\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                    >\r\n                      <span className={classes.value}>\r\n                        {numeral(product.price).format(`${product.currency}0,0.00`)}\r\n                      </span>\r\n                      {' '}\r\n                      monthly\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"flex-end\"\r\n                    >\r\n                      <Box mr={2}>\r\n                        <Typography\r\n                          align=\"right\"\r\n                          variant=\"h6\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {product.conversionRate}\r\n                          %\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                        >\r\n                          Conversion Rate\r\n                        </Typography>\r\n                      </Box>\r\n                      <CircularProgress value={product.conversionRate} />\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box\r\n        p={2}\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button\r\n          component={RouterLink}\r\n          size=\"small\"\r\n          to=\"#\"\r\n          endIcon={<NavigateNextIcon />}\r\n        >\r\n          See all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMostProfitableProducts.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default MostProfitableProducts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Label from 'src/components/Label';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  item: {\r\n    padding: theme.spacing(3),\r\n    textAlign: 'center',\r\n    [theme.breakpoints.up('md')]: {\r\n      '&:not(:last-of-type)': {\r\n        borderRight: `1px solid ${theme.palette.divider}`\r\n      }\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      '&:not(:last-of-type)': {\r\n        borderBottom: `1px solid ${theme.palette.divider}`\r\n      }\r\n    }\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  label: {\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Overview = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const overview = {\r\n    income: '854,355.00',\r\n    expanses: '373,250.50',\r\n    profit: '123,532.00',\r\n    subscriptions: '26,000'\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Grid\r\n        alignItems=\"center\"\r\n        container\r\n        justify=\"space-between\"\r\n      >\r\n        <Grid\r\n          className={classes.item}\r\n          item\r\n          md={3}\r\n          sm={6}\r\n          xs={12}\r\n        >\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n            color=\"textSecondary\"\r\n          >\r\n            Total Income\r\n          </Typography>\r\n          <div className={classes.valueContainer}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              color=\"textPrimary\"\r\n            >\r\n              $\r\n              {overview.income}\r\n            </Typography>\r\n            <Label\r\n              className={classes.label}\r\n              color=\"success\"\r\n            >\r\n              +25%\r\n            </Label>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.item}\r\n          item\r\n          md={3}\r\n          sm={6}\r\n          xs={12}\r\n        >\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n            color=\"textSecondary\"\r\n          >\r\n            Total Expanses\r\n          </Typography>\r\n          <div className={classes.valueContainer}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              color=\"textPrimary\"\r\n            >\r\n              $\r\n              {overview.expanses}\r\n            </Typography>\r\n            <Label\r\n              className={classes.label}\r\n              color=\"success\"\r\n            >\r\n              +12%\r\n            </Label>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.item}\r\n          item\r\n          md={3}\r\n          sm={6}\r\n          xs={12}\r\n        >\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n            color=\"textSecondary\"\r\n          >\r\n            Net Profit\r\n          </Typography>\r\n          <div className={classes.valueContainer}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              color=\"textPrimary\"\r\n            >\r\n              {overview.profit}\r\n            </Typography>\r\n            <Label\r\n              className={classes.label}\r\n              color=\"error\"\r\n            >\r\n              -20%\r\n            </Label>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.item}\r\n          item\r\n          md={3}\r\n          sm={6}\r\n          xs={12}\r\n        >\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n            color=\"textSecondary\"\r\n          >\r\n            Active Subscriptions\r\n          </Typography>\r\n          <div className={classes.valueContainer}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              color=\"textPrimary\"\r\n            >\r\n              {overview.subscriptions}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOverview.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Overview;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback\r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport numeral from 'numeral';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  avatar: {\r\n    fontSize: 14,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst TopReferrals = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [referrals, setReferrals] = useState([]);\r\n\r\n  const getReferrals = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/reports/top-referrals');\r\n\r\n      if (isMountedRef.current) {\r\n        setReferrals(response.data.referrals);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getReferrals();\r\n  }, [getReferrals]);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"Top Referrals\"\r\n      />\r\n      <Divider />\r\n      <List disablePadding>\r\n        {referrals.map((referral, i) => (\r\n          <ListItem\r\n            divider={i < referrals.length - 1}\r\n            key={referral.name}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                className={classes.avatar}\r\n                style={{ backgroundColor: referral.color }}\r\n              >\r\n                {referral.initials}\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={referral.name}\r\n              primaryTypographyProps={{ variant: 'h6' }}\r\n            />\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {numeral(referral.value).format('0,0')}\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTopReferrals.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopReferrals;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport CustomerActivity from './CustomerActivity';\r\nimport EarningsSegmentation from './EarningsSegmentation';\r\nimport FinancialStats from './FinancialStats';\r\nimport Header from './Header';\r\nimport LatestOrders from './LatestOrders';\r\nimport MostProfitableProducts from './MostProfitableProducts';\r\nimport Overview from './Overview';\r\nimport TopReferrals from './TopReferrals';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst DashboardAlternativeView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Dashboard Alternative\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Header />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n          >\r\n            <Overview />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <FinancialStats />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <EarningsSegmentation />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            xs={12}\r\n          >\r\n            <LatestOrders />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            xs={12}\r\n          >\r\n            <CustomerActivity />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            xs={12}\r\n          >\r\n            <MostProfitableProducts />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            xs={12}\r\n          >\r\n            <TopReferrals />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default DashboardAlternativeView;\r\n"],"sourceRoot":""}