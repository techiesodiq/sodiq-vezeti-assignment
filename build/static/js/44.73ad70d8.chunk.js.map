{"version":3,"sources":["hooks/useIsMountedRef.js","components/Label.js","views/product/ProductListView/Header.js","../node_modules/react-feather/dist/icons/image.js","views/product/ProductListView/Results.js","views/product/ProductListView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","action","marginBottom","marginLeft","Header","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Box","mt","Button","startIcon","SvgIcon","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Image","forwardRef","_ref","ref","_ref$color","_ref$size","size","React","createElement","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","cx","cy","r","points","propTypes","PropTypes","string","oneOfType","number","displayName","categoryOptions","id","name","avalabilityOptions","sortOptions","value","label","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","background","default","bulkAction","queryField","categoryField","flexBasis","availabilityField","stockField","shippableField","imageCell","image","Results","products","useState","selectedProducts","setSelectedProducts","page","setPage","limit","setLimit","query","setQuery","sort","setSort","category","availability","inStock","isShippable","filters","setFilters","handleSelectAllProducts","event","checked","map","product","filteredProducts","filter","matches","toLowerCase","includes","isAvailable","inventoryType","applyFilters","paginatedProducts","slice","applyPagination","enableBulkOperations","selectedSomeProducts","selectedAllProducts","Card","p","TextField","InputProps","startAdornment","InputAdornment","onChange","persist","placeholder","select","SelectProps","native","option","prevFilters","categoryOption","avalabilityOption","FormControlLabel","control","Checkbox","indeterminate","Table","TableHead","TableRow","TableCell","align","TableBody","isProductSelected","hover","selected","productId","prevSelected","alt","src","bgcolor","underline","in_stock","text","limited","out_of_stock","getInventoryLabel","quantity","variants","attributes","attr","numeral","price","format","currency","IconButton","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","dark","minHeight","paddingTop","paddingBottom","ProductListView","isMountedRef","setProducts","getProducts","useCallback","a","axios","get","response","data","console","Page","title","Container","maxWidth"],"mappings":"4IAAA,WAYeA,IAVS,WACtB,IAAMC,EAAYC,kBAAO,GAMzB,OAJAC,qBAAU,kBAAM,WACdF,EAAUG,SAAU,KACnB,IAEIH,I,8FCJHI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,WAAYF,EAAMG,WAAWD,WAC7BE,WAAY,SACZC,aAAc,EACdC,QAAS,cACTC,SAAU,EACVC,WAAY,SACZC,OAAQ,UACRC,WAAY,EACZC,SAAUX,EAAMG,WAAWS,QAAQ,IACnCC,WAAYb,EAAMG,WAAWW,iBAC7BC,OAAQ,GACRC,eAAgB,SAChBC,cAAe,GACfC,SAAU,GACVC,QAASnB,EAAMoB,QAAQ,GAAK,GAC5BC,cAAe,aAEjBC,QAAS,CACPC,MAAOvB,EAAMwB,QAAQF,QAAQG,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQF,QAAQG,KAAM,MAEpDG,UAAW,CACTL,MAAOvB,EAAMwB,QAAQI,UAAUH,KAC/BC,gBAAiBC,YAAK3B,EAAMwB,QAAQI,UAAUH,KAAM,MAEtDI,MAAO,CACLN,MAAOvB,EAAMwB,QAAQK,MAAMJ,KAC3BC,gBAAiBC,YAAK3B,EAAMwB,QAAQK,MAAMJ,KAAM,MAElDK,QAAS,CACPP,MAAOvB,EAAMwB,QAAQM,QAAQL,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQM,QAAQL,KAAM,MAEpDM,QAAS,CACPR,MAAOvB,EAAMwB,QAAQO,QAAQN,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQO,QAAQN,KAAM,UAkCvCO,IA9BD,SAAC,GAMR,IAAD,IALJC,iBAKI,MALQ,GAKR,MAJJV,aAII,MAJI,YAIJ,EAHJW,EAGI,EAHJA,SAEGC,GACC,EAFJC,MAEI,yDACEC,EAAUvC,IAEhB,OACE,wCACEmC,UACEK,YAAKD,EAAQpC,KAAT,eACDoC,EAAQd,GAASA,GACjBU,IAEDE,GAEHD,K,uRC3CDpC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNsC,OAAQ,CACNC,aAAcxC,EAAMoB,QAAQ,GAC5B,QAAS,CACPqB,WAAYzC,EAAMoB,QAAQ,SAiGjBsB,EA5FA,SAAC,GAA4B,IAA1BT,EAAyB,EAAzBA,UAAcE,EAAW,6BACnCE,EAAUvC,IAEhB,OACE,kBAAC6C,EAAA,EAAD,eACEC,WAAS,EACTxB,QAAS,EACTyB,QAAQ,gBACRZ,UAAWK,YAAKD,EAAQpC,KAAMgC,IAC1BE,GAEJ,kBAACQ,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CACEC,UAAW,kBAAC,IAAD,CAAkBrC,SAAS,UACtCsC,aAAW,cAEX,kBAACC,EAAA,EAAD,CACEC,QAAQ,QACR5B,MAAM,UACN6B,GAAG,OACHC,UAAWC,KAJb,aAQA,kBAACJ,EAAA,EAAD,CACEC,QAAQ,QACR5B,MAAM,UACN6B,GAAG,kBACHC,UAAWC,KAJb,cAQA,kBAACC,EAAA,EAAD,CACEJ,QAAQ,QACR5B,MAAM,eAFR,aAOF,kBAACgC,EAAA,EAAD,CACEJ,QAAQ,KACR5B,MAAM,eAFR,gBAMA,kBAACiC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CACEzB,UAAWI,EAAQE,OACnBoB,UACE,kBAACC,EAAA,EAAD,CAASjD,SAAS,SAChB,kBAAC,IAAD,QAJN,UAUA,kBAAC+C,EAAA,EAAD,CACEzB,UAAWI,EAAQE,OACnBoB,UACE,kBAACC,EAAA,EAAD,CAASjD,SAAS,SAChB,kBAAC,IAAD,QAJN,YAYJ,kBAACgC,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACY,EAAA,EAAD,CACEnC,MAAM,YACN4B,QAAQ,YACRlB,UAAWI,EAAQE,OACnBc,UAAWC,IACXF,GAAG,kCACHO,UACE,kBAACC,EAAA,EAAD,CAASjD,SAAS,SAChB,kBAAC,IAAD,QARN,kB,uMCpGR,SAASkD,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAIoB,GAAQC,sBAAW,SAAUC,EAAMC,GACrC,IAAIC,EAAaF,EAAK/D,MAClBA,OAAuB,IAAfiE,EAAwB,eAAiBA,EACjDC,EAAYH,EAAKI,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCtD,EAAOwC,EAAyBW,EAAM,CAAC,QAAS,SAEpD,OAAoBK,IAAMC,cAAc,MAAO/B,EAAS,CACtD0B,IAAKA,EACLM,MAAO,6BACPC,MAAOJ,EACP3E,OAAQ2E,EACRK,QAAS,YACTC,KAAM,OACNC,OAAQ1E,EACR2E,YAAa,IACbC,cAAe,QACfC,eAAgB,SACfjE,GAAoBwD,IAAMC,cAAc,OAAQ,CACjDS,EAAG,IACHC,EAAG,IACHR,MAAO,KACP/E,OAAQ,KACRwF,GAAI,IACJC,GAAI,MACWb,IAAMC,cAAc,SAAU,CAC7Ca,GAAI,MACJC,GAAI,MACJC,EAAG,QACYhB,IAAMC,cAAc,WAAY,CAC/CgB,OAAQ,yBAGZxB,GAAMyB,UAAY,CAChBtF,MAAOuF,IAAUC,OACjBrB,KAAMoB,IAAUE,UAAU,CAACF,IAAUC,OAAQD,IAAUG,UAEzD7B,GAAM8B,YAAc,QACL9B,U,iCCbT+B,GAAkB,CACtB,CACEC,GAAI,MACJC,KAAM,OAER,CACED,GAAI,QACJC,KAAM,SAER,CACED,GAAI,UACJC,KAAM,WAER,CACED,GAAI,SACJC,KAAM,UAER,CACED,GAAI,SACJC,KAAM,WAIJC,GAAqB,CACzB,CACEF,GAAI,MACJC,KAAM,OAER,CACED,GAAI,YACJC,KAAM,aAER,CACED,GAAI,cACJC,KAAM,gBAIJE,GAAc,CAClB,CACEC,MAAO,iBACPC,MAAO,8BAET,CACED,MAAO,gBACPC,MAAO,8BAET,CACED,MAAO,iBACPC,MAAO,gCAET,CACED,MAAO,gBACPC,MAAO,iCAmEL3H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNyH,eAAgB,CACdC,SAAU,YAEZC,YAAa,CACXC,YAAa,EACbC,aAAc,EACdC,UAAW,EACXJ,SAAU,WACV7B,MAAO,OACPkC,OAAQ,EACRtG,gBAAiB1B,EAAMwB,QAAQyG,WAAWC,SAE5CC,WAAY,CACV1F,WAAYzC,EAAMoB,QAAQ,IAE5BgH,WAAY,CACVtC,MAAO,KAETuC,cAAe,CACbC,UAAW,KAEbC,kBAAmB,CACjB9F,WAAYzC,EAAMoB,QAAQ,GAC1BkH,UAAW,KAEbE,WAAY,CACV/F,WAAYzC,EAAMoB,QAAQ,IAE5BqH,eAAgB,CACdhG,WAAYzC,EAAMoB,QAAQ,IAE5BsH,UAAW,CACT/H,SAAU,EACVmF,MAAO,GACPwC,UAAW,GACX/H,SAAU,EACVG,WAAY,GAEdiI,MAAO,CACL5H,OAAQ,GACR+E,MAAO,QAIL8C,GAAU,SAAC,GAAsC,IAApC3G,EAAmC,EAAnCA,UAAW4G,EAAwB,EAAxBA,SAAa1G,EAAW,wCAC9CE,EAAUvC,KADoC,EAEJgJ,mBAAS,IAFL,mBAE7CC,EAF6C,KAE3BC,EAF2B,OAG5BF,mBAAS,GAHmB,mBAG7CG,EAH6C,KAGvCC,EAHuC,OAI1BJ,mBAAS,IAJiB,mBAI7CK,EAJ6C,KAItCC,EAJsC,OAK1BN,mBAAS,IALiB,mBAK7CO,EAL6C,KAKtCC,EALsC,OAM5BR,mBAASvB,GAAY,GAAGC,OANI,mBAM7C+B,EAN6C,KAMvCC,EANuC,OAOtBV,mBAAS,CACrCW,SAAU,KACVC,aAAc,KACdC,QAAS,KACTC,YAAa,OAXqC,mBAO7CC,GAP6C,KAOpCC,GAPoC,KAoF9CC,GAA0B,SAACC,GAC/BhB,EAAoBgB,EAAMhG,OAAOiG,QAC7BpB,EAASqB,KAAI,SAACC,GAAD,OAAaA,EAAQ/C,MAClC,KAoBAgD,GA/La,SAACvB,EAAUQ,EAAOQ,GACrC,OAAOhB,EAASwB,QAAO,SAACF,GACtB,IAAIG,GAAU,EA4Bd,OA1BIjB,IAAUc,EAAQ9C,KAAKkD,cAAcC,SAASnB,EAAMkB,iBACtDD,GAAU,GAGRT,EAAQJ,UAAYU,EAAQV,WAAaI,EAAQJ,WACnDa,GAAU,GAGRT,EAAQH,eACmB,cAAzBG,EAAQH,cAAiCS,EAAQM,cACnDH,GAAU,GAGiB,gBAAzBT,EAAQH,cAAkCS,EAAQM,cACpDH,GAAU,IAIVT,EAAQF,UAAY,CAAC,WAAY,WAAWa,SAASL,EAAQO,iBAC/DJ,GAAU,GAGRT,EAAQD,cAAgBO,EAAQP,cAClCU,GAAU,GAGLA,KAiKgBK,CAAa9B,EAAUQ,EAAOQ,IACjDe,GA9JgB,SAAC/B,EAAUI,EAAME,GACvC,OAAON,EAASgC,MAAM5B,EAAOE,EAAOF,EAAOE,EAAQA,GA6JzB2B,CAAgBV,GAAkBnB,EAAME,GAC5D4B,GAAuBhC,EAAiB5E,OAAS,EACjD6G,GAAuBjC,EAAiB5E,OAAS,GAAK4E,EAAiB5E,OAAS0E,EAAS1E,OACzF8G,GAAsBlC,EAAiB5E,SAAW0E,EAAS1E,OAEjE,OACE,kBAAC+G,EAAA,EAAD,eACEjJ,UAAWK,YAAKD,EAAQpC,KAAMgC,IAC1BE,GAEJ,kBAACqB,EAAA,EAAD,CAAK2H,EAAG,GACN,kBAAC3H,EAAA,EAAD,CACElD,QAAQ,OACRF,WAAW,UAEX,kBAACgL,EAAA,EAAD,CACEnJ,UAAWI,EAAQ+F,WACnBiD,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgB5D,SAAS,SACvB,kBAAC/D,EAAA,EAAD,CACEjD,SAAS,QACTY,MAAM,UAEN,kBAAC,IAAD,SAKRiK,SA3HgB,SAACxB,GACzBA,EAAMyB,UACNnC,EAASU,EAAMhG,OAAOwD,QA0HdkE,YAAY,kBACZlE,MAAO6B,EACPlG,QAAQ,aAEV,kBAACK,EAAA,EAAD,CAAKjD,SAAU,IACf,kBAAC6K,EAAA,EAAD,CACE3D,MAAM,UACNJ,KAAK,OACLmE,SAnEe,SAACxB,GACxBA,EAAMyB,UACNjC,EAAQQ,EAAMhG,OAAOwD,QAkEbmE,QAAM,EACNC,YAAa,CAAEC,QAAQ,GACvBrE,MAAO+B,EACPpG,QAAQ,YAEPoE,GAAY2C,KAAI,SAAC4B,GAAD,OACf,4BACEzH,IAAKyH,EAAOtE,MACZA,MAAOsE,EAAOtE,OAEbsE,EAAOrE,YAKhB,kBAACjE,EAAA,EAAD,CACEC,GAAI,EACJnD,QAAQ,OACRF,WAAW,UAEX,kBAACgL,EAAA,EAAD,CACEnJ,UAAWI,EAAQgG,cACnBZ,MAAM,WACNJ,KAAK,WACLmE,SAxJmB,SAACxB,GAC5BA,EAAMyB,UAEN,IAAIjE,EAAQ,KAEe,QAAvBwC,EAAMhG,OAAOwD,QACfA,EAAQwC,EAAMhG,OAAOwD,OAGvBsC,IAAW,SAACiC,GAAD,mBAAC,eACPA,GADM,IAETtC,SAAUjC,QA8IJmE,QAAM,EACNC,YAAa,CAAEC,QAAQ,GACvBrE,MAAOqC,GAAQJ,UAAY,MAC3BtG,QAAQ,YAEPgE,GAAgB+C,KAAI,SAAC8B,GAAD,OACnB,4BACE3H,IAAK2H,EAAe5E,GACpBI,MAAOwE,EAAe5E,IAErB4E,EAAe3E,UAItB,kBAAC+D,EAAA,EAAD,CACEnJ,UAAWI,EAAQkG,kBACnBd,MAAM,eACNJ,KAAK,eACLmE,SA5JuB,SAACxB,GAChCA,EAAMyB,UAEN,IAAIjE,EAAQ,KAEe,QAAvBwC,EAAMhG,OAAOwD,QACfA,EAAQwC,EAAMhG,OAAOwD,OAGvBsC,IAAW,SAACiC,GAAD,mBAAC,eACPA,GADM,IAETrC,aAAclC,QAkJRmE,QAAM,EACNC,YAAa,CAAEC,QAAQ,GACvBrE,MAAOqC,GAAQH,cAAgB,MAC/BvG,QAAQ,YAEPmE,GAAmB4C,KAAI,SAAC+B,GAAD,OACtB,4BACE5H,IAAK4H,EAAkB7E,GACvBI,MAAOyE,EAAkB7E,IAExB6E,EAAkB5E,UAIzB,kBAAC6E,EAAA,EAAD,CACEjK,UAAWI,EAAQmG,WACnB2D,QACE,kBAACC,EAAA,EAAD,CACEnC,UAAWJ,GAAQF,QACnB6B,SAjKY,SAACxB,GACzBA,EAAMyB,UAEN,IAAIjE,EAAQ,KAERwC,EAAMhG,OAAOiG,UACfzC,GAAQ,GAGVsC,IAAW,SAACiC,GAAD,mBAAC,eACPA,GADM,IAETpC,QAASnC,QAuJCH,KAAK,YAGTI,MAAM,aAER,kBAACyE,EAAA,EAAD,CACEjK,UAAWI,EAAQoG,eACnB0D,QACE,kBAACC,EAAA,EAAD,CACEnC,UAAWJ,GAAQD,YACnB4B,SA7JgB,SAACxB,GAC7BA,EAAMyB,UAEN,IAAIjE,EAAQ,KAERwC,EAAMhG,OAAOiG,UACfzC,GAAQ,GAGVsC,IAAW,SAACiC,GAAD,mBAAC,eACPA,GADM,IAETnC,YAAapC,QAmJHH,KAAK,cAGTI,MAAM,gBAIXsD,IACC,yBAAK9I,UAAWI,EAAQqF,gBACtB,yBAAKzF,UAAWI,EAAQuF,aACtB,kBAACwE,EAAA,EAAD,CACEnC,QAASgB,GACToB,cAAerB,GACfQ,SAAUzB,KAEZ,kBAACrG,EAAA,EAAD,CACEP,QAAQ,WACRlB,UAAWI,EAAQ8F,YAFrB,UAMA,kBAACzE,EAAA,EAAD,CACEP,QAAQ,WACRlB,UAAWI,EAAQ8F,YAFrB,UASN,kBAAC,IAAD,KACE,kBAAC3E,EAAA,EAAD,CAAKtC,SAAU,MACb,kBAACoL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWtL,QAAQ,YACjB,kBAACiL,EAAA,EAAD,CACEnC,QAASgB,GACToB,cAAerB,GACfQ,SAAUzB,MAGd,kBAAC0C,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,aAGA,kBAACA,EAAA,EAAD,kBAGA,kBAACA,EAAA,EAAD,gBAGA,kBAACA,EAAA,EAAD,mBAGA,kBAACA,EAAA,EAAD,cAGA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,aAKJ,kBAACC,EAAA,EAAD,KACG/B,GAAkBV,KAAI,SAACC,GACtB,IAAMyC,EAAoB7D,EAAiByB,SAASL,EAAQ/C,IAE5D,OACE,kBAACoF,EAAA,EAAD,CACEK,OAAK,EACLxI,IAAK8F,EAAQ/C,GACb0F,SAAUF,GAEV,kBAACH,EAAA,EAAD,CAAWtL,QAAQ,YACjB,kBAACiL,EAAA,EAAD,CACEnC,QAAS2C,EACTpB,SAAU,SAACxB,GAAD,OAhNO+C,EAgNkC5C,EAAQ/C,QA/M1E2B,EAAiByB,SAASuC,GAG7B/D,GAAoB,SAACgE,GAAD,OAAkBA,EAAa3C,QAAO,SAACjD,GAAD,OAAQA,IAAO2F,QAFzE/D,GAAoB,SAACgE,GAAD,4BAAsBA,GAAtB,CAAoCD,QAF7B,IAAQA,GAiNjBvF,MAAOoF,KAGX,kBAACH,EAAA,EAAD,CAAWxK,UAAWI,EAAQqG,WAC3ByB,EAAQxB,MACP,yBACEsE,IAAI,UACJC,IAAK/C,EAAQxB,MACb1G,UAAWI,EAAQsG,QAGrB,kBAACnF,EAAA,EAAD,CACE2H,EAAG,EACHgC,QAAQ,mBAER,kBAACvJ,EAAA,EAAD,KACE,kBAAC,GAAD,SAKR,kBAAC6I,EAAA,EAAD,KACE,kBAACvJ,EAAA,EAAD,CACEC,QAAQ,YACR5B,MAAM,cACN8B,UAAWC,IACX8J,UAAU,OACVhK,GAAG,KAEF+G,EAAQ9C,OAGb,kBAACoF,EAAA,EAAD,KAxbM,SAAC/B,GACzB,IAD2C,EAC/B,CACV2C,SAAU,CACRC,KAAM,WACN/L,MAAO,WAETgM,QAAS,CACPD,KAAM,UACN/L,MAAO,WAETiM,aAAc,CACZF,KAAM,eACN/L,MAAO,UAIiBmJ,GAApB4C,EAhBmC,EAgBnCA,KAAM/L,EAhB6B,EAgB7BA,MAEd,OACE,kBAACS,GAAA,EAAD,CAAOT,MAAOA,GACX+L,GAqagBG,CAAkBtD,EAAQO,gBAE7B,kBAAC+B,EAAA,EAAD,KACGtC,EAAQuD,SACR,IAFH,WAIGvD,EAAQwD,SAAW,GAAnB,cAA+BxD,EAAQwD,SAAvC,cAEH,kBAAClB,EAAA,EAAD,KACGtC,EAAQyD,WAAW1D,KAAI,SAAC2D,GAAD,OAAUA,MAEpC,kBAACpB,EAAA,EAAD,KACGqB,IAAQ3D,EAAQ4D,OAAOC,OAAvB,UAAiC7D,EAAQ8D,SAAzC,YAEH,kBAACxB,EAAA,EAAD,CAAWC,MAAM,SACf,kBAACwB,EAAA,EAAD,KACE,kBAACtK,EAAA,EAAD,CAASjD,SAAS,SAChB,kBAAC,KAAD,QAGJ,kBAACuN,EAAA,EAAD,KACE,kBAACtK,EAAA,EAAD,CAASjD,SAAS,SAChB,kBAAC,KAAD,eAShB,kBAACwN,EAAA,EAAD,CACE9K,UAAU,MACV+K,MAAOhE,GAAiBjG,OACxBkK,aA5Qe,SAACrE,EAAOsE,GAC/BpF,EAAQoF,IA4QAC,oBAzQgB,SAACvE,GACzBZ,EAASoF,SAASxE,EAAMhG,OAAOwD,SAyQvByB,KAAMA,EACNwF,YAAatF,EACbuF,mBAAoB,CAAC,EAAG,GAAI,UAaxC9F,GAAQ+F,aAAe,CACrB9F,SAAU,IAGGD,UC1jBT9I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJyB,gBAAiB1B,EAAMwB,QAAQyG,WAAW2G,KAC1CC,UAAW,OACXC,WAAY9O,EAAMoB,QAAQ,GAC1B2N,cAAe,SA0CJC,UAtCS,WACtB,IAAM3M,EAAUvC,KACVmP,EAAexP,cAFO,EAGIqJ,mBAAS,IAHb,mBAGrBD,EAHqB,KAGXqG,EAHW,KAKtBC,EAAcC,sBAAW,sBAAC,4BAAAC,EAAA,+EAELC,IAAMC,IAAI,iBAFL,OAEtBC,EAFsB,OAIxBP,EAAapP,SACfqP,EAAYM,EAASC,KAAK5G,UALA,gDAQ5B6G,QAAQ7N,MAAR,MAR4B,yDAU7B,CAACoN,IAMJ,OAJArP,qBAAU,WACRuP,MACC,CAACA,IAGF,kBAACQ,EAAA,EAAD,CACE1N,UAAWI,EAAQpC,KACnB2P,MAAM,gBAEN,kBAACC,EAAA,EAAD,CAAWC,UAAU,GACnB,kBAAC,EAAD,MACCjH,GACC,kBAACrF,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,CAASoF,SAAUA","file":"static/js/44.73ad70d8.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\r\n\r\nconst useIsMountedRef = () => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMountedRef;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { fade, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontFamily: theme.typography.fontFamily,\r\n    alignItems: 'center',\r\n    borderRadius: 2,\r\n    display: 'inline-flex',\r\n    flexGrow: 0,\r\n    whiteSpace: 'nowrap',\r\n    cursor: 'default',\r\n    flexShrink: 0,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    height: 20,\r\n    justifyContent: 'center',\r\n    letterSpacing: 0.5,\r\n    minWidth: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    textTransform: 'uppercase'\r\n  },\r\n  primary: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\r\n  },\r\n  secondary: {\r\n    color: theme.palette.secondary.main,\r\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n    backgroundColor: fade(theme.palette.error.main, 0.08)\r\n  },\r\n  success: {\r\n    color: theme.palette.success.main,\r\n    backgroundColor: fade(theme.palette.success.main, 0.08)\r\n  },\r\n  warning: {\r\n    color: theme.palette.warning.main,\r\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\r\n  }\r\n}));\r\n\r\nconst Label = ({\r\n  className = '',\r\n  color = 'secondary',\r\n  children,\r\n  style,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      className={\r\n        clsx(classes.root, {\r\n          [classes[color]]: color\r\n        }, className)\r\n      }\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  SvgIcon,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  PlusCircle as PlusCircleIcon,\r\n  Download as DownloadIcon,\r\n  Upload as UploadIcon\r\n} from 'react-feather';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  action: {\r\n    marginBottom: theme.spacing(1),\r\n    '& + &': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Header = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={3}\r\n      justify=\"space-between\"\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Grid item>\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app\"\r\n            component={RouterLink}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app/management\"\r\n            component={RouterLink}\r\n          >\r\n            Management\r\n          </Link>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textPrimary\"\r\n          >\r\n            Products\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Typography\r\n          variant=\"h3\"\r\n          color=\"textPrimary\"\r\n        >\r\n          All Products\r\n        </Typography>\r\n        <Box mt={2}>\r\n          <Button\r\n            className={classes.action}\r\n            startIcon={\r\n              <SvgIcon fontSize=\"small\">\r\n                <UploadIcon />\r\n              </SvgIcon>\r\n            }\r\n          >\r\n            Import\r\n          </Button>\r\n          <Button\r\n            className={classes.action}\r\n            startIcon={\r\n              <SvgIcon fontSize=\"small\">\r\n                <DownloadIcon />\r\n              </SvgIcon>\r\n            }\r\n          >\r\n            Export\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          className={classes.action}\r\n          component={RouterLink}\r\n          to=\"/app/management/products/create\"\r\n          startIcon={\r\n            <SvgIcon fontSize=\"small\">\r\n              <PlusCircleIcon />\r\n            </SvgIcon>\r\n          }\r\n        >\r\n          New Product\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Image = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"3\",\n    width: \"18\",\n    height: \"18\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1.5\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"21 15 16 10 5 21\"\n  }));\n});\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.displayName = 'Image';\nexport default Image;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport numeral from 'numeral';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  InputAdornment,\r\n  FormControlLabel,\r\n  IconButton,\r\n  Link,\r\n  SvgIcon,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  Image as ImageIcon,\r\n  Edit as EditIcon,\r\n  ArrowRight as ArrowRightIcon,\r\n  Search as SearchIcon\r\n} from 'react-feather';\r\nimport Label from 'src/components/Label';\r\n\r\nconst categoryOptions = [\r\n  {\r\n    id: 'all',\r\n    name: 'All'\r\n  },\r\n  {\r\n    id: 'dress',\r\n    name: 'Dress'\r\n  },\r\n  {\r\n    id: 'jewelry',\r\n    name: 'Jewelry'\r\n  },\r\n  {\r\n    id: 'blouse',\r\n    name: 'Blouse'\r\n  },\r\n  {\r\n    id: 'beauty',\r\n    name: 'Beauty'\r\n  }\r\n];\r\n\r\nconst avalabilityOptions = [\r\n  {\r\n    id: 'all',\r\n    name: 'All'\r\n  },\r\n  {\r\n    id: 'available',\r\n    name: 'Available'\r\n  },\r\n  {\r\n    id: 'unavailable',\r\n    name: 'Unavailable'\r\n  }\r\n];\r\n\r\nconst sortOptions = [\r\n  {\r\n    value: 'updatedAt|desc',\r\n    label: 'Last update (newest first)'\r\n  },\r\n  {\r\n    value: 'updatedAt|asc',\r\n    label: 'Last update (oldest first)'\r\n  },\r\n  {\r\n    value: 'createdAt|desc',\r\n    label: 'Creation date (newest first)'\r\n  },\r\n  {\r\n    value: 'createdAt|asc',\r\n    label: 'Creation date (oldest first)'\r\n  }\r\n];\r\n\r\nconst getInventoryLabel = (inventoryType) => {\r\n  const map = {\r\n    in_stock: {\r\n      text: 'In Stock',\r\n      color: 'success'\r\n    },\r\n    limited: {\r\n      text: 'Limited',\r\n      color: 'warning'\r\n    },\r\n    out_of_stock: {\r\n      text: 'Out of Stock',\r\n      color: 'error'\r\n    }\r\n  };\r\n\r\n  const { text, color } = map[inventoryType];\r\n\r\n  return (\r\n    <Label color={color}>\r\n      {text}\r\n    </Label>\r\n  );\r\n};\r\n\r\nconst applyFilters = (products, query, filters) => {\r\n  return products.filter((product) => {\r\n    let matches = true;\r\n\r\n    if (query && !product.name.toLowerCase().includes(query.toLowerCase())) {\r\n      matches = false;\r\n    }\r\n\r\n    if (filters.category && product.category !== filters.category) {\r\n      matches = false;\r\n    }\r\n\r\n    if (filters.availability) {\r\n      if (filters.availability === 'available' && !product.isAvailable) {\r\n        matches = false;\r\n      }\r\n\r\n      if (filters.availability === 'unavailable' && product.isAvailable) {\r\n        matches = false;\r\n      }\r\n    }\r\n\r\n    if (filters.inStock && !['in_stock', 'limited'].includes(product.inventoryType)) {\r\n      matches = false;\r\n    }\r\n\r\n    if (filters.isShippable && !product.isShippable) {\r\n      matches = false;\r\n    }\r\n\r\n    return matches;\r\n  });\r\n};\r\n\r\nconst applyPagination = (products, page, limit) => {\r\n  return products.slice(page * limit, page * limit + limit);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  bulkOperations: {\r\n    position: 'relative'\r\n  },\r\n  bulkActions: {\r\n    paddingLeft: 4,\r\n    paddingRight: 4,\r\n    marginTop: 6,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    zIndex: 2,\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  bulkAction: {\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  queryField: {\r\n    width: 500\r\n  },\r\n  categoryField: {\r\n    flexBasis: 200\r\n  },\r\n  availabilityField: {\r\n    marginLeft: theme.spacing(2),\r\n    flexBasis: 200\r\n  },\r\n  stockField: {\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  shippableField: {\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  imageCell: {\r\n    fontSize: 0,\r\n    width: 68,\r\n    flexBasis: 68,\r\n    flexGrow: 0,\r\n    flexShrink: 0\r\n  },\r\n  image: {\r\n    height: 68,\r\n    width: 68\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, products, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [query, setQuery] = useState('');\r\n  const [sort, setSort] = useState(sortOptions[0].value);\r\n  const [filters, setFilters] = useState({\r\n    category: null,\r\n    availability: null,\r\n    inStock: null,\r\n    isShippable: null\r\n  });\r\n\r\n  const handleQueryChange = (event) => {\r\n    event.persist();\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleCategoryChange = (event) => {\r\n    event.persist();\r\n\r\n    let value = null;\r\n\r\n    if (event.target.value !== 'all') {\r\n      value = event.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      category: value\r\n    }));\r\n  };\r\n\r\n  const handleAvailabilityChange = (event) => {\r\n    event.persist();\r\n\r\n    let value = null;\r\n\r\n    if (event.target.value !== 'all') {\r\n      value = event.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      availability: value\r\n    }));\r\n  };\r\n\r\n  const handleStockChange = (event) => {\r\n    event.persist();\r\n\r\n    let value = null;\r\n\r\n    if (event.target.checked) {\r\n      value = true;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      inStock: value\r\n    }));\r\n  };\r\n\r\n  const handleShippableChange = (event) => {\r\n    event.persist();\r\n\r\n    let value = null;\r\n\r\n    if (event.target.checked) {\r\n      value = true;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      isShippable: value\r\n    }));\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    event.persist();\r\n    setSort(event.target.value);\r\n  };\r\n\r\n  const handleSelectAllProducts = (event) => {\r\n    setSelectedProducts(event.target.checked\r\n      ? products.map((product) => product.id)\r\n      : []);\r\n  };\r\n\r\n  const handleSelectOneProduct = (event, productId) => {\r\n    if (!selectedProducts.includes(productId)) {\r\n      setSelectedProducts((prevSelected) => [...prevSelected, productId]);\r\n    } else {\r\n      setSelectedProducts((prevSelected) => prevSelected.filter((id) => id !== productId));\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  // Usually query is done on backend with indexing solutions\r\n  const filteredProducts = applyFilters(products, query, filters);\r\n  const paginatedProducts = applyPagination(filteredProducts, page, limit);\r\n  const enableBulkOperations = selectedProducts.length > 0;\r\n  const selectedSomeProducts = selectedProducts.length > 0 && selectedProducts.length < products.length;\r\n  const selectedAllProducts = selectedProducts.length === products.length;\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box p={2}>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <TextField\r\n            className={classes.queryField}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SvgIcon\r\n                    fontSize=\"small\"\r\n                    color=\"action\"\r\n                  >\r\n                    <SearchIcon />\r\n                  </SvgIcon>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            onChange={handleQueryChange}\r\n            placeholder=\"Search products\"\r\n            value={query}\r\n            variant=\"outlined\"\r\n          />\r\n          <Box flexGrow={1} />\r\n          <TextField\r\n            label=\"Sort By\"\r\n            name=\"sort\"\r\n            onChange={handleSortChange}\r\n            select\r\n            SelectProps={{ native: true }}\r\n            value={sort}\r\n            variant=\"outlined\"\r\n          >\r\n            {sortOptions.map((option) => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}\r\n              >\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </Box>\r\n        <Box\r\n          mt={3}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <TextField\r\n            className={classes.categoryField}\r\n            label=\"Category\"\r\n            name=\"category\"\r\n            onChange={handleCategoryChange}\r\n            select\r\n            SelectProps={{ native: true }}\r\n            value={filters.category || 'all'}\r\n            variant=\"outlined\"\r\n          >\r\n            {categoryOptions.map((categoryOption) => (\r\n              <option\r\n                key={categoryOption.id}\r\n                value={categoryOption.id}\r\n              >\r\n                {categoryOption.name}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            className={classes.availabilityField}\r\n            label=\"Availability\"\r\n            name=\"availability\"\r\n            onChange={handleAvailabilityChange}\r\n            select\r\n            SelectProps={{ native: true }}\r\n            value={filters.availability || 'all'}\r\n            variant=\"outlined\"\r\n          >\r\n            {avalabilityOptions.map((avalabilityOption) => (\r\n              <option\r\n                key={avalabilityOption.id}\r\n                value={avalabilityOption.id}\r\n              >\r\n                {avalabilityOption.name}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <FormControlLabel\r\n            className={classes.stockField}\r\n            control={(\r\n              <Checkbox\r\n                checked={!!filters.inStock}\r\n                onChange={handleStockChange}\r\n                name=\"inStock\"\r\n              />\r\n            )}\r\n            label=\"In Stock\"\r\n          />\r\n          <FormControlLabel\r\n            className={classes.shippableField}\r\n            control={(\r\n              <Checkbox\r\n                checked={!!filters.isShippable}\r\n                onChange={handleShippableChange}\r\n                name=\"Shippable\"\r\n              />\r\n            )}\r\n            label=\"Shippable\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n      {enableBulkOperations && (\r\n        <div className={classes.bulkOperations}>\r\n          <div className={classes.bulkActions}>\r\n            <Checkbox\r\n              checked={selectedAllProducts}\r\n              indeterminate={selectedSomeProducts}\r\n              onChange={handleSelectAllProducts}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.bulkAction}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.bulkAction}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1200}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedAllProducts}\r\n                    indeterminate={selectedSomeProducts}\r\n                    onChange={handleSelectAllProducts}\r\n                  />\r\n                </TableCell>\r\n                <TableCell />\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Inventory\r\n                </TableCell>\r\n                <TableCell>\r\n                  Details\r\n                </TableCell>\r\n                <TableCell>\r\n                  Attributes\r\n                </TableCell>\r\n                <TableCell>\r\n                  Price\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {paginatedProducts.map((product) => {\r\n                const isProductSelected = selectedProducts.includes(product.id);\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    key={product.id}\r\n                    selected={isProductSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isProductSelected}\r\n                        onChange={(event) => handleSelectOneProduct(event, product.id)}\r\n                        value={isProductSelected}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell className={classes.imageCell}>\r\n                      {product.image ? (\r\n                        <img\r\n                          alt=\"Product\"\r\n                          src={product.image}\r\n                          className={classes.image}\r\n                        />\r\n                      ) : (\r\n                        <Box\r\n                          p={2}\r\n                          bgcolor=\"background.dark\"\r\n                        >\r\n                          <SvgIcon>\r\n                            <ImageIcon />\r\n                          </SvgIcon>\r\n                        </Box>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Link\r\n                        variant=\"subtitle2\"\r\n                        color=\"textPrimary\"\r\n                        component={RouterLink}\r\n                        underline=\"none\"\r\n                        to=\"#\"\r\n                      >\r\n                        {product.name}\r\n                      </Link>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {getInventoryLabel(product.inventoryType)}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {product.quantity}\r\n                      {' '}\r\n                      in stock\r\n                      {product.variants > 1 && ` in ${product.variants} variants`}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {product.attributes.map((attr) => attr)}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {numeral(product.price).format(`${product.currency}0,0.00`)}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton>\r\n                        <SvgIcon fontSize=\"small\">\r\n                          <EditIcon />\r\n                        </SvgIcon>\r\n                      </IconButton>\r\n                      <IconButton>\r\n                        <SvgIcon fontSize=\"small\">\r\n                          <ArrowRightIcon />\r\n                        </SvgIcon>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={filteredProducts.length}\r\n            onChangePage={handlePageChange}\r\n            onChangeRowsPerPage={handleLimitChange}\r\n            page={page}\r\n            rowsPerPage={limit}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  products: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  products: []\r\n};\r\n\r\nexport default Results;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback\r\n} from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport Page from 'src/components/Page';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport Header from './Header';\r\nimport Results from './Results';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: 100\r\n  }\r\n}));\r\n\r\nconst ProductListView = () => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/products');\r\n\r\n      if (isMountedRef.current) {\r\n        setProducts(response.data.products);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [getProducts]);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Product List\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Header />\r\n        {products && (\r\n          <Box mt={3}>\r\n            <Results products={products} />\r\n          </Box>\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProductListView;\r\n"],"sourceRoot":""}