{"version":3,"sources":["contexts/Auth0Context.js","config.js","views/docs/AuthenticationView/Content.mdx"],"names":["initialAuthState","process","REACT_APP_AUTH0_CLIENT_ID","REACT_APP_AUTH0_DOMAIN","REACT_APP_FIREBASE_API_KEY","REACT_APP_FIREBASE_APP_ID","REACT_APP_FIREBASE_AUTH_DOMAIN","REACT_APP_FIREBASE_DATABASE_URL","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","REACT_APP_FIREBASE_PROJECT_ID","REACT_APP_FIREBASE_STORAGE_BUCKET","isAuthenticated","isInitialised","user","readingTime","createContext","method","loginWithPopup","Promise","resolve","logout","layoutProps","MDXContent","components","props","mdxType","href","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter"],"mappings":"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","file":"static/js/51.119eb30d.chunk.js","sourcesContent":["import React, {\n  createContext,\n  useEffect,\n  useReducer\n} from 'react';\nimport { Auth0Client } from '@auth0/auth0-spa-js';\nimport SplashScreen from 'src/components/SplashScreen';\nimport { auth0Config } from 'src/config';\n\nlet auth0Client = null;\n\nconst initialAuthState = {\n  isAuthenticated: false,\n  isInitialised: false,\n  user: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INITIALISE': {\n      const { isAuthenticated, user } = action.payload;\n\n      return {\n        ...state,\n        isAuthenticated,\n        isInitialised: true,\n        user\n      };\n    }\n    case 'LOGIN': {\n      const { user } = action.payload;\n\n      return {\n        ...state,\n        isAuthenticated: true,\n        user\n      };\n    }\n    case 'LOGOUT': {\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null\n      };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n};\n\nconst AuthContext = createContext({\n  ...initialAuthState,\n  method: 'Auth0',\n  loginWithPopup: () => Promise.resolve(),\n  logout: () => { }\n});\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialAuthState);\n\n  const loginWithPopup = async (options) => {\n    await auth0Client.loginWithPopup(options);\n\n    const isAuthenticated = await auth0Client.isAuthenticated();\n\n    if (isAuthenticated) {\n      const user = await auth0Client.getUser();\n\n      // Here you should extract the complete user profile to make it available in your entire app.\n      // The auth state only provides basic information.\n\n      dispatch({\n        type: 'LOGIN',\n        payload: {\n          user: {\n            id: user.sub,\n            avatar: user.picture,\n            email: user.email,\n            name: user.name,\n            tier: 'Premium'\n          }\n        }\n      });\n    }\n  };\n\n  const logout = () => {\n    auth0Client.logout();\n\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  useEffect(() => {\n    const initialise = async () => {\n      try {\n        auth0Client = new Auth0Client({\n          redirect_uri: window.location.origin,\n          ...auth0Config\n        });\n\n        await auth0Client.checkSession();\n\n        const isAuthenticated = await auth0Client.isAuthenticated();\n\n        if (isAuthenticated) {\n          const user = await auth0Client.getUser();\n\n          // Here you should extract the complete user profile to make it available in your entire app.\n          // The auth state only provides basic information.\n\n          dispatch({\n            type: 'INITIALISE',\n            payload: {\n              isAuthenticated,\n              user: {\n                id: user.sub,\n                avatar: user.picture,\n                email: user.email,\n                name: user.name,\n                tier: 'Premium'\n              }\n            }\n          });\n        } else {\n          dispatch({\n            type: 'INITIALISE',\n            payload: {\n              isAuthenticated,\n              user: null\n            }\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        dispatch({\n          type: 'INITIALISE',\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    };\n\n    initialise();\n  }, []);\n\n  if (!state.isInitialised) {\n    return <SplashScreen />;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        ...state,\n        method: 'Auth0',\n        loginWithPopup,\n        logout\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;","export const auth0Config = {\n  client_id: process.env.REACT_APP_AUTH0_CLIENT_ID,\n  domain: process.env.REACT_APP_AUTH0_DOMAIN\n};\n\nexport const firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET\n};\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.345,\"time\":200700.00000000003,\"words\":669}\n/* @jsx mdx */\nimport { AuthProvider } from 'src/contexts/Auth0Context';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h1>\n    <p>{`Devias Kit Pro supports 3 authentication methods: `}<a href=\"https://auth0.com/\">{`Auth0`}</a>{`, `}<a href=\"https://firebase.google.com/docs/auth\">{`Firebase Authentication`}</a>{`, `}<a href=\"https://jwt.io/\">{`JSON Web Token`}</a>{`. You can switch between them at any time in a few of seconds. In our demo website we have Firebase by default, but we shipped with JWT version to allow you to start the application without having to configure the Auth0/Firebase api keys.`}</p>\n    <p>{`We’ve been testing multiple alternatives to support each integration easily without adding complexity to the project. We started with the concept of having all methods active at the same time under Redux with “service” utils, then we decided that is too difficult and hard to modify, and we reimplemented it using React Context API.`}</p>\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How it works`}</h2>\n    <p>{`Accessing dashboard pages is only possible for authenticated users. If this condition is not fulfilled, the user is redirected to a login page. To make this work we implemented the “Guard” concept from Angular. It is simply a component that wraps a route and checks for user authentication status before allowing the navigation. To find more information about guards, please visit the “Routing” page.`}</p>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`src/App.js`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`src/App.tsx`}</inlineCode>{` for TS version) we have this line to specify the auth provider:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> AuthProvider <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'src/contexts/JWTAuthContext'</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`This line imports the AuthProvider from the JSON Web Token method. In the `}<inlineCode parentName=\"p\">{`src/contexts`}</inlineCode>{` folder we have the all 3 methods.`}</p>\n    <p>{`We use this provider to wrap the app content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span> <span class=\\\"token attr-name\\\">history</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>history<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">AuthProvider</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">GlobalStyles</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ScrollReset</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">GoogleAnalytics</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CookiesNotification</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">SettingsNotification</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">renderRoutes</span><span class=\\\"token punctuation\\\">(</span>routes<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">AuthProvider</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">></span></span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`The reason for having the `}<inlineCode parentName=\"p\">{`AuthProvider`}</inlineCode>{` under `}<inlineCode parentName=\"p\">{`Router`}</inlineCode>{` is to allow the Auth Context to have access to router history (if needed).`}</p>\n    <p>{`Now that we have the AuthProvider, we can use the context directly by importing `}<inlineCode parentName=\"p\">{`useContext`}</inlineCode>{` from React and specifying the context that we want to use or we can use the custom hook `}<inlineCode parentName=\"p\">{`useAuth`}</inlineCode>{` from `}<inlineCode parentName=\"p\">{`src/hooks/useAuth.js`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`src/hooks/useAuth.ts`}</inlineCode>{` for TS version).`}</p>\n    <h2 {...{\n      \"id\": \"setup-optional\"\n    }}>{`Setup (optional)`}</h2>\n    <h3 {...{\n      \"id\": \"auth0\"\n    }}>{`Auth0`}</h3>\n    <p>{`To use Auth0 we need to configure the Auth0 Client first. The config object `}<inlineCode parentName=\"p\">{`auth0Config`}</inlineCode>{` can be found in `}<inlineCode parentName=\"p\">{`src/config.js`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`src/config.ts`}</inlineCode>{` for TS version).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> auth0Config <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  client_id<span class=\\\"token operator\\\">:</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">REACT_APP_AUTH0_CLIENT_ID</span><span class=\\\"token punctuation\\\">,</span>\\n  domain<span class=\\\"token operator\\\">:</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">REACT_APP_AUTH0_DOMAIN</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Access your Auth0 application dashboard and get your own `}<inlineCode parentName=\"p\">{`client_id`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`domain`}</inlineCode>{`. Remember to setup your Auth0 Application according the the Auth0 documentation, Single Page Application - React.`}</p>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` method to be able to have different keys depending on your environment (development, staging or production). If you will be using `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{`, in the `}<inlineCode parentName=\"p\">{`.env.example`}</inlineCode>{` file you have the variables that we use in our project.`}</p>\n    <p>{`This config object is being used in the `}<inlineCode parentName=\"p\">{`src/contexts/Auth0Context.js`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`src/contexts/Auth0Context.tsx`}</inlineCode>{` for Ts version) to initialise a new Auth0 Client.`}</p>\n    <h3 {...{\n      \"id\": \"firebase\"\n    }}>{`Firebase`}</h3>\n    <p>{`To use Firebase we need to configure the Firebase SDK first. The config object `}<inlineCode parentName=\"p\">{`firebaseConfig`}</inlineCode>{` can be found in `}<inlineCode parentName=\"p\">{`src/config.js`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`src/config.ts`}</inlineCode>{` for TS version).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> firebaseConfig <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  apiKey<span class=\\\"token operator\\\">:</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">REACT_APP_FIREBASE_API_KEY</span><span class=\\\"token punctuation\\\">,</span>\\n  appId<span class=\\\"token operator\\\">:</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">REACT_APP_FIREBASE_APP_ID</span><span class=\\\"token punctuation\\\">,</span>\\n  authDomain<span class=\\\"token operator\\\">:</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">REACT_APP_FIREBASE_AUTH_DOMAIN</span><span class=\\\"token punctuation\\\">,</span>\\n  databaseURL<span class=\\\"token operator\\\">:</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">REACT_APP_FIREBASE_DATABASE_URL</span><span class=\\\"token punctuation\\\">,</span>\\n  messagingSenderId<span class=\\\"token operator\\\">:</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">REACT_APP_FIREBASE_MESSAGING_SENDER_ID</span><span class=\\\"token punctuation\\\">,</span>\\n  projectId<span class=\\\"token operator\\\">:</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">REACT_APP_FIREBASE_PROJECT_ID</span><span class=\\\"token punctuation\\\">,</span>\\n  storageBucket<span class=\\\"token operator\\\">:</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">REACT_APP_FIREBASE_STORAGE_BUCKET</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Go to your Firebase Console to find your project keys.`}</p>\n    <p>{`This config object is being used in `}<inlineCode parentName=\"p\">{`src/lib/firebase.js`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`src/lib/firebase.ts`}</inlineCode>{` for TS version). This is the file that initilises the Firebase application that we use for authentication.`}</p>\n    <h2 {...{\n      \"id\": \"switching-between-auth-methods\"\n    }}>{`Switching between auth methods`}</h2>\n    <p>{`The shipped project version uses by default the JWT method, but if you want to switch to Auth0 or Firebase after setup part, all you have to do is to update 2 import paths to specify the provider and it’s done.`}</p>\n    <p>{`Open `}<inlineCode parentName=\"p\">{`src/App.js`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`src/App.tsx`}</inlineCode>{` for TS version) and update the following line:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> AuthProvider <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'src/contexts/JWTAuthContext'</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`to use `}<inlineCode parentName=\"p\">{`Auth0Context`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`FirebaseAuthContext`}</inlineCode>{`.`}</p>\n    <p>{`Example:`}</p>\n\n    <p>{`Now open `}<inlineCode parentName=\"p\">{`src/hooks/useAuth.js`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`src/hooks/useAuth.ts`}</inlineCode>{` for TS version) and do the same by updating this line:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> AuthContext <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'src/contexts/JWTAuthContext'</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`to use `}<inlineCode parentName=\"p\">{`Auth0Context`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`FirebaseAuthContext`}</inlineCode>{`.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> AuthContext <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'src/contexts/Auth0Context'</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"important\"\n    }}>{`Important`}</h2>\n    <p>{`If you switch to Auth0 or FirebaseAuth and the app does not load, this could mean that you forgot to setup the Firebase or Auth0 config objects.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"how-it-works\",\n    level: 2,\n    title: \"How it works\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"setup-optional\",\n    level: 2,\n    title: \"Setup (optional)\",\n    children: [\n        {\n              id: \"auth0\",\n              level: 3,\n              title: \"Auth0\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"firebase\",\n              level: 3,\n              title: \"Firebase\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"switching-between-auth-methods\",\n    level: 2,\n    title: \"Switching between auth methods\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"important\",\n    level: 2,\n    title: \"Important\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}