{"version":3,"sources":["views/extra/forms/ReduxFormView/BasicForm.js","views/extra/forms/ReduxFormView/index.js"],"names":["validationSchema","Yup","shape","email","required","firstName","lastName","password","min","max","policy","oneOf","submit","a","wait","console","error","SubmissionError","_error","renderTextField","input","label","meta","touched","invalid","rest","TextField","fullWidth","helperText","variant","renderCheckbox","Box","alignItems","display","ml","Checkbox","checked","value","onChange","Boolean","FormHelperText","reduxForm","form","validate","values","formErrors","validateSync","abortEarly","errors","inner","forEach","path","message","initialValues","handleSubmit","submitting","useState","isAlertVisible","setAlertVisible","onSubmit","Card","CardHeader","title","Divider","CardContent","mb","Alert","onClose","severity","justifyContent","my","CircularProgress","Grid","container","spacing","item","md","xs","Field","name","component","mt","type","Typography","color","Link","href","Button","disabled","size","useStyles","makeStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","ReduxFormView","classes","Page","className","Container","maxWidth","Breadcrumbs","separator","fontSize","aria-label","to","RouterLink"],"mappings":"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","file":"static/js/80.258b0d90.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Field,\r\n  SubmissionError,\r\n  reduxForm\r\n} from 'redux-form';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport wait from 'src/utils/wait';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().email().required('Required'),\r\n  firstName: Yup.string().required('Required'),\r\n  lastName: Yup.string().required('Required'),\r\n  password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\r\n  policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n});\r\n\r\nconst validate = (values) => {\r\n  const formErrors = {};\r\n\r\n  try {\r\n    validationSchema.validateSync(values, { abortEarly: false });\r\n  } catch (errors) {\r\n    errors.inner.forEach((error) => {\r\n      formErrors[error.path] = error.message;\r\n    });\r\n  }\r\n\r\n  return formErrors;\r\n};\r\n\r\nconst submit = async () => {\r\n  try {\r\n    // NOTE: Make API request\r\n    await wait(1000);\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new SubmissionError({\r\n      _error: 'Login failed!'\r\n    });\r\n  }\r\n};\r\n\r\nconst renderTextField = ({\r\n  input,\r\n  label,\r\n  meta: { touched, invalid, error },\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <TextField\r\n      error={touched && invalid}\r\n      fullWidth\r\n      helperText={touched && error}\r\n      label={label}\r\n      variant=\"outlined\"\r\n      {...input}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nconst renderCheckbox = ({\r\n  input,\r\n  label,\r\n  meta: { touched, invalid, error },\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Box\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        ml={-1}\r\n      >\r\n        <Checkbox\r\n          checked={!!input.value}\r\n          onChange={input.onChange}\r\n          {...input}\r\n          {...rest}\r\n        />\r\n        {label}\r\n      </Box>\r\n      {Boolean(touched && invalid) && (\r\n        <FormHelperText error>\r\n          {error}\r\n        </FormHelperText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BasicForm = ({ handleSubmit, submitting }) => {\r\n  const [isAlertVisible, setAlertVisible] = useState(true);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)}>\r\n      <Card>\r\n        <CardHeader title=\"Basic Form\" />\r\n        <Divider />\r\n        <CardContent>\r\n          {isAlertVisible && (\r\n            <Box mb={3}>\r\n              <Alert\r\n                onClose={() => setAlertVisible(false)}\r\n                severity=\"info\"\r\n              >\r\n                This is an info alert - check it out!\r\n              </Alert>\r\n            </Box>\r\n          )}\r\n          {(submitting) ? (\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              my={5}\r\n            >\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n              >\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <Field\r\n                    name=\"firstName\"\r\n                    label=\"First Name\"\r\n                    component={renderTextField}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <Field\r\n                    name=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    component={renderTextField}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={2}>\r\n                <Field\r\n                  name=\"email\"\r\n                  label=\"Email Address\"\r\n                  type=\"email\"\r\n                  component={renderTextField}\r\n                />\r\n              </Box>\r\n              <Box mt={2}>\r\n                <Field\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  component={renderTextField}\r\n                />\r\n              </Box>\r\n              <Box mt={2}>\r\n                <Field\r\n                  name=\"policy\"\r\n                  label={(\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                    >\r\n                      I have read the\r\n                      {' '}\r\n                      <Link\r\n                        component=\"a\"\r\n                        href=\"#\"\r\n                        color=\"secondary\"\r\n                      >\r\n                        Terms and Conditions\r\n                      </Link>\r\n                    </Typography>\r\n                )}\r\n                  component={renderCheckbox}\r\n                />\r\n              </Box>\r\n              <Box mt={2}>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  disabled={submitting}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Sign up\r\n                </Button>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nBasicForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  submitting: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'BasicForm',\r\n  validate,\r\n  initialValues: {\r\n    email: 'johnnydoe@yahoo.com',\r\n    firstName: 'John',\r\n    lastName: 'Doe',\r\n    password: 'thisisasecuredpassword',\r\n    policy: false\r\n  }\r\n})(BasicForm);\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Page from 'src/components/Page';\r\nimport BasicForm from './BasicForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst ReduxFormView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Formik Form\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app\"\r\n            component={RouterLink}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textPrimary\"\r\n          >\r\n            Forms\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Typography\r\n          variant=\"h3\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Redux Form\r\n        </Typography>\r\n        <Box mt={3}>\r\n          <Grid container>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n            >\r\n              <BasicForm />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ReduxFormView;\r\n"],"sourceRoot":""}