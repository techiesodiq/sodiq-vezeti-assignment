{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","components/ProjectCard.js","views/project/ProjectBrowseView/Header.js","views/project/ProjectBrowseView/Filter/MultiSelect.js","views/project/ProjectBrowseView/Filter/index.js","views/project/ProjectBrowseView/Results.js","views/project/ProjectBrowseView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","image","height","backgroundColor","palette","background","dark","likedButton","color","colors","red","membersIcon","marginLeft","spacing","marginRight","ProjectCard","className","project","rest","classes","useState","isLiked","setLiked","likesCount","setLikesCount","clsx","p","display","alignItems","mt","alt","src","author","avatar","ml","component","RouterLink","to","variant","title","moment","updatedAt","fromNow","pb","px","caption","py","container","justify","item","numeral","budget","format","currency","location","type","pl","pr","onClick","prevLikes","fontSize","membersCount","flexGrow","value","rating","size","readOnly","Header","Grid","Breadcrumbs","separator","aria-label","Link","Typography","Button","startIcon","SvgIcon","menuItem","padding","formControlLabel","width","margin","MultiSelect","label","options","onChange","anchorRef","openMenu","setOpenMenu","handleOptionToggle","event","newValue","target","checked","push","filter","ref","Menu","anchorEl","elevation","onClose","open","PaperProps","style","option","MenuItem","key","FormControlLabel","control","Checkbox","indexOf","selectOptions","searchInput","chip","Filter","inputValue","setInputValue","chips","setChips","handleMultiSelectChange","Card","Box","Input","disableUnderline","fullWidth","persist","onKeyUp","keyCode","includes","prevChips","placeholder","Divider","flexWrap","Chip","onDelete","prevChip","handleChipDelete","defaultChecked","position","bottom","left","content","primary","main","sortButton","textTransform","letterSpacing","Results","projects","sortRef","openSort","setOpenSort","selectedSort","setSelectedSort","mode","setMode","justifyContent","mb","length","ToggleButtonGroup","exclusive","ToggleButton","id","md","sm","xs","Pagination","count","ListItemText","minHeight","paddingTop","paddingBottom","ProjectBrowseView","isMountedRef","setProjects","getProjects","useCallback","a","axios","get","response","data","console","error","Page","Container","maxWidth"],"mappings":"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","file":"static/js/41.993f3936.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","const getInitials = (name = '') => {\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map((v) => v && v[0].toUpperCase())\n    .join('');\n};\n\nexport default getInitials;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { Users as UsersIcon } from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  membersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProjectCard = ({ className, project, ...rest }) => {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState(project.isLiked);\n  const [likesCount, setLikesCount] = useState(project.likesCount);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikesCount((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikesCount((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <CardMedia\n          className={classes.image}\n          image={project.image}\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Avatar\n            alt=\"Author\"\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n          <Box ml={2}>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Link>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"#\"\n                variant=\"h6\"\n              >\n                {project.author.name}\n              </Link>\n              {' '}\n              | Updated\n              {' '}\n              {moment(project.updatedAt).fromNow()}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {project.caption}\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {numeral(project.budget).format(`${project.currency}0,0.00`)}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Budget\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.location}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Location\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.type}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Type\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        {isLiked ? (\n          <Tooltip title=\"Unlike\">\n            <IconButton\n              className={classes.likedButton}\n              onClick={handleUnlike}\n            >\n              <FavoriteIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Like\">\n            <IconButton onClick={handleLike}>\n              <FavoriteBorderIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        )}\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {likesCount}\n        </Typography>\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n          className={classes.membersIcon}\n        >\n          <UsersIcon />\n        </SvgIcon>\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {project.membersCount}\n        </Typography>\n        <Box flexGrow={1} />\n        <Rating\n          value={project.rating}\n          size=\"small\"\n          readOnly\n        />\n      </Box>\n    </Card>\n  );\n};\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { PlusCircle as PlusIcon } from 'react-feather';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      alignItems=\"center\"\n      container\n      justify=\"space-between\"\n      spacing={3}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/projects\"\n            component={RouterLink}\n          >\n            Projects\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Browse\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          See the latest opportunities\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          component={RouterLink}\n          to=\"/app/projects/create\"\n          variant=\"contained\"\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <PlusIcon />\n            </SvgIcon>\n          }\n        >\n          Add new project\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useRef\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  menuItem: {\n    padding: 0\n  },\n  formControlLabel: {\n    padding: theme.spacing(0.5, 2),\n    width: '100%',\n    margin: 0\n  }\n}));\n\nconst MultiSelect = ({\n  label,\n  options,\n  value,\n  onChange\n}) => {\n  const classes = useStyles();\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  const handleOptionToggle = (event) => {\n    let newValue = [...value];\n\n    if (event.target.checked) {\n      newValue.push(event.target.value);\n    } else {\n      newValue = newValue.filter((item) => item !== event.target.value);\n    }\n\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        onClick={handleMenuOpen}\n        ref={anchorRef}\n      >\n        {label}\n        <ArrowDropDownIcon />\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        elevation={1}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ style: { width: 250 } }}\n      >\n        {options.map((option) => (\n          <MenuItem\n            className={classes.menuItem}\n            key={option}\n          >\n            <FormControlLabel\n              className={classes.formControlLabel}\n              control={(\n                <Checkbox\n                  checked={value.indexOf(option) > -1}\n                  onChange={handleOptionToggle}\n                  value={option}\n                />\n              )}\n              label={option}\n            />\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nMultiSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.array.isRequired\n};\n\nexport default MultiSelect;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  Checkbox,\n  Chip,\n  Divider,\n  FormControlLabel,\n  Input,\n  makeStyles\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MultiSelect from './MultiSelect';\n\nconst selectOptions = [\n  {\n    label: 'Type',\n    options: [\n      'Freelance',\n      'Full Time',\n      'Part Time',\n      'Internship']\n  },\n  {\n    label: 'Level',\n    options: ['Novice', 'Expert']\n  },\n  {\n    label: 'Location',\n    options: [\n      'Africa',\n      'Asia',\n      'Australia',\n      'Europe',\n      'North America',\n      'South America'\n    ]\n  },\n  {\n    label: 'Roles',\n    options: ['Android', 'Web Developer', 'iOS']\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  searchInput: {\n    marginLeft: theme.spacing(2)\n  },\n  chip: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst Filter = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState([\n    'Freelance',\n    'Full Time',\n    'Novice',\n    'Europe',\n    'Android',\n    'Web Developer'\n  ]);\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = (event) => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips((prevChips) => [...prevChips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = (chip) => {\n    setChips((prevChips) => prevChips.filter((prevChip) => chip !== prevChip));\n  };\n\n  const handleMultiSelectChange = (value) => {\n    setChips(value);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        p={2}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <SearchIcon />\n        <Input\n          disableUnderline\n          fullWidth\n          className={classes.searchInput}\n          onChange={handleInputChange}\n          onKeyUp={handleInputKeyup}\n          placeholder=\"Enter a keyword\"\n          value={inputValue}\n        />\n      </Box>\n      <Divider />\n      <Box\n        p={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        {chips.map((chip) => (\n          <Chip\n            className={classes.chip}\n            key={chip}\n            label={chip}\n            onDelete={() => handleChipDelete(chip)}\n          />\n        ))}\n      </Box>\n      <Divider />\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n        p={1}\n      >\n        {selectOptions.map((option) => (\n          <MultiSelect\n            key={option.label}\n            label={option.label}\n            onChange={handleMultiSelectChange}\n            options={option.options}\n            value={chips}\n          />\n        ))}\n        <Box flexGrow={1} />\n        <FormControlLabel\n          control={(\n            <Checkbox defaultChecked />\n          )}\n          label=\"In network\"\n        />\n      </Box>\n    </Card>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Filter;\n","import React, {\n  useState,\n  useRef\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Grid,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  ToggleButtonGroup,\n  ToggleButton,\n  Pagination\n} from '@material-ui/lab';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ProjectCard from 'src/components/ProjectCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    position: 'relative',\n    '&:after': {\n      position: 'absolute',\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  sortButton: {\n    textTransform: 'none',\n    letterSpacing: 0,\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, projects, ...rest }) => {\n  const classes = useStyles();\n  const sortRef = useRef(null);\n  const [openSort, setOpenSort] = useState(false);\n  const [selectedSort, setSelectedSort] = useState('Most popular');\n  const [mode, setMode] = useState('grid');\n\n  const handleSortOpen = () => {\n    setOpenSort(true);\n  };\n\n  const handleSortClose = () => {\n    setOpenSort(false);\n  };\n\n  const handleSortSelect = (value) => {\n    setSelectedSort(value);\n    setOpenSort(false);\n  };\n\n  const handleModeChange = (event, value) => {\n    setMode(value);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        flexWrap=\"wrap\"\n        mb={2}\n      >\n        <Typography\n          className={classes.title}\n          variant=\"h5\"\n          color=\"textPrimary\"\n        >\n          Showing\n          {' '}\n          {projects.length}\n          {' '}\n          projects\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Button\n            className={classes.sortButton}\n            onClick={handleSortOpen}\n            ref={sortRef}\n          >\n            {selectedSort}\n            <ArrowDropDownIcon />\n          </Button>\n          <ToggleButtonGroup\n            exclusive\n            onChange={handleModeChange}\n            size=\"small\"\n            value={mode}\n          >\n            <ToggleButton value=\"grid\">\n              <ViewModuleIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n      </Box>\n      <Grid\n        container\n        spacing={3}\n      >\n        {projects.map((project) => (\n          <Grid\n            item\n            key={project.id}\n            md={mode === 'grid' ? 4 : 12}\n            sm={mode === 'grid' ? 6 : 12}\n            xs={12}\n          >\n            <ProjectCard project={project} />\n          </Grid>\n        ))}\n      </Grid>\n      <Box\n        mt={6}\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <Pagination count={3} />\n      </Box>\n      <Menu\n        anchorEl={sortRef.current}\n        onClose={handleSortClose}\n        open={openSort}\n        elevation={1}\n      >\n        {['Most recent', 'Popular', 'Price high', 'Price low', 'On sale'].map(\n          (option) => (\n            <MenuItem\n              key={option}\n              onClick={() => handleSortSelect(option)}\n            >\n              <ListItemText primary={option} />\n            </MenuItem>\n          )\n        )}\n      </Menu>\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  projects: PropTypes.array.isRequired\n};\n\nexport default Results;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Filter from './Filter';\nimport Results from './Results';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst ProjectBrowseView = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState([]);\n\n  const getProjects = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/projects/projects');\n  \n      if (isMountedRef.current) {\n        setProjects(response.data.projects);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project List\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <Filter />\n        </Box>\n        <Box mt={6}>\n          <Results projects={projects} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProjectBrowseView;\n"],"sourceRoot":""}