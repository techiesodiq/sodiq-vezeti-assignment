{"version":3,"sources":["hooks/useIsMountedRef.js","components/PostAdd.js","components/PostCard/Reactions.js","components/PostCard/Comment.js","components/PostCard/CommentAdd.js","components/PostCard/index.js","views/social/FeedView/Header.js","views/social/FeedView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","inputContainer","flexGrow","paddingBottom","spacing","paddingLeft","paddingRight","paddingTop","divider","height","width","fileInput","display","PostAdd","className","rest","classes","fileInputRef","useState","value","setValue","user","useAuth","handleAttach","click","clsx","alignItems","variant","disableUnderline","fullWidth","onChange","event","persist","target","placeholder","name","title","color","length","edge","onClick","ref","type","likedButton","colors","red","Reactions","post","isLiked","setLiked","likes","setLikes","Tooltip","IconButton","prevLikes","fontSize","Typography","Box","marginBottom","bubble","borderRadius","shape","Comment","comment","Avatar","alt","component","RouterLink","src","author","avatar","to","p","ml","bgcolor","mb","Link","moment","createdAt","fromNow","message","marginLeft","CommentAdd","Paper","Input","Divider","date","media","backgroundPosition","PostCard","selectedImage","setSelectedImage","Card","CardHeader","disableTypography","subheader","px","pb","mt","CardActionArea","CardMedia","image","my","comments","map","key","id","large","onClose","Header","backgroundColor","palette","background","dark","minHeight","SocialFeedView","isMountedRef","posts","setPosts","getPosts","useCallback","a","axios","get","response","data","console","error","Page","Container","maxWidth"],"mappings":"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","file":"static/js/40.54ad85b6.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import React, {\n  useState,\n  useRef\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport useAuth from 'src/hooks/useAuth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  inputContainer: {\n    flexGrow: 1,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingTop: theme.spacing(0.5)\n  },\n  divider: {\n    height: 24,\n    width: 1\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst PostAdd = ({ className, ...rest } ) => {\n  const classes = useStyles();\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n  const { user } = useAuth();\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Paper\n            className={classes.inputContainer}\n            variant=\"outlined\"\n          >\n            <Input\n              disableUnderline\n              fullWidth\n              onChange={handleChange}\n              placeholder={`What's on your mind, ${user.name}`}\n            />\n          </Paper>\n          <Tooltip title=\"Send\">\n            <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n              <SendIcon />\n            </IconButton>\n          </Tooltip>\n          <Divider className={classes.divider} />\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n          <input\n            className={classes.fileInput}\n            ref={fileInputRef}\n            type=\"file\"\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nPostAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PostAdd;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ShareIcon from '@material-ui/icons/Share';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  }\n}));\n\nconst Reactions = ({ className, post, ...rest }) => {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState(post.isLiked);\n  const [likes, setLikes] = useState(post.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {isLiked ? (\n        <Tooltip title=\"Unlike\">\n          <IconButton\n            className={classes.likedButton}\n            onClick={handleUnlike}\n          >\n            <FavoriteIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Like\">\n          <IconButton onClick={handleLike}>\n            <FavoriteBorderIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Typography\n        color=\"textSecondary\"\n        variant=\"h6\"\n      >\n        {likes}\n      </Typography>\n      <Box flexGrow={1} />\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default Reactions;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  },\n  bubble: {\n    borderRadius: theme.shape.borderRadius\n  }\n}));\n\nconst Comment = ({ className, comment, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        component={RouterLink}\n        src={comment.author.avatar}\n        to=\"#\"\n      />\n      <Box\n        flexGrow={1}\n        p={2}\n        ml={2}\n        bgcolor=\"background.dark\"\n        className={classes.bubble}\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mb={1}\n        >\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h6\"\n          >\n            {comment.author.name}\n          </Link>\n          <Box flexGrow={1} />\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            {moment(comment.createdAt).fromNow()}\n          </Typography>\n        </Box>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          {comment.message}\n        </Typography>\n      </Box>\n    </div>\n  );\n};\n\nComment.propTypes = {\n  className: PropTypes.string,\n  comment: PropTypes.object.isRequired\n};\n\nexport default Comment;\n","import React, {\n  useRef,\n  useState\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport useAuth from 'src/hooks/useAuth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  inputContainer: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    paddingTop: theme.spacing(0.5)\n  },\n  divider: {\n    height: 24,\n    width: 1\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst CommentAdd = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={user.avatar}\n      />\n      <Paper\n        className={classes.inputContainer}\n        variant=\"outlined\"\n      >\n        <Input\n          disableUnderline\n          fullWidth\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n        />\n      </Paper>\n      <Tooltip title=\"Send\">\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n          <SendIcon />\n        </IconButton>\n      </Tooltip>\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Attach image\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AddPhotoIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Attach file\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AttachFileIcon />\n        </IconButton>\n      </Tooltip>\n      <input\n        className={classes.fileInput}\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </div>\n  );\n};\n\nCommentAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CommentAdd;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardActionArea,\n  CardHeader,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Reactions from './Reactions';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  }\n}));\n\nconst PostCard = ({ className, post, ...rest }) => {\n  const classes = useStyles();\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  return (\n    <>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader\n          avatar={(\n            <Avatar\n              alt=\"Person\"\n              component={RouterLink}\n              src={post.author.avatar}\n              to=\"#\"\n            />\n          )}\n          disableTypography\n          subheader={(\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          )}\n          title={(\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {post.author.name}\n            </Link>\n          )}\n        />\n        <Box px={3} pb={2}>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            {post.message}\n          </Typography>\n          {post.media && (\n          <Box mt={2}>\n            <CardActionArea onClick={() => setSelectedImage(post.media)}>\n              <CardMedia\n                className={classes.media}\n                image={post.media}\n              />\n            </CardActionArea>\n          </Box>\n          )}\n          <Box\n            mt={2}\n          >\n            <Reactions post={post} />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          {post.comments.map((comment) => (\n            <Comment\n              comment={comment}\n              key={comment.id}\n            />\n          ))}\n          <Box my={2}>\n            <Divider />\n          </Box>\n          <CommentAdd />\n        </Box>\n      </Card>\n      {selectedImage && (\n        <Lightbox\n          large={selectedImage}\n          onClose={() => setSelectedImage(null)}\n        />\n      )}\n    </>\n  );\n};\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        variant=\"overline\"\n        color=\"textSecondary\"\n      >\n        Social Feed\n      </Typography>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Here&apos;s what your connections posted\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport PostAdd from 'src/components/PostAdd';\nimport PostCard from 'src/components/PostCard';\nimport Header from './Header';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst SocialFeedView = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [posts, setPosts] = useState([]);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/social/feed');\n\n      if (isMountedRef.current) {\n        setPosts(response.data.posts);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Social Feed\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <PostAdd />\n        </Box>\n        {posts.map((post) => (\n          <Box\n            mt={3}\n            key={post.id}\n          >\n            <PostCard post={post} />\n          </Box>\n        ))}\n      </Container>\n    </Page>\n  );\n};\n\nexport default SocialFeedView;\n"],"sourceRoot":""}