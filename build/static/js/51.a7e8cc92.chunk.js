(this["webpackJsonpsodiq-vezeti-assignment"]=this["webpackJsonpsodiq-vezeti-assignment"]||[]).push([[51],{2093:function(n,t,e){"use strict";e.r(t),e.d(t,"readingTime",(function(){return c})),e.d(t,"default",(function(){return u})),e.d(t,"tableOfContents",(function(){return r})),e.d(t,"frontMatter",(function(){return d}));var s=e(28),a=e(0),o=e(334),p=(e(8),e(12),e(29),e(33)),i=(e(2086),e(576),Object({NODE_ENV:"production",PUBLIC_URL:"/techiesodiq.github.io/sodiq-vezeti-assignment",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_AUTH0_CLIENT_ID,Object({NODE_ENV:"production",PUBLIC_URL:"/techiesodiq.github.io/sodiq-vezeti-assignment",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_AUTH0_DOMAIN,Object({NODE_ENV:"production",PUBLIC_URL:"/techiesodiq.github.io/sodiq-vezeti-assignment",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_FIREBASE_API_KEY,Object({NODE_ENV:"production",PUBLIC_URL:"/techiesodiq.github.io/sodiq-vezeti-assignment",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_FIREBASE_APP_ID,Object({NODE_ENV:"production",PUBLIC_URL:"/techiesodiq.github.io/sodiq-vezeti-assignment",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_FIREBASE_AUTH_DOMAIN,Object({NODE_ENV:"production",PUBLIC_URL:"/techiesodiq.github.io/sodiq-vezeti-assignment",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_FIREBASE_DATABASE_URL,Object({NODE_ENV:"production",PUBLIC_URL:"/techiesodiq.github.io/sodiq-vezeti-assignment",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_FIREBASE_MESSAGING_SENDER_ID,Object({NODE_ENV:"production",PUBLIC_URL:"/techiesodiq.github.io/sodiq-vezeti-assignment",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_FIREBASE_PROJECT_ID,Object({NODE_ENV:"production",PUBLIC_URL:"/techiesodiq.github.io/sodiq-vezeti-assignment",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_FIREBASE_STORAGE_BUCKET,{isAuthenticated:!1,isInitialised:!1,user:null}),c=(Object(a.createContext)(Object(p.a)(Object(p.a)({},i),{},{method:"Auth0",loginWithPopup:function(){return Promise.resolve()},logout:function(){}})),{text:"4 min read",minutes:3.345,time:200700.00000000003,words:669}),l={};function u(n){var t=n.components,e=Object(s.a)(n,["components"]);return Object(o.b)("wrapper",Object.assign({},l,e,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"authentication"},"Authentication"),Object(o.b)("p",null,"Devias Kit Pro supports 3 authentication methods: ",Object(o.b)("a",{href:"https://auth0.com/"},"Auth0"),", ",Object(o.b)("a",{href:"https://firebase.google.com/docs/auth"},"Firebase Authentication"),", ",Object(o.b)("a",{href:"https://jwt.io/"},"JSON Web Token"),". You can switch between them at any time in a few of seconds. In our demo website we have Firebase by default, but we shipped with JWT version to allow you to start the application without having to configure the Auth0/Firebase api keys."),Object(o.b)("p",null,"We\u2019ve been testing multiple alternatives to support each integration easily without adding complexity to the project. We started with the concept of having all methods active at the same time under Redux with \u201cservice\u201d utils, then we decided that is too difficult and hard to modify, and we reimplemented it using React Context API."),Object(o.b)("h2",{id:"how-it-works"},"How it works"),Object(o.b)("p",null,"Accessing dashboard pages is only possible for authenticated users. If this condition is not fulfilled, the user is redirected to a login page. To make this work we implemented the \u201cGuard\u201d concept from Angular. It is simply a component that wraps a route and checks for user authentication status before allowing the navigation. To find more information about guards, please visit the \u201cRouting\u201d page."),Object(o.b)("p",null,"In the ",Object(o.b)("inlineCode",{parentName:"p"},"src/App.js")," (",Object(o.b)("inlineCode",{parentName:"p"},"src/App.tsx")," for TS version) we have this line to specify the auth provider:"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> AuthProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'src/contexts/JWTAuthContext\'</span><span class="token punctuation">;</span>\n'}}))),Object(o.b)("p",null,"This line imports the AuthProvider from the JSON Web Token method. In the ",Object(o.b)("inlineCode",{parentName:"p"},"src/contexts")," folder we have the all 3 methods."),Object(o.b)("p",null,"We use this provider to wrap the app content:"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Router</span></span> <span class="token attr-name">history</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>history<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AuthProvider</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GlobalStyles</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ScrollReset</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GoogleAnalytics</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CookiesNotification</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SettingsNotification</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token punctuation">{</span><span class="token function">renderRoutes</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">AuthProvider</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Router</span></span><span class="token punctuation">></span></span>\n'}}))),Object(o.b)("p",null,"The reason for having the ",Object(o.b)("inlineCode",{parentName:"p"},"AuthProvider")," under ",Object(o.b)("inlineCode",{parentName:"p"},"Router")," is to allow the Auth Context to have access to router history (if needed)."),Object(o.b)("p",null,"Now that we have the AuthProvider, we can use the context directly by importing ",Object(o.b)("inlineCode",{parentName:"p"},"useContext")," from React and specifying the context that we want to use or we can use the custom hook ",Object(o.b)("inlineCode",{parentName:"p"},"useAuth")," from ",Object(o.b)("inlineCode",{parentName:"p"},"src/hooks/useAuth.js")," (",Object(o.b)("inlineCode",{parentName:"p"},"src/hooks/useAuth.ts")," for TS version)."),Object(o.b)("h2",{id:"setup-optional"},"Setup (optional)"),Object(o.b)("h3",{id:"auth0"},"Auth0"),Object(o.b)("p",null,"To use Auth0 we need to configure the Auth0 Client first. The config object ",Object(o.b)("inlineCode",{parentName:"p"},"auth0Config")," can be found in ",Object(o.b)("inlineCode",{parentName:"p"},"src/config.js")," (",Object(o.b)("inlineCode",{parentName:"p"},"src/config.ts")," for TS version)."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">const</span> auth0Config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  client_id<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REACT_APP_AUTH0_CLIENT_ID</span><span class="token punctuation">,</span>\n  domain<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REACT_APP_AUTH0_DOMAIN</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}))),Object(o.b)("p",null,"Access your Auth0 application dashboard and get your own ",Object(o.b)("inlineCode",{parentName:"p"},"client_id")," and ",Object(o.b)("inlineCode",{parentName:"p"},"domain"),". Remember to setup your Auth0 Application according the the Auth0 documentation, Single Page Application - React."),Object(o.b)("p",null,"You can use the ",Object(o.b)("inlineCode",{parentName:"p"},".env")," method to be able to have different keys depending on your environment (development, staging or production). If you will be using ",Object(o.b)("inlineCode",{parentName:"p"},".env"),", in the ",Object(o.b)("inlineCode",{parentName:"p"},".env.example")," file you have the variables that we use in our project."),Object(o.b)("p",null,"This config object is being used in the ",Object(o.b)("inlineCode",{parentName:"p"},"src/contexts/Auth0Context.js")," (",Object(o.b)("inlineCode",{parentName:"p"},"src/contexts/Auth0Context.tsx")," for Ts version) to initialise a new Auth0 Client."),Object(o.b)("h3",{id:"firebase"},"Firebase"),Object(o.b)("p",null,"To use Firebase we need to configure the Firebase SDK first. The config object ",Object(o.b)("inlineCode",{parentName:"p"},"firebaseConfig")," can be found in ",Object(o.b)("inlineCode",{parentName:"p"},"src/config.js")," (",Object(o.b)("inlineCode",{parentName:"p"},"src/config.ts")," for TS version)."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">const</span> firebaseConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  apiKey<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REACT_APP_FIREBASE_API_KEY</span><span class="token punctuation">,</span>\n  appId<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REACT_APP_FIREBASE_APP_ID</span><span class="token punctuation">,</span>\n  authDomain<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REACT_APP_FIREBASE_AUTH_DOMAIN</span><span class="token punctuation">,</span>\n  databaseURL<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REACT_APP_FIREBASE_DATABASE_URL</span><span class="token punctuation">,</span>\n  messagingSenderId<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REACT_APP_FIREBASE_MESSAGING_SENDER_ID</span><span class="token punctuation">,</span>\n  projectId<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REACT_APP_FIREBASE_PROJECT_ID</span><span class="token punctuation">,</span>\n  storageBucket<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REACT_APP_FIREBASE_STORAGE_BUCKET</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}))),Object(o.b)("p",null,"Go to your Firebase Console to find your project keys."),Object(o.b)("p",null,"This config object is being used in ",Object(o.b)("inlineCode",{parentName:"p"},"src/lib/firebase.js")," (",Object(o.b)("inlineCode",{parentName:"p"},"src/lib/firebase.ts")," for TS version). This is the file that initilises the Firebase application that we use for authentication."),Object(o.b)("h2",{id:"switching-between-auth-methods"},"Switching between auth methods"),Object(o.b)("p",null,"The shipped project version uses by default the JWT method, but if you want to switch to Auth0 or Firebase after setup part, all you have to do is to update 2 import paths to specify the provider and it\u2019s done."),Object(o.b)("p",null,"Open ",Object(o.b)("inlineCode",{parentName:"p"},"src/App.js")," (",Object(o.b)("inlineCode",{parentName:"p"},"src/App.tsx")," for TS version) and update the following line:"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> AuthProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'src/contexts/JWTAuthContext\'</span><span class="token punctuation">;</span>\n'}}))),Object(o.b)("p",null,"to use ",Object(o.b)("inlineCode",{parentName:"p"},"Auth0Context")," or ",Object(o.b)("inlineCode",{parentName:"p"},"FirebaseAuthContext"),"."),Object(o.b)("p",null,"Example:"),Object(o.b)("p",null,"Now open ",Object(o.b)("inlineCode",{parentName:"p"},"src/hooks/useAuth.js")," (",Object(o.b)("inlineCode",{parentName:"p"},"src/hooks/useAuth.ts")," for TS version) and do the same by updating this line:"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> AuthContext <span class="token keyword">from</span> <span class="token string">\'src/contexts/JWTAuthContext\'</span><span class="token punctuation">;</span>\n'}}))),Object(o.b)("p",null,"to use ",Object(o.b)("inlineCode",{parentName:"p"},"Auth0Context")," or ",Object(o.b)("inlineCode",{parentName:"p"},"FirebaseAuthContext"),"."),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> AuthContext <span class="token keyword">from</span> <span class="token string">\'src/contexts/Auth0Context\'</span><span class="token punctuation">;</span>\n'}}))),Object(o.b)("h2",{id:"important"},"Important"),Object(o.b)("p",null,"If you switch to Auth0 or FirebaseAuth and the app does not load, this could mean that you forgot to setup the Firebase or Auth0 config objects."))}u.isMDXComponent=!0;var r=function(){return[{id:"how-it-works",level:2,title:"How it works",children:[]},{id:"setup-optional",level:2,title:"Setup (optional)",children:[{id:"auth0",level:3,title:"Auth0",children:[]},{id:"firebase",level:3,title:"Firebase",children:[]}]},{id:"switching-between-auth-methods",level:2,title:"Switching between auth methods",children:[]},{id:"important",level:2,title:"Important",children:[]}]},d={}}}]);
//# sourceMappingURL=51.a7e8cc92.chunk.js.map