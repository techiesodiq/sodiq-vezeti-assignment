{"version":3,"sources":["hooks/useIsMountedRef.js","components/PostAdd.js","components/PostCard/Reactions.js","components/PostCard/Comment.js","components/PostCard/CommentAdd.js","components/PostCard/index.js","views/social/FeedView/Header.js","views/social/FeedView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","inputContainer","flexGrow","paddingBottom","spacing","paddingLeft","paddingRight","paddingTop","divider","height","width","fileInput","display","PostAdd","className","rest","classes","fileInputRef","useState","value","setValue","user","useAuth","handleAttach","click","clsx","alignItems","variant","disableUnderline","fullWidth","onChange","event","persist","target","placeholder","name","title","color","length","edge","onClick","ref","type","likedButton","colors","red","Reactions","post","isLiked","setLiked","likes","setLikes","Tooltip","IconButton","prevLikes","fontSize","Typography","Box","marginBottom","bubble","borderRadius","shape","Comment","comment","Avatar","alt","component","RouterLink","src","author","avatar","to","p","ml","bgcolor","mb","Link","moment","createdAt","fromNow","message","marginLeft","CommentAdd","Paper","Input","Divider","date","media","backgroundPosition","PostCard","selectedImage","setSelectedImage","Card","CardHeader","disableTypography","subheader","px","pb","mt","CardActionArea","CardMedia","image","my","comments","map","key","id","large","onClose","Header","backgroundColor","palette","background","dark","minHeight","SocialFeedView","isMountedRef","posts","setPosts","getPosts","useCallback","a","axios","get","response","data","console","error","Page","Container","maxWidth"],"mappings":"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","file":"static/js/40.36cb8c65.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\r\n\r\nconst useIsMountedRef = () => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMountedRef;\r\n","import React, {\r\n  useState,\r\n  useRef\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Input,\r\n  Paper,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport useAuth from 'src/hooks/useAuth';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  inputContainer: {\r\n    flexGrow: 1,\r\n    paddingBottom: theme.spacing(0.5),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingTop: theme.spacing(0.5)\r\n  },\r\n  divider: {\r\n    height: 24,\r\n    width: 1\r\n  },\r\n  fileInput: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst PostAdd = ({ className, ...rest } ) => {\r\n  const classes = useStyles();\r\n  const fileInputRef = useRef(null);\r\n  const [value, setValue] = useState('');\r\n  const { user } = useAuth();\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleAttach = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Paper\r\n            className={classes.inputContainer}\r\n            variant=\"outlined\"\r\n          >\r\n            <Input\r\n              disableUnderline\r\n              fullWidth\r\n              onChange={handleChange}\r\n              placeholder={`What's on your mind, ${user.name}`}\r\n            />\r\n          </Paper>\r\n          <Tooltip title=\"Send\">\r\n            <IconButton color={value.length > 0 ? 'primary' : 'default'}>\r\n              <SendIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Divider className={classes.divider} />\r\n          <Tooltip title=\"Attach image\">\r\n            <IconButton\r\n              edge=\"end\"\r\n              onClick={handleAttach}\r\n            >\r\n              <AddPhotoIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Attach file\">\r\n            <IconButton\r\n              edge=\"end\"\r\n              onClick={handleAttach}\r\n            >\r\n              <AttachFileIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <input\r\n            className={classes.fileInput}\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPostAdd.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PostAdd;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  likedButton: {\r\n    color: colors.red[600]\r\n  }\r\n}));\r\n\r\nconst Reactions = ({ className, post, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [isLiked, setLiked] = useState(post.isLiked);\r\n  const [likes, setLikes] = useState(post.likes);\r\n\r\n  const handleLike = () => {\r\n    setLiked(true);\r\n    setLikes((prevLikes) => prevLikes + 1);\r\n  };\r\n\r\n  const handleUnlike = () => {\r\n    setLiked(false);\r\n    setLikes((prevLikes) => prevLikes - 1);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      {isLiked ? (\r\n        <Tooltip title=\"Unlike\">\r\n          <IconButton\r\n            className={classes.likedButton}\r\n            onClick={handleUnlike}\r\n          >\r\n            <FavoriteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Like\">\r\n          <IconButton onClick={handleLike}>\r\n            <FavoriteBorderIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        variant=\"h6\"\r\n      >\r\n        {likes}\r\n      </Typography>\r\n      <Box flexGrow={1} />\r\n      <IconButton>\r\n        <ShareIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactions.propTypes = {\r\n  className: PropTypes.string,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Reactions;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Link,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  bubble: {\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n}));\r\n\r\nconst Comment = ({ className, comment, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        component={RouterLink}\r\n        src={comment.author.avatar}\r\n        to=\"#\"\r\n      />\r\n      <Box\r\n        flexGrow={1}\r\n        p={2}\r\n        ml={2}\r\n        bgcolor=\"background.dark\"\r\n        className={classes.bubble}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          mb={1}\r\n        >\r\n          <Link\r\n            color=\"textPrimary\"\r\n            component={RouterLink}\r\n            to=\"#\"\r\n            variant=\"h6\"\r\n          >\r\n            {comment.author.name}\r\n          </Link>\r\n          <Box flexGrow={1} />\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            {moment(comment.createdAt).fromNow()}\r\n          </Typography>\r\n        </Box>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"textPrimary\"\r\n        >\r\n          {comment.message}\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  className: PropTypes.string,\r\n  comment: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Comment;\r\n","import React, {\r\n  useRef,\r\n  useState\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  Divider,\r\n  IconButton,\r\n  Input,\r\n  Paper,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport useAuth from 'src/hooks/useAuth';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  inputContainer: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(2),\r\n    paddingBottom: theme.spacing(0.5),\r\n    paddingLeft: theme.spacing(0.5),\r\n    paddingRight: theme.spacing(0.5),\r\n    paddingTop: theme.spacing(0.5)\r\n  },\r\n  divider: {\r\n    height: 24,\r\n    width: 1\r\n  },\r\n  fileInput: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst CommentAdd = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const { user } = useAuth();\r\n  const fileInputRef = useRef(null);\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleAttach = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        src={user.avatar}\r\n      />\r\n      <Paper\r\n        className={classes.inputContainer}\r\n        variant=\"outlined\"\r\n      >\r\n        <Input\r\n          disableUnderline\r\n          fullWidth\r\n          onChange={handleChange}\r\n          placeholder=\"Leave a message\"\r\n        />\r\n      </Paper>\r\n      <Tooltip title=\"Send\">\r\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Divider className={classes.divider} />\r\n      <Tooltip title=\"Attach image\">\r\n        <IconButton\r\n          edge=\"end\"\r\n          onClick={handleAttach}\r\n        >\r\n          <AddPhotoIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Attach file\">\r\n        <IconButton\r\n          edge=\"end\"\r\n          onClick={handleAttach}\r\n        >\r\n          <AttachFileIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <input\r\n        className={classes.fileInput}\r\n        ref={fileInputRef}\r\n        type=\"file\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentAdd.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default CommentAdd;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { Lightbox } from 'react-modal-image';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardHeader,\r\n  CardMedia,\r\n  Divider,\r\n  Link,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport Reactions from './Reactions';\r\nimport Comment from './Comment';\r\nimport CommentAdd from './CommentAdd';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  date: {\r\n    marginLeft: 6\r\n  },\r\n  media: {\r\n    height: 500,\r\n    backgroundPosition: 'top'\r\n  }\r\n}));\r\n\r\nconst PostCard = ({ className, post, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        className={clsx(classes.root, className)}\r\n        {...rest}\r\n      >\r\n        <CardHeader\r\n          avatar={(\r\n            <Avatar\r\n              alt=\"Person\"\r\n              component={RouterLink}\r\n              src={post.author.avatar}\r\n              to=\"#\"\r\n            />\r\n          )}\r\n          disableTypography\r\n          subheader={(\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n            >\r\n              <AccessTimeIcon fontSize=\"small\" />\r\n              <Typography\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n                className={classes.date}\r\n              >\r\n                {moment(post.createdAt).fromNow()}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          title={(\r\n            <Link\r\n              color=\"textPrimary\"\r\n              component={RouterLink}\r\n              to=\"#\"\r\n              variant=\"h6\"\r\n            >\r\n              {post.author.name}\r\n            </Link>\r\n          )}\r\n        />\r\n        <Box px={3} pb={2}>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textPrimary\"\r\n          >\r\n            {post.message}\r\n          </Typography>\r\n          {post.media && (\r\n          <Box mt={2}>\r\n            <CardActionArea onClick={() => setSelectedImage(post.media)}>\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={post.media}\r\n              />\r\n            </CardActionArea>\r\n          </Box>\r\n          )}\r\n          <Box\r\n            mt={2}\r\n          >\r\n            <Reactions post={post} />\r\n          </Box>\r\n          <Box my={2}>\r\n            <Divider />\r\n          </Box>\r\n          {post.comments.map((comment) => (\r\n            <Comment\r\n              comment={comment}\r\n              key={comment.id}\r\n            />\r\n          ))}\r\n          <Box my={2}>\r\n            <Divider />\r\n          </Box>\r\n          <CommentAdd />\r\n        </Box>\r\n      </Card>\r\n      {selectedImage && (\r\n        <Lightbox\r\n          large={selectedImage}\r\n          onClose={() => setSelectedImage(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  className: PropTypes.string,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PostCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Typography, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Typography\r\n        variant=\"overline\"\r\n        color=\"textSecondary\"\r\n      >\r\n        Social Feed\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h3\"\r\n        color=\"textPrimary\"\r\n      >\r\n        Here&apos;s what your connections posted\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback\r\n} from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport Page from 'src/components/Page';\r\nimport PostAdd from 'src/components/PostAdd';\r\nimport PostCard from 'src/components/PostCard';\r\nimport Header from './Header';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst SocialFeedView = () => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const getPosts = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/social/feed');\r\n\r\n      if (isMountedRef.current) {\r\n        setPosts(response.data.posts);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Social Feed\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Header />\r\n        <Box mt={3}>\r\n          <PostAdd />\r\n        </Box>\r\n        {posts.map((post) => (\r\n          <Box\r\n            mt={3}\r\n            key={post.id}\r\n          >\r\n            <PostCard post={post} />\r\n          </Box>\r\n        ))}\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SocialFeedView;\r\n"],"sourceRoot":""}